"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@zag-js";
exports.ids = ["vendor-chunks/@zag-js"];
exports.modules = {

/***/ "(ssr)/./node_modules/@zag-js/accordion/dist/index.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/@zag-js/accordion/dist/index.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   itemProps: () => (/* binding */ itemProps),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitItemProps: () => (/* binding */ splitItemProps),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n// src/accordion.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"accordion\").parts(\"root\", \"item\", \"itemTrigger\", \"itemContent\", \"itemIndicator\");\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getRootId: (ctx) => ctx.ids?.root ?? `accordion:${ctx.id}`,\n  getItemId: (ctx, value) => ctx.ids?.item?.(value) ?? `accordion:${ctx.id}:item:${value}`,\n  getItemContentId: (ctx, value) => ctx.ids?.itemContent?.(value) ?? `accordion:${ctx.id}:content:${value}`,\n  getItemTriggerId: (ctx, value) => ctx.ids?.itemTrigger?.(value) ?? `accordion:${ctx.id}:trigger:${value}`,\n  getRootEl: (ctx) => dom.getById(ctx, dom.getRootId(ctx)),\n  getTriggerEls: (ctx) => {\n    const ownerId = CSS.escape(dom.getRootId(ctx));\n    const selector = `[aria-controls][data-ownedby='${ownerId}']:not([disabled])`;\n    return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.queryAll)(dom.getRootEl(ctx), selector);\n  },\n  getFirstTriggerEl: (ctx) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.first)(dom.getTriggerEls(ctx)),\n  getLastTriggerEl: (ctx) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.last)(dom.getTriggerEls(ctx)),\n  getNextTriggerEl: (ctx, id) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.nextById)(dom.getTriggerEls(ctx), dom.getItemTriggerId(ctx, id)),\n  getPrevTriggerEl: (ctx, id) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.prevById)(dom.getTriggerEls(ctx), dom.getItemTriggerId(ctx, id))\n});\n\n// src/accordion.connect.ts\nfunction connect(state, send, normalize) {\n  const focusedValue = state.context.focusedValue;\n  const value = state.context.value;\n  const multiple = state.context.multiple;\n  function setValue(value2) {\n    let nextValue = value2;\n    if (multiple && nextValue.length > 1) {\n      nextValue = [nextValue[0]];\n    }\n    send({ type: \"VALUE.SET\", value: nextValue });\n  }\n  function getItemState(props2) {\n    return {\n      expanded: value.includes(props2.value),\n      focused: focusedValue === props2.value,\n      disabled: Boolean(props2.disabled ?? state.context.disabled)\n    };\n  }\n  return {\n    focusedValue,\n    value,\n    setValue,\n    getItemState,\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: state.context.dir,\n        id: dom.getRootId(state.context),\n        \"data-orientation\": state.context.orientation\n      });\n    },\n    getItemProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        ...parts.item.attrs,\n        dir: state.context.dir,\n        id: dom.getItemId(state.context, props2.value),\n        \"data-state\": itemState.expanded ? \"open\" : \"closed\",\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.focused),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.disabled),\n        \"data-orientation\": state.context.orientation\n      });\n    },\n    getItemContentProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        ...parts.itemContent.attrs,\n        dir: state.context.dir,\n        role: \"region\",\n        id: dom.getItemContentId(state.context, props2.value),\n        \"aria-labelledby\": dom.getItemTriggerId(state.context, props2.value),\n        hidden: !itemState.expanded,\n        \"data-state\": itemState.expanded ? \"open\" : \"closed\",\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.disabled),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.focused),\n        \"data-orientation\": state.context.orientation\n      });\n    },\n    getItemIndicatorProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        ...parts.itemIndicator.attrs,\n        dir: state.context.dir,\n        \"aria-hidden\": true,\n        \"data-state\": itemState.expanded ? \"open\" : \"closed\",\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.disabled),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.focused),\n        \"data-orientation\": state.context.orientation\n      });\n    },\n    getItemTriggerProps(props2) {\n      const { value: value2 } = props2;\n      const itemState = getItemState(props2);\n      return normalize.button({\n        ...parts.itemTrigger.attrs,\n        type: \"button\",\n        dir: state.context.dir,\n        id: dom.getItemTriggerId(state.context, value2),\n        \"aria-controls\": dom.getItemContentId(state.context, value2),\n        \"aria-expanded\": itemState.expanded,\n        disabled: itemState.disabled,\n        \"data-orientation\": state.context.orientation,\n        \"aria-disabled\": itemState.disabled,\n        \"data-state\": itemState.expanded ? \"open\" : \"closed\",\n        \"data-ownedby\": dom.getRootId(state.context),\n        onFocus() {\n          if (itemState.disabled) return;\n          send({ type: \"TRIGGER.FOCUS\", value: value2 });\n        },\n        onBlur() {\n          if (itemState.disabled) return;\n          send(\"TRIGGER.BLUR\");\n        },\n        onClick(event) {\n          if (itemState.disabled) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isSafari)()) {\n            event.currentTarget.focus();\n          }\n          send({ type: \"TRIGGER.CLICK\", value: value2 });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (itemState.disabled) return;\n          const keyMap = {\n            ArrowDown() {\n              if (state.context.isHorizontal) return;\n              send({ type: \"GOTO.NEXT\", value: value2 });\n            },\n            ArrowUp() {\n              if (state.context.isHorizontal) return;\n              send({ type: \"GOTO.PREV\", value: value2 });\n            },\n            ArrowRight() {\n              if (!state.context.isHorizontal) return;\n              send({ type: \"GOTO.NEXT\", value: value2 });\n            },\n            ArrowLeft() {\n              if (!state.context.isHorizontal) return;\n              send({ type: \"GOTO.PREV\", value: value2 });\n            },\n            Home() {\n              send({ type: \"GOTO.FIRST\", value: value2 });\n            },\n            End() {\n              send({ type: \"GOTO.LAST\", value: value2 });\n            }\n          };\n          const key = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventKey)(event, {\n            dir: state.context.dir,\n            orientation: state.context.orientation\n          });\n          const exec = keyMap[key];\n          if (exec) {\n            exec(event);\n            event.preventDefault();\n          }\n        }\n      });\n    }\n  };\n}\nvar { and, not } = _zag_js_core__WEBPACK_IMPORTED_MODULE_3__.guards;\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)(\n    {\n      id: \"accordion\",\n      initial: \"idle\",\n      context: {\n        focusedValue: null,\n        value: [],\n        collapsible: false,\n        multiple: false,\n        orientation: \"vertical\",\n        ...ctx\n      },\n      watch: {\n        value: \"coarseValue\",\n        multiple: \"coarseValue\"\n      },\n      created: \"coarseValue\",\n      computed: {\n        isHorizontal: (ctx2) => ctx2.orientation === \"horizontal\"\n      },\n      on: {\n        \"VALUE.SET\": {\n          actions: [\"setValue\"]\n        }\n      },\n      states: {\n        idle: {\n          on: {\n            \"TRIGGER.FOCUS\": {\n              target: \"focused\",\n              actions: \"setFocusedValue\"\n            }\n          }\n        },\n        focused: {\n          on: {\n            \"GOTO.NEXT\": {\n              actions: \"focusNextTrigger\"\n            },\n            \"GOTO.PREV\": {\n              actions: \"focusPrevTrigger\"\n            },\n            \"TRIGGER.CLICK\": [\n              {\n                guard: and(\"isExpanded\", \"canToggle\"),\n                actions: [\"collapse\"]\n              },\n              {\n                guard: not(\"isExpanded\"),\n                actions: [\"expand\"]\n              }\n            ],\n            \"GOTO.FIRST\": {\n              actions: \"focusFirstTrigger\"\n            },\n            \"GOTO.LAST\": {\n              actions: \"focusLastTrigger\"\n            },\n            \"TRIGGER.BLUR\": {\n              target: \"idle\",\n              actions: \"clearFocusedValue\"\n            }\n          }\n        }\n      }\n    },\n    {\n      guards: {\n        canToggle: (ctx2) => !!ctx2.collapsible || !!ctx2.multiple,\n        isExpanded: (ctx2, evt) => ctx2.value.includes(evt.value)\n      },\n      actions: {\n        collapse(ctx2, evt) {\n          const next = ctx2.multiple ? (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.remove)(ctx2.value, evt.value) : [];\n          set.value(ctx2, ctx2.multiple ? next : []);\n        },\n        expand(ctx2, evt) {\n          const next = ctx2.multiple ? (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.add)(ctx2.value, evt.value) : [evt.value];\n          set.value(ctx2, next);\n        },\n        focusFirstTrigger(ctx2) {\n          dom.getFirstTriggerEl(ctx2)?.focus();\n        },\n        focusLastTrigger(ctx2) {\n          dom.getLastTriggerEl(ctx2)?.focus();\n        },\n        focusNextTrigger(ctx2) {\n          if (!ctx2.focusedValue) return;\n          const triggerEl = dom.getNextTriggerEl(ctx2, ctx2.focusedValue);\n          triggerEl?.focus();\n        },\n        focusPrevTrigger(ctx2) {\n          if (!ctx2.focusedValue) return;\n          const triggerEl = dom.getPrevTriggerEl(ctx2, ctx2.focusedValue);\n          triggerEl?.focus();\n        },\n        setFocusedValue(ctx2, evt) {\n          set.focusedValue(ctx2, evt.value);\n        },\n        clearFocusedValue(ctx2) {\n          set.focusedValue(ctx2, null);\n        },\n        setValue(ctx2, evt) {\n          set.value(ctx2, evt.value);\n        },\n        coarseValue(ctx2) {\n          if (!ctx2.multiple && ctx2.value.length > 1) {\n            (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.warn)(`The value of accordion should be a single value when multiple is false.`);\n            ctx2.value = [ctx2.value[0]];\n          }\n        }\n      }\n    }\n  );\n}\nvar invoke = {\n  change(ctx) {\n    ctx.onValueChange?.({ value: Array.from(ctx.value) });\n  },\n  focusChange(ctx) {\n    ctx.onFocusChange?.({ value: ctx.focusedValue });\n  }\n};\nvar set = {\n  value(ctx, value) {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual)(ctx.value, value)) return;\n    ctx.value = value;\n    invoke.change(ctx);\n  },\n  focusedValue(ctx, value) {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual)(ctx.focusedValue, value)) return;\n    ctx.focusedValue = value;\n    invoke.focusChange(ctx);\n  }\n};\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\n  \"collapsible\",\n  \"dir\",\n  \"disabled\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"multiple\",\n  \"onFocusChange\",\n  \"onValueChange\",\n  \"orientation\",\n  \"value\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\nvar itemProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\"value\", \"disabled\"]);\nvar splitItemProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(itemProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/accordion/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs":
/*!*****************************************************!*\
  !*** ./node_modules/@zag-js/anatomy/dist/index.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAnatomy: () => (/* binding */ createAnatomy)\n/* harmony export */ });\n// src/create-anatomy.ts\nvar createAnatomy = (name, parts = []) => ({\n  parts: (...values) => {\n    if (isEmpty(parts)) {\n      return createAnatomy(name, values);\n    }\n    throw new Error(\"createAnatomy().parts(...) should only be called once. Did you mean to use .extendWith(...) ?\");\n  },\n  extendWith: (...values) => createAnatomy(name, [...parts, ...values]),\n  rename: (newName) => createAnatomy(newName, parts),\n  keys: () => parts,\n  build: () => [...new Set(parts)].reduce(\n    (prev, part) => Object.assign(prev, {\n      [part]: {\n        selector: [\n          `&[data-scope=\"${toKebabCase(name)}\"][data-part=\"${toKebabCase(part)}\"]`,\n          `& [data-scope=\"${toKebabCase(name)}\"][data-part=\"${toKebabCase(part)}\"]`\n        ].join(\", \"),\n        attrs: { \"data-scope\": toKebabCase(name), \"data-part\": toKebabCase(part) }\n      }\n    }),\n    {}\n  )\n});\nvar toKebabCase = (value) => value.replace(/([A-Z])([A-Z])/g, \"$1-$2\").replace(/([a-z])([A-Z])/g, \"$1-$2\").replace(/[\\s_]+/g, \"-\").toLowerCase();\nvar isEmpty = (v) => v.length === 0;\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9hbmF0b215L2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixrQkFBa0IsZ0JBQWdCLGtCQUFrQjtBQUMvRSw0QkFBNEIsa0JBQWtCLGdCQUFnQixrQkFBa0I7QUFDaEY7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBOztBQUV5QiIsInNvdXJjZXMiOlsiL1VzZXJzL3BoaWxpYWhhbW1vbmQvRGVza3RvcC9sZWFybmVyLWFwcC1zeXN0ZW0vbm9kZV9tb2R1bGVzL0B6YWctanMvYW5hdG9teS9kaXN0L2luZGV4Lm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvY3JlYXRlLWFuYXRvbXkudHNcbnZhciBjcmVhdGVBbmF0b215ID0gKG5hbWUsIHBhcnRzID0gW10pID0+ICh7XG4gIHBhcnRzOiAoLi4udmFsdWVzKSA9PiB7XG4gICAgaWYgKGlzRW1wdHkocGFydHMpKSB7XG4gICAgICByZXR1cm4gY3JlYXRlQW5hdG9teShuYW1lLCB2YWx1ZXMpO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJjcmVhdGVBbmF0b215KCkucGFydHMoLi4uKSBzaG91bGQgb25seSBiZSBjYWxsZWQgb25jZS4gRGlkIHlvdSBtZWFuIHRvIHVzZSAuZXh0ZW5kV2l0aCguLi4pID9cIik7XG4gIH0sXG4gIGV4dGVuZFdpdGg6ICguLi52YWx1ZXMpID0+IGNyZWF0ZUFuYXRvbXkobmFtZSwgWy4uLnBhcnRzLCAuLi52YWx1ZXNdKSxcbiAgcmVuYW1lOiAobmV3TmFtZSkgPT4gY3JlYXRlQW5hdG9teShuZXdOYW1lLCBwYXJ0cyksXG4gIGtleXM6ICgpID0+IHBhcnRzLFxuICBidWlsZDogKCkgPT4gWy4uLm5ldyBTZXQocGFydHMpXS5yZWR1Y2UoXG4gICAgKHByZXYsIHBhcnQpID0+IE9iamVjdC5hc3NpZ24ocHJldiwge1xuICAgICAgW3BhcnRdOiB7XG4gICAgICAgIHNlbGVjdG9yOiBbXG4gICAgICAgICAgYCZbZGF0YS1zY29wZT1cIiR7dG9LZWJhYkNhc2UobmFtZSl9XCJdW2RhdGEtcGFydD1cIiR7dG9LZWJhYkNhc2UocGFydCl9XCJdYCxcbiAgICAgICAgICBgJiBbZGF0YS1zY29wZT1cIiR7dG9LZWJhYkNhc2UobmFtZSl9XCJdW2RhdGEtcGFydD1cIiR7dG9LZWJhYkNhc2UocGFydCl9XCJdYFxuICAgICAgICBdLmpvaW4oXCIsIFwiKSxcbiAgICAgICAgYXR0cnM6IHsgXCJkYXRhLXNjb3BlXCI6IHRvS2ViYWJDYXNlKG5hbWUpLCBcImRhdGEtcGFydFwiOiB0b0tlYmFiQ2FzZShwYXJ0KSB9XG4gICAgICB9XG4gICAgfSksXG4gICAge31cbiAgKVxufSk7XG52YXIgdG9LZWJhYkNhc2UgPSAodmFsdWUpID0+IHZhbHVlLnJlcGxhY2UoLyhbQS1aXSkoW0EtWl0pL2csIFwiJDEtJDJcIikucmVwbGFjZSgvKFthLXpdKShbQS1aXSkvZywgXCIkMS0kMlwiKS5yZXBsYWNlKC9bXFxzX10rL2csIFwiLVwiKS50b0xvd2VyQ2FzZSgpO1xudmFyIGlzRW1wdHkgPSAodikgPT4gdi5sZW5ndGggPT09IDA7XG5cbmV4cG9ydCB7IGNyZWF0ZUFuYXRvbXkgfTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/aria-hidden/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@zag-js/aria-hidden/dist/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ariaHidden: () => (/* binding */ ariaHidden)\n/* harmony export */ });\n// src/walk-tree-outside.ts\nvar counterMap = /* @__PURE__ */ new WeakMap();\nvar uncontrolledNodes = /* @__PURE__ */ new WeakMap();\nvar markerMap = {};\nvar lockCount = 0;\nvar unwrapHost = (node) => node && (node.host || unwrapHost(node.parentNode));\nvar correctTargets = (parent, targets) => targets.map((target) => {\n  if (parent.contains(target)) return target;\n  const correctedTarget = unwrapHost(target);\n  if (correctedTarget && parent.contains(correctedTarget)) {\n    return correctedTarget;\n  }\n  console.error(\"[zag-js > ariaHidden] target\", target, \"in not contained inside\", parent, \". Doing nothing\");\n  return null;\n}).filter((x) => Boolean(x));\nvar isIgnoredNode = (node) => {\n  if (node.localName === \"next-route-announcer\") return true;\n  if (node.localName === \"script\") return true;\n  if (node.hasAttribute(\"aria-live\")) return true;\n  return node.matches(\"[data-live-announcer]\");\n};\nvar walkTreeOutside = (originalTarget, props) => {\n  const { parentNode, markerName, controlAttribute } = props;\n  const targets = correctTargets(parentNode, Array.isArray(originalTarget) ? originalTarget : [originalTarget]);\n  markerMap[markerName] || (markerMap[markerName] = /* @__PURE__ */ new WeakMap());\n  const markerCounter = markerMap[markerName];\n  const hiddenNodes = [];\n  const elementsToKeep = /* @__PURE__ */ new Set();\n  const elementsToStop = new Set(targets);\n  const keep = (el) => {\n    if (!el || elementsToKeep.has(el)) return;\n    elementsToKeep.add(el);\n    keep(el.parentNode);\n  };\n  targets.forEach(keep);\n  const deep = (parent) => {\n    if (!parent || elementsToStop.has(parent)) {\n      return;\n    }\n    Array.prototype.forEach.call(parent.children, (node) => {\n      if (elementsToKeep.has(node)) {\n        deep(node);\n      } else {\n        try {\n          if (isIgnoredNode(node)) return;\n          const attr = node.getAttribute(controlAttribute);\n          const alreadyHidden = attr !== null && attr !== \"false\";\n          const counterValue = (counterMap.get(node) || 0) + 1;\n          const markerValue = (markerCounter.get(node) || 0) + 1;\n          counterMap.set(node, counterValue);\n          markerCounter.set(node, markerValue);\n          hiddenNodes.push(node);\n          if (counterValue === 1 && alreadyHidden) {\n            uncontrolledNodes.set(node, true);\n          }\n          if (markerValue === 1) {\n            node.setAttribute(markerName, \"\");\n          }\n          if (!alreadyHidden) {\n            node.setAttribute(controlAttribute, \"\");\n          }\n        } catch (e) {\n          console.error(\"[zag-js > ariaHidden] cannot operate on \", node, e);\n        }\n      }\n    });\n  };\n  deep(parentNode);\n  elementsToKeep.clear();\n  lockCount++;\n  return () => {\n    hiddenNodes.forEach((node) => {\n      const counterValue = counterMap.get(node) - 1;\n      const markerValue = markerCounter.get(node) - 1;\n      counterMap.set(node, counterValue);\n      markerCounter.set(node, markerValue);\n      if (!counterValue) {\n        if (!uncontrolledNodes.has(node)) {\n          node.removeAttribute(controlAttribute);\n        }\n        uncontrolledNodes.delete(node);\n      }\n      if (!markerValue) {\n        node.removeAttribute(markerName);\n      }\n    });\n    lockCount--;\n    if (!lockCount) {\n      counterMap = /* @__PURE__ */ new WeakMap();\n      counterMap = /* @__PURE__ */ new WeakMap();\n      uncontrolledNodes = /* @__PURE__ */ new WeakMap();\n      markerMap = {};\n    }\n  };\n};\n\n// src/aria-hidden.ts\nvar getParentNode = (originalTarget) => {\n  const target = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;\n  return target.ownerDocument.body;\n};\nvar hideOthers = (originalTarget, parentNode = getParentNode(originalTarget), markerName = \"data-aria-hidden\") => {\n  if (!parentNode) return;\n  return walkTreeOutside(originalTarget, {\n    parentNode,\n    markerName,\n    controlAttribute: \"aria-hidden\"\n  });\n};\n\n// src/index.ts\nvar raf = (fn) => {\n  const frameId = requestAnimationFrame(() => fn());\n  return () => cancelAnimationFrame(frameId);\n};\nfunction ariaHidden(targetsOrFn, options = {}) {\n  const { defer = true } = options;\n  const func = defer ? raf : (v) => v();\n  const cleanups = [];\n  cleanups.push(\n    func(() => {\n      const targets = typeof targetsOrFn === \"function\" ? targetsOrFn() : targetsOrFn;\n      const elements = targets.filter(Boolean);\n      if (elements.length === 0) return;\n      cleanups.push(hideOthers(elements));\n    })\n  );\n  return () => {\n    cleanups.forEach((fn) => fn?.());\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9hcmlhLWhpZGRlbi9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsMkNBQTJDO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QyxVQUFVLGVBQWU7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVzQiIsInNvdXJjZXMiOlsiL1VzZXJzL3BoaWxpYWhhbW1vbmQvRGVza3RvcC9sZWFybmVyLWFwcC1zeXN0ZW0vbm9kZV9tb2R1bGVzL0B6YWctanMvYXJpYS1oaWRkZW4vZGlzdC9pbmRleC5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3dhbGstdHJlZS1vdXRzaWRlLnRzXG52YXIgY291bnRlck1hcCA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgV2Vha01hcCgpO1xudmFyIHVuY29udHJvbGxlZE5vZGVzID0gLyogQF9fUFVSRV9fICovIG5ldyBXZWFrTWFwKCk7XG52YXIgbWFya2VyTWFwID0ge307XG52YXIgbG9ja0NvdW50ID0gMDtcbnZhciB1bndyYXBIb3N0ID0gKG5vZGUpID0+IG5vZGUgJiYgKG5vZGUuaG9zdCB8fCB1bndyYXBIb3N0KG5vZGUucGFyZW50Tm9kZSkpO1xudmFyIGNvcnJlY3RUYXJnZXRzID0gKHBhcmVudCwgdGFyZ2V0cykgPT4gdGFyZ2V0cy5tYXAoKHRhcmdldCkgPT4ge1xuICBpZiAocGFyZW50LmNvbnRhaW5zKHRhcmdldCkpIHJldHVybiB0YXJnZXQ7XG4gIGNvbnN0IGNvcnJlY3RlZFRhcmdldCA9IHVud3JhcEhvc3QodGFyZ2V0KTtcbiAgaWYgKGNvcnJlY3RlZFRhcmdldCAmJiBwYXJlbnQuY29udGFpbnMoY29ycmVjdGVkVGFyZ2V0KSkge1xuICAgIHJldHVybiBjb3JyZWN0ZWRUYXJnZXQ7XG4gIH1cbiAgY29uc29sZS5lcnJvcihcIlt6YWctanMgPiBhcmlhSGlkZGVuXSB0YXJnZXRcIiwgdGFyZ2V0LCBcImluIG5vdCBjb250YWluZWQgaW5zaWRlXCIsIHBhcmVudCwgXCIuIERvaW5nIG5vdGhpbmdcIik7XG4gIHJldHVybiBudWxsO1xufSkuZmlsdGVyKCh4KSA9PiBCb29sZWFuKHgpKTtcbnZhciBpc0lnbm9yZWROb2RlID0gKG5vZGUpID0+IHtcbiAgaWYgKG5vZGUubG9jYWxOYW1lID09PSBcIm5leHQtcm91dGUtYW5ub3VuY2VyXCIpIHJldHVybiB0cnVlO1xuICBpZiAobm9kZS5sb2NhbE5hbWUgPT09IFwic2NyaXB0XCIpIHJldHVybiB0cnVlO1xuICBpZiAobm9kZS5oYXNBdHRyaWJ1dGUoXCJhcmlhLWxpdmVcIikpIHJldHVybiB0cnVlO1xuICByZXR1cm4gbm9kZS5tYXRjaGVzKFwiW2RhdGEtbGl2ZS1hbm5vdW5jZXJdXCIpO1xufTtcbnZhciB3YWxrVHJlZU91dHNpZGUgPSAob3JpZ2luYWxUYXJnZXQsIHByb3BzKSA9PiB7XG4gIGNvbnN0IHsgcGFyZW50Tm9kZSwgbWFya2VyTmFtZSwgY29udHJvbEF0dHJpYnV0ZSB9ID0gcHJvcHM7XG4gIGNvbnN0IHRhcmdldHMgPSBjb3JyZWN0VGFyZ2V0cyhwYXJlbnROb2RlLCBBcnJheS5pc0FycmF5KG9yaWdpbmFsVGFyZ2V0KSA/IG9yaWdpbmFsVGFyZ2V0IDogW29yaWdpbmFsVGFyZ2V0XSk7XG4gIG1hcmtlck1hcFttYXJrZXJOYW1lXSB8fCAobWFya2VyTWFwW21hcmtlck5hbWVdID0gLyogQF9fUFVSRV9fICovIG5ldyBXZWFrTWFwKCkpO1xuICBjb25zdCBtYXJrZXJDb3VudGVyID0gbWFya2VyTWFwW21hcmtlck5hbWVdO1xuICBjb25zdCBoaWRkZW5Ob2RlcyA9IFtdO1xuICBjb25zdCBlbGVtZW50c1RvS2VlcCA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KCk7XG4gIGNvbnN0IGVsZW1lbnRzVG9TdG9wID0gbmV3IFNldCh0YXJnZXRzKTtcbiAgY29uc3Qga2VlcCA9IChlbCkgPT4ge1xuICAgIGlmICghZWwgfHwgZWxlbWVudHNUb0tlZXAuaGFzKGVsKSkgcmV0dXJuO1xuICAgIGVsZW1lbnRzVG9LZWVwLmFkZChlbCk7XG4gICAga2VlcChlbC5wYXJlbnROb2RlKTtcbiAgfTtcbiAgdGFyZ2V0cy5mb3JFYWNoKGtlZXApO1xuICBjb25zdCBkZWVwID0gKHBhcmVudCkgPT4ge1xuICAgIGlmICghcGFyZW50IHx8IGVsZW1lbnRzVG9TdG9wLmhhcyhwYXJlbnQpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIEFycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwocGFyZW50LmNoaWxkcmVuLCAobm9kZSkgPT4ge1xuICAgICAgaWYgKGVsZW1lbnRzVG9LZWVwLmhhcyhub2RlKSkge1xuICAgICAgICBkZWVwKG5vZGUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBpZiAoaXNJZ25vcmVkTm9kZShub2RlKSkgcmV0dXJuO1xuICAgICAgICAgIGNvbnN0IGF0dHIgPSBub2RlLmdldEF0dHJpYnV0ZShjb250cm9sQXR0cmlidXRlKTtcbiAgICAgICAgICBjb25zdCBhbHJlYWR5SGlkZGVuID0gYXR0ciAhPT0gbnVsbCAmJiBhdHRyICE9PSBcImZhbHNlXCI7XG4gICAgICAgICAgY29uc3QgY291bnRlclZhbHVlID0gKGNvdW50ZXJNYXAuZ2V0KG5vZGUpIHx8IDApICsgMTtcbiAgICAgICAgICBjb25zdCBtYXJrZXJWYWx1ZSA9IChtYXJrZXJDb3VudGVyLmdldChub2RlKSB8fCAwKSArIDE7XG4gICAgICAgICAgY291bnRlck1hcC5zZXQobm9kZSwgY291bnRlclZhbHVlKTtcbiAgICAgICAgICBtYXJrZXJDb3VudGVyLnNldChub2RlLCBtYXJrZXJWYWx1ZSk7XG4gICAgICAgICAgaGlkZGVuTm9kZXMucHVzaChub2RlKTtcbiAgICAgICAgICBpZiAoY291bnRlclZhbHVlID09PSAxICYmIGFscmVhZHlIaWRkZW4pIHtcbiAgICAgICAgICAgIHVuY29udHJvbGxlZE5vZGVzLnNldChub2RlLCB0cnVlKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKG1hcmtlclZhbHVlID09PSAxKSB7XG4gICAgICAgICAgICBub2RlLnNldEF0dHJpYnV0ZShtYXJrZXJOYW1lLCBcIlwiKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKCFhbHJlYWR5SGlkZGVuKSB7XG4gICAgICAgICAgICBub2RlLnNldEF0dHJpYnV0ZShjb250cm9sQXR0cmlidXRlLCBcIlwiKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKFwiW3phZy1qcyA+IGFyaWFIaWRkZW5dIGNhbm5vdCBvcGVyYXRlIG9uIFwiLCBub2RlLCBlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICB9O1xuICBkZWVwKHBhcmVudE5vZGUpO1xuICBlbGVtZW50c1RvS2VlcC5jbGVhcigpO1xuICBsb2NrQ291bnQrKztcbiAgcmV0dXJuICgpID0+IHtcbiAgICBoaWRkZW5Ob2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XG4gICAgICBjb25zdCBjb3VudGVyVmFsdWUgPSBjb3VudGVyTWFwLmdldChub2RlKSAtIDE7XG4gICAgICBjb25zdCBtYXJrZXJWYWx1ZSA9IG1hcmtlckNvdW50ZXIuZ2V0KG5vZGUpIC0gMTtcbiAgICAgIGNvdW50ZXJNYXAuc2V0KG5vZGUsIGNvdW50ZXJWYWx1ZSk7XG4gICAgICBtYXJrZXJDb3VudGVyLnNldChub2RlLCBtYXJrZXJWYWx1ZSk7XG4gICAgICBpZiAoIWNvdW50ZXJWYWx1ZSkge1xuICAgICAgICBpZiAoIXVuY29udHJvbGxlZE5vZGVzLmhhcyhub2RlKSkge1xuICAgICAgICAgIG5vZGUucmVtb3ZlQXR0cmlidXRlKGNvbnRyb2xBdHRyaWJ1dGUpO1xuICAgICAgICB9XG4gICAgICAgIHVuY29udHJvbGxlZE5vZGVzLmRlbGV0ZShub2RlKTtcbiAgICAgIH1cbiAgICAgIGlmICghbWFya2VyVmFsdWUpIHtcbiAgICAgICAgbm9kZS5yZW1vdmVBdHRyaWJ1dGUobWFya2VyTmFtZSk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgbG9ja0NvdW50LS07XG4gICAgaWYgKCFsb2NrQ291bnQpIHtcbiAgICAgIGNvdW50ZXJNYXAgPSAvKiBAX19QVVJFX18gKi8gbmV3IFdlYWtNYXAoKTtcbiAgICAgIGNvdW50ZXJNYXAgPSAvKiBAX19QVVJFX18gKi8gbmV3IFdlYWtNYXAoKTtcbiAgICAgIHVuY29udHJvbGxlZE5vZGVzID0gLyogQF9fUFVSRV9fICovIG5ldyBXZWFrTWFwKCk7XG4gICAgICBtYXJrZXJNYXAgPSB7fTtcbiAgICB9XG4gIH07XG59O1xuXG4vLyBzcmMvYXJpYS1oaWRkZW4udHNcbnZhciBnZXRQYXJlbnROb2RlID0gKG9yaWdpbmFsVGFyZ2V0KSA9PiB7XG4gIGNvbnN0IHRhcmdldCA9IEFycmF5LmlzQXJyYXkob3JpZ2luYWxUYXJnZXQpID8gb3JpZ2luYWxUYXJnZXRbMF0gOiBvcmlnaW5hbFRhcmdldDtcbiAgcmV0dXJuIHRhcmdldC5vd25lckRvY3VtZW50LmJvZHk7XG59O1xudmFyIGhpZGVPdGhlcnMgPSAob3JpZ2luYWxUYXJnZXQsIHBhcmVudE5vZGUgPSBnZXRQYXJlbnROb2RlKG9yaWdpbmFsVGFyZ2V0KSwgbWFya2VyTmFtZSA9IFwiZGF0YS1hcmlhLWhpZGRlblwiKSA9PiB7XG4gIGlmICghcGFyZW50Tm9kZSkgcmV0dXJuO1xuICByZXR1cm4gd2Fsa1RyZWVPdXRzaWRlKG9yaWdpbmFsVGFyZ2V0LCB7XG4gICAgcGFyZW50Tm9kZSxcbiAgICBtYXJrZXJOYW1lLFxuICAgIGNvbnRyb2xBdHRyaWJ1dGU6IFwiYXJpYS1oaWRkZW5cIlxuICB9KTtcbn07XG5cbi8vIHNyYy9pbmRleC50c1xudmFyIHJhZiA9IChmbikgPT4ge1xuICBjb25zdCBmcmFtZUlkID0gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpID0+IGZuKCkpO1xuICByZXR1cm4gKCkgPT4gY2FuY2VsQW5pbWF0aW9uRnJhbWUoZnJhbWVJZCk7XG59O1xuZnVuY3Rpb24gYXJpYUhpZGRlbih0YXJnZXRzT3JGbiwgb3B0aW9ucyA9IHt9KSB7XG4gIGNvbnN0IHsgZGVmZXIgPSB0cnVlIH0gPSBvcHRpb25zO1xuICBjb25zdCBmdW5jID0gZGVmZXIgPyByYWYgOiAodikgPT4gdigpO1xuICBjb25zdCBjbGVhbnVwcyA9IFtdO1xuICBjbGVhbnVwcy5wdXNoKFxuICAgIGZ1bmMoKCkgPT4ge1xuICAgICAgY29uc3QgdGFyZ2V0cyA9IHR5cGVvZiB0YXJnZXRzT3JGbiA9PT0gXCJmdW5jdGlvblwiID8gdGFyZ2V0c09yRm4oKSA6IHRhcmdldHNPckZuO1xuICAgICAgY29uc3QgZWxlbWVudHMgPSB0YXJnZXRzLmZpbHRlcihCb29sZWFuKTtcbiAgICAgIGlmIChlbGVtZW50cy5sZW5ndGggPT09IDApIHJldHVybjtcbiAgICAgIGNsZWFudXBzLnB1c2goaGlkZU90aGVycyhlbGVtZW50cykpO1xuICAgIH0pXG4gICk7XG4gIHJldHVybiAoKSA9PiB7XG4gICAgY2xlYW51cHMuZm9yRWFjaCgoZm4pID0+IGZuPy4oKSk7XG4gIH07XG59XG5cbmV4cG9ydCB7IGFyaWFIaWRkZW4gfTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/aria-hidden/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/avatar/dist/index.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@zag-js/avatar/dist/index.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n// src/avatar.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"avatar\").parts(\"root\", \"image\", \"fallback\");\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getRootId: (ctx) => ctx.ids?.root ?? `avatar:${ctx.id}`,\n  getImageId: (ctx) => ctx.ids?.image ?? `avatar:${ctx.id}:image`,\n  getFallbackId: (ctx) => ctx.ids?.fallback ?? `avatar:${ctx.id}:fallback`,\n  getRootEl: (ctx) => dom.getById(ctx, dom.getRootId(ctx)),\n  getImageEl: (ctx) => dom.getById(ctx, dom.getImageId(ctx))\n});\n\n// src/avatar.connect.ts\nfunction connect(state, send, normalize) {\n  const loaded = state.matches(\"loaded\");\n  return {\n    loaded,\n    setSrc(src) {\n      send({ type: \"SRC.SET\", src });\n    },\n    setLoaded() {\n      send({ type: \"IMG.LOADED\", src: \"api\" });\n    },\n    setError() {\n      send({ type: \"IMG.ERROR\", src: \"api\" });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: state.context.dir,\n        id: dom.getRootId(state.context)\n      });\n    },\n    getImageProps() {\n      return normalize.img({\n        ...parts.image.attrs,\n        hidden: !loaded,\n        dir: state.context.dir,\n        id: dom.getImageId(state.context),\n        \"data-state\": loaded ? \"visible\" : \"hidden\",\n        onLoad() {\n          send({ type: \"IMG.LOADED\", src: \"element\" });\n        },\n        onError() {\n          send({ type: \"IMG.ERROR\", src: \"element\" });\n        }\n      });\n    },\n    getFallbackProps() {\n      return normalize.element({\n        ...parts.fallback.attrs,\n        dir: state.context.dir,\n        id: dom.getFallbackId(state.context),\n        hidden: loaded,\n        \"data-state\": loaded ? \"hidden\" : \"visible\"\n      });\n    }\n  };\n}\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)(\n    {\n      id: \"avatar\",\n      initial: \"loading\",\n      activities: [\"trackImageRemoval\"],\n      context: ctx,\n      on: {\n        \"SRC.CHANGE\": {\n          target: \"loading\"\n        },\n        \"IMG.UNMOUNT\": {\n          target: \"error\"\n        }\n      },\n      states: {\n        loading: {\n          activities: [\"trackSrcChange\"],\n          entry: [\"checkImageStatus\"],\n          on: {\n            \"IMG.LOADED\": {\n              target: \"loaded\",\n              actions: [\"invokeOnLoad\"]\n            },\n            \"IMG.ERROR\": {\n              target: \"error\",\n              actions: [\"invokeOnError\"]\n            }\n          }\n        },\n        error: {\n          activities: [\"trackSrcChange\"],\n          on: {\n            \"IMG.LOADED\": {\n              target: \"loaded\",\n              actions: [\"invokeOnLoad\"]\n            }\n          }\n        },\n        loaded: {\n          activities: [\"trackSrcChange\"],\n          on: {\n            \"IMG.ERROR\": {\n              target: \"error\",\n              actions: [\"invokeOnError\"]\n            }\n          }\n        }\n      }\n    },\n    {\n      activities: {\n        trackSrcChange(ctx2, _evt, { send }) {\n          const imageEl = dom.getImageEl(ctx2);\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.observeAttributes)(imageEl, {\n            attributes: [\"src\", \"srcset\"],\n            callback() {\n              send({ type: \"SRC.CHANGE\" });\n            }\n          });\n        },\n        trackImageRemoval(ctx2, _evt, { send }) {\n          const rootEl = dom.getRootEl(ctx2);\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.observeChildren)(rootEl, {\n            callback(records) {\n              const removedNodes = Array.from(records[0].removedNodes);\n              const removed = removedNodes.find(\n                (node) => node.nodeType === Node.ELEMENT_NODE && node.matches(\"[data-scope=avatar][data-part=image]\")\n              );\n              if (removed) {\n                send({ type: \"IMG.UNMOUNT\" });\n              }\n            }\n          });\n        }\n      },\n      actions: {\n        invokeOnLoad(ctx2) {\n          ctx2.onStatusChange?.({ status: \"loaded\" });\n        },\n        invokeOnError(ctx2) {\n          ctx2.onStatusChange?.({ status: \"error\" });\n        },\n        checkImageStatus(ctx2, _evt, { send }) {\n          const imageEl = dom.getImageEl(ctx2);\n          if (imageEl?.complete) {\n            const type = hasLoaded(imageEl) ? \"IMG.LOADED\" : \"IMG.ERROR\";\n            send({ type, src: \"ssr\" });\n          }\n        }\n      }\n    }\n  );\n}\nfunction hasLoaded(image) {\n  return image.complete && image.naturalWidth !== 0 && image.naturalHeight !== 0;\n}\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\"dir\", \"id\", \"ids\", \"onStatusChange\", \"getRootNode\"]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/avatar/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/checkbox/dist/index.mjs":
/*!******************************************************!*\
  !*** ./node_modules/@zag-js/checkbox/dist/index.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/focus-visible */ \"(ssr)/./node_modules/@zag-js/focus-visible/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n// src/checkbox.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"checkbox\").parts(\"root\", \"label\", \"control\", \"indicator\");\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getRootId: (ctx) => ctx.ids?.root ?? `checkbox:${ctx.id}`,\n  getLabelId: (ctx) => ctx.ids?.label ?? `checkbox:${ctx.id}:label`,\n  getControlId: (ctx) => ctx.ids?.control ?? `checkbox:${ctx.id}:control`,\n  getHiddenInputId: (ctx) => ctx.ids?.hiddenInput ?? `checkbox:${ctx.id}:input`,\n  getRootEl: (ctx) => dom.getById(ctx, dom.getRootId(ctx)),\n  getHiddenInputEl: (ctx) => dom.getById(ctx, dom.getHiddenInputId(ctx))\n});\nfunction connect(state, send, normalize) {\n  const disabled = state.context.isDisabled;\n  const readOnly = state.context.readOnly;\n  const focused = !disabled && state.context.focused;\n  const focusVisible = !disabled && state.context.focusVisible;\n  const checked = state.context.isChecked;\n  const indeterminate = state.context.isIndeterminate;\n  const dataAttrs = {\n    \"data-active\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.active),\n    \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n    \"data-focus-visible\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focusVisible),\n    \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(readOnly),\n    \"data-hover\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.hovered),\n    \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n    \"data-state\": indeterminate ? \"indeterminate\" : state.context.checked ? \"checked\" : \"unchecked\",\n    \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.invalid)\n  };\n  return {\n    checked,\n    disabled,\n    indeterminate,\n    focused,\n    checkedState: state.context.checked,\n    setChecked(checked2) {\n      send({ type: \"CHECKED.SET\", checked: checked2, isTrusted: false });\n    },\n    toggleChecked() {\n      send({ type: \"CHECKED.TOGGLE\", checked, isTrusted: false });\n    },\n    getRootProps() {\n      return normalize.label({\n        ...parts.root.attrs,\n        ...dataAttrs,\n        dir: state.context.dir,\n        id: dom.getRootId(state.context),\n        htmlFor: dom.getHiddenInputId(state.context),\n        onPointerMove() {\n          if (disabled) return;\n          send({ type: \"CONTEXT.SET\", context: { hovered: true } });\n        },\n        onPointerLeave() {\n          if (disabled) return;\n          send({ type: \"CONTEXT.SET\", context: { hovered: false } });\n        },\n        onClick(event) {\n          const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event);\n          if (target === dom.getHiddenInputEl(state.context)) {\n            event.stopPropagation();\n          }\n        }\n      });\n    },\n    getLabelProps() {\n      return normalize.element({\n        ...parts.label.attrs,\n        ...dataAttrs,\n        dir: state.context.dir,\n        id: dom.getLabelId(state.context)\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        ...dataAttrs,\n        dir: state.context.dir,\n        id: dom.getControlId(state.context),\n        \"aria-hidden\": true\n      });\n    },\n    getIndicatorProps() {\n      return normalize.element({\n        ...parts.indicator.attrs,\n        ...dataAttrs,\n        dir: state.context.dir,\n        hidden: !indeterminate && !state.context.checked\n      });\n    },\n    getHiddenInputProps() {\n      return normalize.input({\n        id: dom.getHiddenInputId(state.context),\n        type: \"checkbox\",\n        required: state.context.required,\n        defaultChecked: checked,\n        disabled,\n        \"aria-labelledby\": dom.getLabelId(state.context),\n        \"aria-invalid\": state.context.invalid,\n        name: state.context.name,\n        form: state.context.form,\n        value: state.context.value,\n        style: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.visuallyHiddenStyle,\n        onFocus() {\n          const focusVisible2 = (0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__.isFocusVisible)();\n          send({ type: \"CONTEXT.SET\", context: { focused: true, focusVisible: focusVisible2 } });\n        },\n        onBlur() {\n          send({ type: \"CONTEXT.SET\", context: { focused: false, focusVisible: false } });\n        },\n        onClick(event) {\n          if (readOnly) {\n            event.preventDefault();\n            return;\n          }\n          const checked2 = event.currentTarget.checked;\n          send({ type: \"CHECKED.SET\", checked: checked2, isTrusted: true });\n        }\n      });\n    }\n  };\n}\nvar { not } = _zag_js_core__WEBPACK_IMPORTED_MODULE_3__.guards;\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)(\n    {\n      id: \"checkbox\",\n      initial: \"ready\",\n      context: {\n        checked: false,\n        value: \"on\",\n        disabled: false,\n        ...ctx,\n        fieldsetDisabled: false,\n        focusVisible: false\n      },\n      watch: {\n        disabled: \"removeFocusIfNeeded\",\n        checked: \"syncInputElement\"\n      },\n      activities: [\"trackFormControlState\", \"trackPressEvent\", \"trackFocusVisible\"],\n      on: {\n        \"CHECKED.TOGGLE\": [\n          {\n            guard: not(\"isTrusted\"),\n            actions: [\"toggleChecked\", \"dispatchChangeEvent\"]\n          },\n          {\n            actions: [\"toggleChecked\"]\n          }\n        ],\n        \"CHECKED.SET\": [\n          {\n            guard: not(\"isTrusted\"),\n            actions: [\"setChecked\", \"dispatchChangeEvent\"]\n          },\n          {\n            actions: [\"setChecked\"]\n          }\n        ],\n        \"CONTEXT.SET\": {\n          actions: [\"setContext\"]\n        }\n      },\n      computed: {\n        isIndeterminate: (ctx2) => isIndeterminate(ctx2.checked),\n        isChecked: (ctx2) => isChecked(ctx2.checked),\n        isDisabled: (ctx2) => !!ctx2.disabled || ctx2.fieldsetDisabled\n      },\n      states: {\n        ready: {}\n      }\n    },\n    {\n      guards: {\n        isTrusted: (_ctx, evt) => !!evt.isTrusted\n      },\n      activities: {\n        trackPressEvent(ctx2) {\n          if (ctx2.isDisabled) return;\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackPress)({\n            pointerNode: dom.getRootEl(ctx2),\n            keyboardNode: dom.getHiddenInputEl(ctx2),\n            isValidKey: (event) => event.key === \" \",\n            onPress: () => ctx2.active = false,\n            onPressStart: () => ctx2.active = true,\n            onPressEnd: () => ctx2.active = false\n          });\n        },\n        trackFocusVisible(ctx2) {\n          if (ctx2.isDisabled) return;\n          return (0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__.trackFocusVisible)({ root: dom.getRootNode(ctx2) });\n        },\n        trackFormControlState(ctx2, _evt, { send, initialContext }) {\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackFormControl)(dom.getHiddenInputEl(ctx2), {\n            onFieldsetDisabledChange(disabled) {\n              ctx2.fieldsetDisabled = disabled;\n            },\n            onFormReset() {\n              send({ type: \"CHECKED.SET\", checked: !!initialContext.checked });\n            }\n          });\n        }\n      },\n      actions: {\n        setContext(ctx2, evt) {\n          Object.assign(ctx2, evt.context);\n        },\n        syncInputElement(ctx2) {\n          const inputEl = dom.getHiddenInputEl(ctx2);\n          if (!inputEl) return;\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.setElementChecked)(inputEl, ctx2.isChecked);\n          inputEl.indeterminate = ctx2.isIndeterminate;\n        },\n        removeFocusIfNeeded(ctx2) {\n          if (ctx2.disabled && ctx2.focused) {\n            ctx2.focused = false;\n            ctx2.focusVisible = false;\n          }\n        },\n        setChecked(ctx2, evt) {\n          set.checked(ctx2, evt.checked);\n        },\n        toggleChecked(ctx2) {\n          const checked = isIndeterminate(ctx2.checked) ? true : !ctx2.checked;\n          set.checked(ctx2, checked);\n        },\n        dispatchChangeEvent(ctx2) {\n          const inputEl = dom.getHiddenInputEl(ctx2);\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dispatchInputCheckedEvent)(inputEl, { checked: isChecked(ctx2.checked) });\n        }\n      }\n    }\n  );\n}\nfunction isIndeterminate(checked) {\n  return checked === \"indeterminate\";\n}\nfunction isChecked(checked) {\n  return isIndeterminate(checked) ? false : !!checked;\n}\nvar invoke = {\n  change: (ctx) => {\n    ctx.onCheckedChange?.({ checked: ctx.checked });\n  }\n};\nvar set = {\n  checked: (ctx, checked) => {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.isEqual)(ctx.checked, checked)) return;\n    ctx.checked = checked;\n    invoke.change(ctx);\n  }\n};\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_5__.createProps)()([\n  \"checked\",\n  \"dir\",\n  \"disabled\",\n  \"form\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"invalid\",\n  \"name\",\n  \"onCheckedChange\",\n  \"readOnly\",\n  \"required\",\n  \"value\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9jaGVja2JveC9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFnRDtBQUMySDtBQUNqRztBQUNyQjtBQUNjO0FBQ3ZCOztBQUU1QztBQUNBLGNBQWMsOERBQWE7QUFDM0I7QUFDQSxVQUFVLDhEQUFXO0FBQ3JCLG1EQUFtRCxPQUFPO0FBQzFELHFEQUFxRCxPQUFPO0FBQzVELHlEQUF5RCxPQUFPO0FBQ2hFLGlFQUFpRSxPQUFPO0FBQ3hFO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiwyREFBUTtBQUMzQixrQkFBa0IsMkRBQVE7QUFDMUIsMEJBQTBCLDJEQUFRO0FBQ2xDLHFCQUFxQiwyREFBUTtBQUM3QixrQkFBa0IsMkRBQVE7QUFDMUIscUJBQXFCLDJEQUFRO0FBQzdCO0FBQ0Esb0JBQW9CLDJEQUFRO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLDBEQUEwRDtBQUN2RSxLQUFLO0FBQ0w7QUFDQSxhQUFhLG1EQUFtRDtBQUNoRSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGdDQUFnQyxpQkFBaUI7QUFDbEUsU0FBUztBQUNUO0FBQ0E7QUFDQSxpQkFBaUIsZ0NBQWdDLGtCQUFrQjtBQUNuRSxTQUFTO0FBQ1Q7QUFDQSx5QkFBeUIsaUVBQWM7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxrRUFBbUI7QUFDbEM7QUFDQSxnQ0FBZ0MscUVBQWM7QUFDOUMsaUJBQWlCLGdDQUFnQyw4Q0FBOEM7QUFDL0YsU0FBUztBQUNUO0FBQ0EsaUJBQWlCLGdDQUFnQyx1Q0FBdUM7QUFDeEYsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQix5REFBeUQ7QUFDMUU7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsTUFBTSxNQUFNLEVBQUUsZ0RBQU07QUFDcEI7QUFDQSxjQUFjLHNEQUFPO0FBQ3JCLFNBQVMsMkRBQWE7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLDZEQUFVO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWCxTQUFTO0FBQ1Q7QUFDQTtBQUNBLGlCQUFpQix3RUFBaUIsR0FBRyw2QkFBNkI7QUFDbEUsU0FBUztBQUNULDRDQUE0QyxzQkFBc0I7QUFDbEUsaUJBQWlCLG1FQUFnQjtBQUNqQztBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EscUJBQXFCLHdEQUF3RDtBQUM3RTtBQUNBLFdBQVc7QUFDWDtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsVUFBVSxvRUFBaUI7QUFDM0I7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsVUFBVSw0RUFBeUIsWUFBWSxrQ0FBa0M7QUFDakY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsc0JBQXNCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzREFBTztBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSwwREFBVztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLCtEQUFnQjs7QUFFdUIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9waGlsaWFoYW1tb25kL0Rlc2t0b3AvbGVhcm5lci1hcHAtc3lzdGVtL25vZGVfbW9kdWxlcy9AemFnLWpzL2NoZWNrYm94L2Rpc3QvaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUFuYXRvbXkgfSBmcm9tICdAemFnLWpzL2FuYXRvbXknO1xuaW1wb3J0IHsgY3JlYXRlU2NvcGUsIGRhdGFBdHRyLCBnZXRFdmVudFRhcmdldCwgdmlzdWFsbHlIaWRkZW5TdHlsZSwgdHJhY2tQcmVzcywgdHJhY2tGb3JtQ29udHJvbCwgc2V0RWxlbWVudENoZWNrZWQsIGRpc3BhdGNoSW5wdXRDaGVja2VkRXZlbnQgfSBmcm9tICdAemFnLWpzL2RvbS1xdWVyeSc7XG5pbXBvcnQgeyBpc0ZvY3VzVmlzaWJsZSwgdHJhY2tGb2N1c1Zpc2libGUgfSBmcm9tICdAemFnLWpzL2ZvY3VzLXZpc2libGUnO1xuaW1wb3J0IHsgY3JlYXRlTWFjaGluZSwgZ3VhcmRzIH0gZnJvbSAnQHphZy1qcy9jb3JlJztcbmltcG9ydCB7IGNyZWF0ZVNwbGl0UHJvcHMsIGNvbXBhY3QsIGlzRXF1YWwgfSBmcm9tICdAemFnLWpzL3V0aWxzJztcbmltcG9ydCB7IGNyZWF0ZVByb3BzIH0gZnJvbSAnQHphZy1qcy90eXBlcyc7XG5cbi8vIHNyYy9jaGVja2JveC5hbmF0b215LnRzXG52YXIgYW5hdG9teSA9IGNyZWF0ZUFuYXRvbXkoXCJjaGVja2JveFwiKS5wYXJ0cyhcInJvb3RcIiwgXCJsYWJlbFwiLCBcImNvbnRyb2xcIiwgXCJpbmRpY2F0b3JcIik7XG52YXIgcGFydHMgPSBhbmF0b215LmJ1aWxkKCk7XG52YXIgZG9tID0gY3JlYXRlU2NvcGUoe1xuICBnZXRSb290SWQ6IChjdHgpID0+IGN0eC5pZHM/LnJvb3QgPz8gYGNoZWNrYm94OiR7Y3R4LmlkfWAsXG4gIGdldExhYmVsSWQ6IChjdHgpID0+IGN0eC5pZHM/LmxhYmVsID8/IGBjaGVja2JveDoke2N0eC5pZH06bGFiZWxgLFxuICBnZXRDb250cm9sSWQ6IChjdHgpID0+IGN0eC5pZHM/LmNvbnRyb2wgPz8gYGNoZWNrYm94OiR7Y3R4LmlkfTpjb250cm9sYCxcbiAgZ2V0SGlkZGVuSW5wdXRJZDogKGN0eCkgPT4gY3R4Lmlkcz8uaGlkZGVuSW5wdXQgPz8gYGNoZWNrYm94OiR7Y3R4LmlkfTppbnB1dGAsXG4gIGdldFJvb3RFbDogKGN0eCkgPT4gZG9tLmdldEJ5SWQoY3R4LCBkb20uZ2V0Um9vdElkKGN0eCkpLFxuICBnZXRIaWRkZW5JbnB1dEVsOiAoY3R4KSA9PiBkb20uZ2V0QnlJZChjdHgsIGRvbS5nZXRIaWRkZW5JbnB1dElkKGN0eCkpXG59KTtcbmZ1bmN0aW9uIGNvbm5lY3Qoc3RhdGUsIHNlbmQsIG5vcm1hbGl6ZSkge1xuICBjb25zdCBkaXNhYmxlZCA9IHN0YXRlLmNvbnRleHQuaXNEaXNhYmxlZDtcbiAgY29uc3QgcmVhZE9ubHkgPSBzdGF0ZS5jb250ZXh0LnJlYWRPbmx5O1xuICBjb25zdCBmb2N1c2VkID0gIWRpc2FibGVkICYmIHN0YXRlLmNvbnRleHQuZm9jdXNlZDtcbiAgY29uc3QgZm9jdXNWaXNpYmxlID0gIWRpc2FibGVkICYmIHN0YXRlLmNvbnRleHQuZm9jdXNWaXNpYmxlO1xuICBjb25zdCBjaGVja2VkID0gc3RhdGUuY29udGV4dC5pc0NoZWNrZWQ7XG4gIGNvbnN0IGluZGV0ZXJtaW5hdGUgPSBzdGF0ZS5jb250ZXh0LmlzSW5kZXRlcm1pbmF0ZTtcbiAgY29uc3QgZGF0YUF0dHJzID0ge1xuICAgIFwiZGF0YS1hY3RpdmVcIjogZGF0YUF0dHIoc3RhdGUuY29udGV4dC5hY3RpdmUpLFxuICAgIFwiZGF0YS1mb2N1c1wiOiBkYXRhQXR0cihmb2N1c2VkKSxcbiAgICBcImRhdGEtZm9jdXMtdmlzaWJsZVwiOiBkYXRhQXR0cihmb2N1c1Zpc2libGUpLFxuICAgIFwiZGF0YS1yZWFkb25seVwiOiBkYXRhQXR0cihyZWFkT25seSksXG4gICAgXCJkYXRhLWhvdmVyXCI6IGRhdGFBdHRyKHN0YXRlLmNvbnRleHQuaG92ZXJlZCksXG4gICAgXCJkYXRhLWRpc2FibGVkXCI6IGRhdGFBdHRyKGRpc2FibGVkKSxcbiAgICBcImRhdGEtc3RhdGVcIjogaW5kZXRlcm1pbmF0ZSA/IFwiaW5kZXRlcm1pbmF0ZVwiIDogc3RhdGUuY29udGV4dC5jaGVja2VkID8gXCJjaGVja2VkXCIgOiBcInVuY2hlY2tlZFwiLFxuICAgIFwiZGF0YS1pbnZhbGlkXCI6IGRhdGFBdHRyKHN0YXRlLmNvbnRleHQuaW52YWxpZClcbiAgfTtcbiAgcmV0dXJuIHtcbiAgICBjaGVja2VkLFxuICAgIGRpc2FibGVkLFxuICAgIGluZGV0ZXJtaW5hdGUsXG4gICAgZm9jdXNlZCxcbiAgICBjaGVja2VkU3RhdGU6IHN0YXRlLmNvbnRleHQuY2hlY2tlZCxcbiAgICBzZXRDaGVja2VkKGNoZWNrZWQyKSB7XG4gICAgICBzZW5kKHsgdHlwZTogXCJDSEVDS0VELlNFVFwiLCBjaGVja2VkOiBjaGVja2VkMiwgaXNUcnVzdGVkOiBmYWxzZSB9KTtcbiAgICB9LFxuICAgIHRvZ2dsZUNoZWNrZWQoKSB7XG4gICAgICBzZW5kKHsgdHlwZTogXCJDSEVDS0VELlRPR0dMRVwiLCBjaGVja2VkLCBpc1RydXN0ZWQ6IGZhbHNlIH0pO1xuICAgIH0sXG4gICAgZ2V0Um9vdFByb3BzKCkge1xuICAgICAgcmV0dXJuIG5vcm1hbGl6ZS5sYWJlbCh7XG4gICAgICAgIC4uLnBhcnRzLnJvb3QuYXR0cnMsXG4gICAgICAgIC4uLmRhdGFBdHRycyxcbiAgICAgICAgZGlyOiBzdGF0ZS5jb250ZXh0LmRpcixcbiAgICAgICAgaWQ6IGRvbS5nZXRSb290SWQoc3RhdGUuY29udGV4dCksXG4gICAgICAgIGh0bWxGb3I6IGRvbS5nZXRIaWRkZW5JbnB1dElkKHN0YXRlLmNvbnRleHQpLFxuICAgICAgICBvblBvaW50ZXJNb3ZlKCkge1xuICAgICAgICAgIGlmIChkaXNhYmxlZCkgcmV0dXJuO1xuICAgICAgICAgIHNlbmQoeyB0eXBlOiBcIkNPTlRFWFQuU0VUXCIsIGNvbnRleHQ6IHsgaG92ZXJlZDogdHJ1ZSB9IH0pO1xuICAgICAgICB9LFxuICAgICAgICBvblBvaW50ZXJMZWF2ZSgpIHtcbiAgICAgICAgICBpZiAoZGlzYWJsZWQpIHJldHVybjtcbiAgICAgICAgICBzZW5kKHsgdHlwZTogXCJDT05URVhULlNFVFwiLCBjb250ZXh0OiB7IGhvdmVyZWQ6IGZhbHNlIH0gfSk7XG4gICAgICAgIH0sXG4gICAgICAgIG9uQ2xpY2soZXZlbnQpIHtcbiAgICAgICAgICBjb25zdCB0YXJnZXQgPSBnZXRFdmVudFRhcmdldChldmVudCk7XG4gICAgICAgICAgaWYgKHRhcmdldCA9PT0gZG9tLmdldEhpZGRlbklucHV0RWwoc3RhdGUuY29udGV4dCkpIHtcbiAgICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXRMYWJlbFByb3BzKCkge1xuICAgICAgcmV0dXJuIG5vcm1hbGl6ZS5lbGVtZW50KHtcbiAgICAgICAgLi4ucGFydHMubGFiZWwuYXR0cnMsXG4gICAgICAgIC4uLmRhdGFBdHRycyxcbiAgICAgICAgZGlyOiBzdGF0ZS5jb250ZXh0LmRpcixcbiAgICAgICAgaWQ6IGRvbS5nZXRMYWJlbElkKHN0YXRlLmNvbnRleHQpXG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldENvbnRyb2xQcm9wcygpIHtcbiAgICAgIHJldHVybiBub3JtYWxpemUuZWxlbWVudCh7XG4gICAgICAgIC4uLnBhcnRzLmNvbnRyb2wuYXR0cnMsXG4gICAgICAgIC4uLmRhdGFBdHRycyxcbiAgICAgICAgZGlyOiBzdGF0ZS5jb250ZXh0LmRpcixcbiAgICAgICAgaWQ6IGRvbS5nZXRDb250cm9sSWQoc3RhdGUuY29udGV4dCksXG4gICAgICAgIFwiYXJpYS1oaWRkZW5cIjogdHJ1ZVxuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXRJbmRpY2F0b3JQcm9wcygpIHtcbiAgICAgIHJldHVybiBub3JtYWxpemUuZWxlbWVudCh7XG4gICAgICAgIC4uLnBhcnRzLmluZGljYXRvci5hdHRycyxcbiAgICAgICAgLi4uZGF0YUF0dHJzLFxuICAgICAgICBkaXI6IHN0YXRlLmNvbnRleHQuZGlyLFxuICAgICAgICBoaWRkZW46ICFpbmRldGVybWluYXRlICYmICFzdGF0ZS5jb250ZXh0LmNoZWNrZWRcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0SGlkZGVuSW5wdXRQcm9wcygpIHtcbiAgICAgIHJldHVybiBub3JtYWxpemUuaW5wdXQoe1xuICAgICAgICBpZDogZG9tLmdldEhpZGRlbklucHV0SWQoc3RhdGUuY29udGV4dCksXG4gICAgICAgIHR5cGU6IFwiY2hlY2tib3hcIixcbiAgICAgICAgcmVxdWlyZWQ6IHN0YXRlLmNvbnRleHQucmVxdWlyZWQsXG4gICAgICAgIGRlZmF1bHRDaGVja2VkOiBjaGVja2VkLFxuICAgICAgICBkaXNhYmxlZCxcbiAgICAgICAgXCJhcmlhLWxhYmVsbGVkYnlcIjogZG9tLmdldExhYmVsSWQoc3RhdGUuY29udGV4dCksXG4gICAgICAgIFwiYXJpYS1pbnZhbGlkXCI6IHN0YXRlLmNvbnRleHQuaW52YWxpZCxcbiAgICAgICAgbmFtZTogc3RhdGUuY29udGV4dC5uYW1lLFxuICAgICAgICBmb3JtOiBzdGF0ZS5jb250ZXh0LmZvcm0sXG4gICAgICAgIHZhbHVlOiBzdGF0ZS5jb250ZXh0LnZhbHVlLFxuICAgICAgICBzdHlsZTogdmlzdWFsbHlIaWRkZW5TdHlsZSxcbiAgICAgICAgb25Gb2N1cygpIHtcbiAgICAgICAgICBjb25zdCBmb2N1c1Zpc2libGUyID0gaXNGb2N1c1Zpc2libGUoKTtcbiAgICAgICAgICBzZW5kKHsgdHlwZTogXCJDT05URVhULlNFVFwiLCBjb250ZXh0OiB7IGZvY3VzZWQ6IHRydWUsIGZvY3VzVmlzaWJsZTogZm9jdXNWaXNpYmxlMiB9IH0pO1xuICAgICAgICB9LFxuICAgICAgICBvbkJsdXIoKSB7XG4gICAgICAgICAgc2VuZCh7IHR5cGU6IFwiQ09OVEVYVC5TRVRcIiwgY29udGV4dDogeyBmb2N1c2VkOiBmYWxzZSwgZm9jdXNWaXNpYmxlOiBmYWxzZSB9IH0pO1xuICAgICAgICB9LFxuICAgICAgICBvbkNsaWNrKGV2ZW50KSB7XG4gICAgICAgICAgaWYgKHJlYWRPbmx5KSB7XG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjb25zdCBjaGVja2VkMiA9IGV2ZW50LmN1cnJlbnRUYXJnZXQuY2hlY2tlZDtcbiAgICAgICAgICBzZW5kKHsgdHlwZTogXCJDSEVDS0VELlNFVFwiLCBjaGVja2VkOiBjaGVja2VkMiwgaXNUcnVzdGVkOiB0cnVlIH0pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG59XG52YXIgeyBub3QgfSA9IGd1YXJkcztcbmZ1bmN0aW9uIG1hY2hpbmUodXNlckNvbnRleHQpIHtcbiAgY29uc3QgY3R4ID0gY29tcGFjdCh1c2VyQ29udGV4dCk7XG4gIHJldHVybiBjcmVhdGVNYWNoaW5lKFxuICAgIHtcbiAgICAgIGlkOiBcImNoZWNrYm94XCIsXG4gICAgICBpbml0aWFsOiBcInJlYWR5XCIsXG4gICAgICBjb250ZXh0OiB7XG4gICAgICAgIGNoZWNrZWQ6IGZhbHNlLFxuICAgICAgICB2YWx1ZTogXCJvblwiLFxuICAgICAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgICAgIC4uLmN0eCxcbiAgICAgICAgZmllbGRzZXREaXNhYmxlZDogZmFsc2UsXG4gICAgICAgIGZvY3VzVmlzaWJsZTogZmFsc2VcbiAgICAgIH0sXG4gICAgICB3YXRjaDoge1xuICAgICAgICBkaXNhYmxlZDogXCJyZW1vdmVGb2N1c0lmTmVlZGVkXCIsXG4gICAgICAgIGNoZWNrZWQ6IFwic3luY0lucHV0RWxlbWVudFwiXG4gICAgICB9LFxuICAgICAgYWN0aXZpdGllczogW1widHJhY2tGb3JtQ29udHJvbFN0YXRlXCIsIFwidHJhY2tQcmVzc0V2ZW50XCIsIFwidHJhY2tGb2N1c1Zpc2libGVcIl0sXG4gICAgICBvbjoge1xuICAgICAgICBcIkNIRUNLRUQuVE9HR0xFXCI6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBndWFyZDogbm90KFwiaXNUcnVzdGVkXCIpLFxuICAgICAgICAgICAgYWN0aW9uczogW1widG9nZ2xlQ2hlY2tlZFwiLCBcImRpc3BhdGNoQ2hhbmdlRXZlbnRcIl1cbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGFjdGlvbnM6IFtcInRvZ2dsZUNoZWNrZWRcIl1cbiAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIFwiQ0hFQ0tFRC5TRVRcIjogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIGd1YXJkOiBub3QoXCJpc1RydXN0ZWRcIiksXG4gICAgICAgICAgICBhY3Rpb25zOiBbXCJzZXRDaGVja2VkXCIsIFwiZGlzcGF0Y2hDaGFuZ2VFdmVudFwiXVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgYWN0aW9uczogW1wic2V0Q2hlY2tlZFwiXVxuICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgICAgXCJDT05URVhULlNFVFwiOiB7XG4gICAgICAgICAgYWN0aW9uczogW1wic2V0Q29udGV4dFwiXVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgY29tcHV0ZWQ6IHtcbiAgICAgICAgaXNJbmRldGVybWluYXRlOiAoY3R4MikgPT4gaXNJbmRldGVybWluYXRlKGN0eDIuY2hlY2tlZCksXG4gICAgICAgIGlzQ2hlY2tlZDogKGN0eDIpID0+IGlzQ2hlY2tlZChjdHgyLmNoZWNrZWQpLFxuICAgICAgICBpc0Rpc2FibGVkOiAoY3R4MikgPT4gISFjdHgyLmRpc2FibGVkIHx8IGN0eDIuZmllbGRzZXREaXNhYmxlZFxuICAgICAgfSxcbiAgICAgIHN0YXRlczoge1xuICAgICAgICByZWFkeToge31cbiAgICAgIH1cbiAgICB9LFxuICAgIHtcbiAgICAgIGd1YXJkczoge1xuICAgICAgICBpc1RydXN0ZWQ6IChfY3R4LCBldnQpID0+ICEhZXZ0LmlzVHJ1c3RlZFxuICAgICAgfSxcbiAgICAgIGFjdGl2aXRpZXM6IHtcbiAgICAgICAgdHJhY2tQcmVzc0V2ZW50KGN0eDIpIHtcbiAgICAgICAgICBpZiAoY3R4Mi5pc0Rpc2FibGVkKSByZXR1cm47XG4gICAgICAgICAgcmV0dXJuIHRyYWNrUHJlc3Moe1xuICAgICAgICAgICAgcG9pbnRlck5vZGU6IGRvbS5nZXRSb290RWwoY3R4MiksXG4gICAgICAgICAgICBrZXlib2FyZE5vZGU6IGRvbS5nZXRIaWRkZW5JbnB1dEVsKGN0eDIpLFxuICAgICAgICAgICAgaXNWYWxpZEtleTogKGV2ZW50KSA9PiBldmVudC5rZXkgPT09IFwiIFwiLFxuICAgICAgICAgICAgb25QcmVzczogKCkgPT4gY3R4Mi5hY3RpdmUgPSBmYWxzZSxcbiAgICAgICAgICAgIG9uUHJlc3NTdGFydDogKCkgPT4gY3R4Mi5hY3RpdmUgPSB0cnVlLFxuICAgICAgICAgICAgb25QcmVzc0VuZDogKCkgPT4gY3R4Mi5hY3RpdmUgPSBmYWxzZVxuICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgICAgICB0cmFja0ZvY3VzVmlzaWJsZShjdHgyKSB7XG4gICAgICAgICAgaWYgKGN0eDIuaXNEaXNhYmxlZCkgcmV0dXJuO1xuICAgICAgICAgIHJldHVybiB0cmFja0ZvY3VzVmlzaWJsZSh7IHJvb3Q6IGRvbS5nZXRSb290Tm9kZShjdHgyKSB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgdHJhY2tGb3JtQ29udHJvbFN0YXRlKGN0eDIsIF9ldnQsIHsgc2VuZCwgaW5pdGlhbENvbnRleHQgfSkge1xuICAgICAgICAgIHJldHVybiB0cmFja0Zvcm1Db250cm9sKGRvbS5nZXRIaWRkZW5JbnB1dEVsKGN0eDIpLCB7XG4gICAgICAgICAgICBvbkZpZWxkc2V0RGlzYWJsZWRDaGFuZ2UoZGlzYWJsZWQpIHtcbiAgICAgICAgICAgICAgY3R4Mi5maWVsZHNldERpc2FibGVkID0gZGlzYWJsZWQ7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgb25Gb3JtUmVzZXQoKSB7XG4gICAgICAgICAgICAgIHNlbmQoeyB0eXBlOiBcIkNIRUNLRUQuU0VUXCIsIGNoZWNrZWQ6ICEhaW5pdGlhbENvbnRleHQuY2hlY2tlZCB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGFjdGlvbnM6IHtcbiAgICAgICAgc2V0Q29udGV4dChjdHgyLCBldnQpIHtcbiAgICAgICAgICBPYmplY3QuYXNzaWduKGN0eDIsIGV2dC5jb250ZXh0KTtcbiAgICAgICAgfSxcbiAgICAgICAgc3luY0lucHV0RWxlbWVudChjdHgyKSB7XG4gICAgICAgICAgY29uc3QgaW5wdXRFbCA9IGRvbS5nZXRIaWRkZW5JbnB1dEVsKGN0eDIpO1xuICAgICAgICAgIGlmICghaW5wdXRFbCkgcmV0dXJuO1xuICAgICAgICAgIHNldEVsZW1lbnRDaGVja2VkKGlucHV0RWwsIGN0eDIuaXNDaGVja2VkKTtcbiAgICAgICAgICBpbnB1dEVsLmluZGV0ZXJtaW5hdGUgPSBjdHgyLmlzSW5kZXRlcm1pbmF0ZTtcbiAgICAgICAgfSxcbiAgICAgICAgcmVtb3ZlRm9jdXNJZk5lZWRlZChjdHgyKSB7XG4gICAgICAgICAgaWYgKGN0eDIuZGlzYWJsZWQgJiYgY3R4Mi5mb2N1c2VkKSB7XG4gICAgICAgICAgICBjdHgyLmZvY3VzZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIGN0eDIuZm9jdXNWaXNpYmxlID0gZmFsc2U7XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBzZXRDaGVja2VkKGN0eDIsIGV2dCkge1xuICAgICAgICAgIHNldC5jaGVja2VkKGN0eDIsIGV2dC5jaGVja2VkKTtcbiAgICAgICAgfSxcbiAgICAgICAgdG9nZ2xlQ2hlY2tlZChjdHgyKSB7XG4gICAgICAgICAgY29uc3QgY2hlY2tlZCA9IGlzSW5kZXRlcm1pbmF0ZShjdHgyLmNoZWNrZWQpID8gdHJ1ZSA6ICFjdHgyLmNoZWNrZWQ7XG4gICAgICAgICAgc2V0LmNoZWNrZWQoY3R4MiwgY2hlY2tlZCk7XG4gICAgICAgIH0sXG4gICAgICAgIGRpc3BhdGNoQ2hhbmdlRXZlbnQoY3R4Mikge1xuICAgICAgICAgIGNvbnN0IGlucHV0RWwgPSBkb20uZ2V0SGlkZGVuSW5wdXRFbChjdHgyKTtcbiAgICAgICAgICBkaXNwYXRjaElucHV0Q2hlY2tlZEV2ZW50KGlucHV0RWwsIHsgY2hlY2tlZDogaXNDaGVja2VkKGN0eDIuY2hlY2tlZCkgfSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICk7XG59XG5mdW5jdGlvbiBpc0luZGV0ZXJtaW5hdGUoY2hlY2tlZCkge1xuICByZXR1cm4gY2hlY2tlZCA9PT0gXCJpbmRldGVybWluYXRlXCI7XG59XG5mdW5jdGlvbiBpc0NoZWNrZWQoY2hlY2tlZCkge1xuICByZXR1cm4gaXNJbmRldGVybWluYXRlKGNoZWNrZWQpID8gZmFsc2UgOiAhIWNoZWNrZWQ7XG59XG52YXIgaW52b2tlID0ge1xuICBjaGFuZ2U6IChjdHgpID0+IHtcbiAgICBjdHgub25DaGVja2VkQ2hhbmdlPy4oeyBjaGVja2VkOiBjdHguY2hlY2tlZCB9KTtcbiAgfVxufTtcbnZhciBzZXQgPSB7XG4gIGNoZWNrZWQ6IChjdHgsIGNoZWNrZWQpID0+IHtcbiAgICBpZiAoaXNFcXVhbChjdHguY2hlY2tlZCwgY2hlY2tlZCkpIHJldHVybjtcbiAgICBjdHguY2hlY2tlZCA9IGNoZWNrZWQ7XG4gICAgaW52b2tlLmNoYW5nZShjdHgpO1xuICB9XG59O1xudmFyIHByb3BzID0gY3JlYXRlUHJvcHMoKShbXG4gIFwiY2hlY2tlZFwiLFxuICBcImRpclwiLFxuICBcImRpc2FibGVkXCIsXG4gIFwiZm9ybVwiLFxuICBcImdldFJvb3ROb2RlXCIsXG4gIFwiaWRcIixcbiAgXCJpZHNcIixcbiAgXCJpbnZhbGlkXCIsXG4gIFwibmFtZVwiLFxuICBcIm9uQ2hlY2tlZENoYW5nZVwiLFxuICBcInJlYWRPbmx5XCIsXG4gIFwicmVxdWlyZWRcIixcbiAgXCJ2YWx1ZVwiXG5dKTtcbnZhciBzcGxpdFByb3BzID0gY3JlYXRlU3BsaXRQcm9wcyhwcm9wcyk7XG5cbmV4cG9ydCB7IGFuYXRvbXksIGNvbm5lY3QsIG1hY2hpbmUsIHByb3BzLCBzcGxpdFByb3BzIH07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/checkbox/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/collapsible/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@zag-js/collapsible/dist/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/store/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n// src/collapsible.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"collapsible\").parts(\"root\", \"trigger\", \"content\");\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getRootId: (ctx) => ctx.ids?.root ?? `collapsible:${ctx.id}`,\n  getContentId: (ctx) => ctx.ids?.content ?? `collapsible:${ctx.id}:content`,\n  getTriggerId: (ctx) => ctx.ids?.trigger ?? `collapsible:${ctx.id}:trigger`,\n  getRootEl: (ctx) => dom.getById(ctx, dom.getRootId(ctx)),\n  getContentEl: (ctx) => dom.getById(ctx, dom.getContentId(ctx)),\n  getTriggerEl: (ctx) => dom.getById(ctx, dom.getTriggerId(ctx))\n});\n\n// src/collapsible.connect.ts\nfunction connect(state, send, normalize) {\n  const visible = state.matches(\"open\", \"closing\");\n  const open = state.matches(\"open\");\n  const height = state.context.height;\n  const width = state.context.width;\n  const disabled = !!state.context.disabled;\n  const skip = !state.context.initial && open;\n  return {\n    disabled,\n    visible,\n    open,\n    measureSize() {\n      send(\"SIZE.MEASURE\");\n    },\n    setOpen(nextOpen) {\n      if (nextOpen === open) return;\n      send(nextOpen ? \"OPEN\" : \"CLOSE\");\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        \"data-state\": open ? \"open\" : \"closed\",\n        dir: state.context.dir,\n        id: dom.getRootId(state.context)\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        \"data-collapsible\": \"\",\n        \"data-state\": skip ? void 0 : open ? \"open\" : \"closed\",\n        id: dom.getContentId(state.context),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        hidden: !visible,\n        style: {\n          \"--height\": height != null ? `${height}px` : void 0,\n          \"--width\": width != null ? `${width}px` : void 0\n        }\n      });\n    },\n    getTriggerProps() {\n      return normalize.element({\n        ...parts.trigger.attrs,\n        id: dom.getTriggerId(state.context),\n        dir: state.context.dir,\n        type: \"button\",\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"aria-controls\": dom.getContentId(state.context),\n        \"aria-expanded\": visible || false,\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          send({ type: open ? \"CLOSE\" : \"OPEN\", src: \"trigger.click\" });\n        }\n      });\n    }\n  };\n}\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)(\n    {\n      id: \"collapsible\",\n      initial: ctx.open ? \"open\" : \"closed\",\n      context: {\n        ...ctx,\n        height: 0,\n        width: 0,\n        initial: false,\n        stylesRef: null,\n        unmountAnimationName: null\n      },\n      watch: {\n        open: [\"setInitial\", \"computeSize\", \"toggleVisibility\"]\n      },\n      exit: [\"clearInitial\", \"cleanupNode\"],\n      states: {\n        closed: {\n          tags: [\"closed\"],\n          on: {\n            \"CONTROLLED.OPEN\": \"open\",\n            OPEN: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"setInitial\", \"computeSize\", \"invokeOnOpen\"]\n              }\n            ]\n          }\n        },\n        closing: {\n          tags: [\"open\"],\n          activities: [\"trackExitAnimation\"],\n          on: {\n            \"CONTROLLED.CLOSE\": \"closed\",\n            \"CONTROLLED.OPEN\": \"open\",\n            OPEN: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"setInitial\", \"invokeOnOpen\"]\n              }\n            ],\n            CLOSE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnExitComplete\"]\n              },\n              {\n                target: \"closed\",\n                actions: [\"setInitial\", \"computeSize\", \"invokeOnExitComplete\"]\n              }\n            ],\n            \"ANIMATION.END\": {\n              target: \"closed\",\n              actions: [\"invokeOnExitComplete\", \"clearInitial\"]\n            }\n          }\n        },\n        open: {\n          tags: [\"open\"],\n          activities: [\"trackEnterAnimation\"],\n          on: {\n            \"CONTROLLED.CLOSE\": \"closing\",\n            CLOSE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                target: \"closing\",\n                actions: [\"setInitial\", \"computeSize\", \"invokeOnClose\"]\n              }\n            ],\n            \"SIZE.MEASURE\": {\n              actions: [\"measureSize\"]\n            },\n            \"ANIMATION.END\": {\n              actions: [\"clearInitial\"]\n            }\n          }\n        }\n      }\n    },\n    {\n      guards: {\n        isOpenControlled: (ctx2) => !!ctx2[\"open.controlled\"]\n      },\n      activities: {\n        trackEnterAnimation(ctx2, _evt, { send }) {\n          let cleanup;\n          const rafCleanup = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            const contentEl = dom.getContentEl(ctx2);\n            if (!contentEl) return;\n            const animationName = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getComputedStyle)(contentEl).animationName;\n            const hasNoAnimation = !animationName || animationName === \"none\";\n            if (hasNoAnimation) {\n              send({ type: \"ANIMATION.END\" });\n              return;\n            }\n            const onEnd = (event) => {\n              const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event);\n              if (target === contentEl) {\n                send({ type: \"ANIMATION.END\" });\n              }\n            };\n            contentEl.addEventListener(\"animationend\", onEnd);\n            cleanup = () => {\n              contentEl.removeEventListener(\"animationend\", onEnd);\n            };\n          });\n          return () => {\n            rafCleanup();\n            cleanup?.();\n          };\n        },\n        trackExitAnimation(ctx2, _evt, { send }) {\n          let cleanup;\n          const rafCleanup = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            const contentEl = dom.getContentEl(ctx2);\n            if (!contentEl) return;\n            const animationName = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getComputedStyle)(contentEl).animationName;\n            const hasNoAnimation = !animationName || animationName === \"none\";\n            if (hasNoAnimation) {\n              send({ type: \"ANIMATION.END\" });\n              return;\n            }\n            const onEnd = (event) => {\n              const win = contentEl.ownerDocument.defaultView || window;\n              const animationName2 = win.getComputedStyle(contentEl).animationName;\n              const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event);\n              if (target === contentEl && animationName2 === ctx2.unmountAnimationName) {\n                send({ type: \"ANIMATION.END\" });\n              }\n            };\n            contentEl.addEventListener(\"animationend\", onEnd);\n            cleanup = () => {\n              contentEl.removeEventListener(\"animationend\", onEnd);\n            };\n          });\n          return () => {\n            rafCleanup();\n            cleanup?.();\n          };\n        }\n      },\n      actions: {\n        setInitial(ctx2) {\n          ctx2.initial = true;\n        },\n        clearInitial(ctx2) {\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            ctx2.initial = false;\n          });\n        },\n        cleanupNode(ctx2) {\n          ctx2.stylesRef = null;\n        },\n        measureSize(ctx2) {\n          const contentEl = dom.getContentEl(ctx2);\n          if (!contentEl) return;\n          const { height, width } = contentEl.getBoundingClientRect();\n          ctx2.height = height;\n          ctx2.width = width;\n        },\n        computeSize(ctx2, evt) {\n          ctx2._rafCleanup?.();\n          ctx2._rafCleanup = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            const contentEl = dom.getContentEl(ctx2);\n            if (!contentEl) return;\n            ctx2.stylesRef || (ctx2.stylesRef = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_4__.ref)({\n              animationName: contentEl.style.animationName,\n              animationDuration: contentEl.style.animationDuration\n            }));\n            if (evt.type === \"CLOSE\" || !ctx2.open) {\n              const win = contentEl.ownerDocument.defaultView || window;\n              ctx2.unmountAnimationName = win.getComputedStyle(contentEl).animationName;\n            }\n            const hidden = contentEl.hidden;\n            contentEl.style.animationName = \"none\";\n            contentEl.style.animationDuration = \"0s\";\n            contentEl.hidden = false;\n            const rect = contentEl.getBoundingClientRect();\n            ctx2.height = rect.height;\n            ctx2.width = rect.width;\n            if (ctx2.initial) {\n              contentEl.style.animationName = ctx2.stylesRef.animationName;\n              contentEl.style.animationDuration = ctx2.stylesRef.animationDuration;\n            }\n            contentEl.hidden = hidden;\n          });\n        },\n        invokeOnOpen: (ctx2) => {\n          ctx2.onOpenChange?.({ open: true });\n        },\n        invokeOnClose: (ctx2) => {\n          ctx2.onOpenChange?.({ open: false });\n        },\n        invokeOnExitComplete(ctx2) {\n          ctx2.onExitComplete?.();\n        },\n        toggleVisibility: (ctx2, _evt, { send }) => {\n          send({ type: ctx2.open ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\" });\n        }\n      }\n    }\n  );\n}\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_5__.createProps)()([\n  \"dir\",\n  \"disabled\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"onExitComplete\",\n  \"onOpenChange\",\n  \"open.controlled\",\n  \"open\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/collapsible/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/collection/dist/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@zag-js/collection/dist/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GridCollection: () => (/* binding */ GridCollection),\n/* harmony export */   ListCollection: () => (/* binding */ ListCollection),\n/* harmony export */   TreeCollection: () => (/* binding */ TreeCollection),\n/* harmony export */   filePathToTree: () => (/* binding */ filePathToTree),\n/* harmony export */   flattenedToTree: () => (/* binding */ flattenedToTree)\n/* harmony export */ });\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nvar fallback = {\n  itemToValue(item) {\n    if (typeof item === \"string\") return item;\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(item) && (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.hasProp)(item, \"value\")) return item.value;\n    return \"\";\n  },\n  itemToString(item) {\n    if (typeof item === \"string\") return item;\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(item) && (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.hasProp)(item, \"label\")) return item.label;\n    return fallback.itemToValue(item);\n  },\n  isItemDisabled(item) {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(item) && (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.hasProp)(item, \"disabled\")) return !!item.disabled;\n    return false;\n  }\n};\nvar ListCollection = class {\n  constructor(options) {\n    this.options = options;\n    /**\n     * The items in the collection\n     */\n    __publicField(this, \"items\");\n    this.items = [...options.items];\n  }\n  isEqual(other) {\n    return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isEqual)(this.items, other.items);\n  }\n  /**\n   * Function to update the collection items\n   */\n  setItems(items) {\n    this.items = Array.from(items);\n  }\n  /**\n   * Returns all the values in the collection\n   */\n  getValues(items = this.items) {\n    return Array.from(items).map((item) => this.getItemValue(item)).filter(Boolean);\n  }\n  /**\n   * Get the item based on its value\n   */\n  find(value) {\n    if (value == null) return null;\n    const index = this.items.findIndex((item) => this.getItemValue(item) === value);\n    return index != null ? this.items[index] : null;\n  }\n  /**\n   * Get the items based on its values\n   */\n  findMany(values) {\n    return Array.from(values).map((value) => this.find(value)).filter(Boolean);\n  }\n  /**\n   * Get the item based on its index\n   */\n  at(index) {\n    return this.items[index] ?? null;\n  }\n  sortFn(valueA, valueB) {\n    const indexA = this.indexOf(valueA);\n    const indexB = this.indexOf(valueB);\n    return (indexA ?? 0) - (indexB ?? 0);\n  }\n  /**\n   * Sort the values based on their index\n   */\n  sort(values) {\n    return [...values].sort(this.sortFn.bind(this));\n  }\n  /**\n   * Convert an item to a value\n   */\n  getItemValue(item) {\n    if (item == null) return null;\n    return this.options.itemToValue?.(item) ?? fallback.itemToValue(item);\n  }\n  /**\n   * Whether an item is disabled\n   */\n  getItemDisabled(item) {\n    if (item == null) return false;\n    return this.options.isItemDisabled?.(item) ?? fallback.isItemDisabled(item);\n  }\n  /**\n   * Convert an item to a string\n   */\n  stringifyItem(item) {\n    if (item == null) return null;\n    return this.options.itemToString?.(item) ?? fallback.itemToString(item);\n  }\n  /**\n   * Convert a value to a string\n   */\n  stringify(value) {\n    if (value == null) return null;\n    return this.stringifyItem(this.find(value));\n  }\n  /**\n   * Convert an array of items to a string\n   */\n  stringifyItems(items, separator = \", \") {\n    return Array.from(items).map((item) => this.stringifyItem(item)).filter(Boolean).join(separator);\n  }\n  /**\n   * Convert an array of items to a string\n   */\n  stringifyMany(value, separator) {\n    return this.stringifyItems(this.findMany(value), separator);\n  }\n  /**\n   * Whether the collection has a value\n   */\n  has(value) {\n    return this.indexOf(value) !== -1;\n  }\n  /**\n   * Whether the collection has an item\n   */\n  hasItem(item) {\n    if (item == null) return false;\n    return this.has(this.getItemValue(item));\n  }\n  /**\n   * Returns the number of items in the collection\n   */\n  get size() {\n    return this.items.length;\n  }\n  /**\n   * Returns the first value in the collection\n   */\n  get firstValue() {\n    let index = 0;\n    while (this.getItemDisabled(this.at(index))) index++;\n    return this.getItemValue(this.at(index));\n  }\n  /**\n   * Returns the last value in the collection\n   */\n  get lastValue() {\n    let index = this.size - 1;\n    while (this.getItemDisabled(this.at(index))) index--;\n    return this.getItemValue(this.at(index));\n  }\n  /**\n   * Returns the next value in the collection\n   */\n  getNextValue(value, step = 1, clamp = false) {\n    let index = this.indexOf(value);\n    if (index === -1) return null;\n    index = clamp ? Math.min(index + step, this.size - 1) : index + step;\n    while (index <= this.size && this.getItemDisabled(this.at(index))) index++;\n    return this.getItemValue(this.at(index));\n  }\n  /**\n   * Returns the previous value in the collection\n   */\n  getPreviousValue(value, step = 1, clamp = false) {\n    let index = this.indexOf(value);\n    if (index === -1) return null;\n    index = clamp ? Math.max(index - step, 0) : index - step;\n    while (index >= 0 && this.getItemDisabled(this.at(index))) index--;\n    return this.getItemValue(this.at(index));\n  }\n  /**\n   * Get the index of an item based on its key\n   */\n  indexOf(value) {\n    if (value == null) return -1;\n    return this.items.findIndex((item) => this.getItemValue(item) === value);\n  }\n  getByText(text, current) {\n    let items = current != null ? wrap(this.items, this.indexOf(current)) : this.items;\n    const isSingleKey = text.length === 1;\n    if (isSingleKey) items = items.filter((item) => this.getItemValue(item) !== current);\n    return items.find((item) => match(this.stringifyItem(item), text));\n  }\n  /**\n   * Search for a value based on a query\n   */\n  search(queryString, options) {\n    const { state, currentValue, timeout = 350 } = options;\n    const search = state.keysSoFar + queryString;\n    const isRepeated = search.length > 1 && Array.from(search).every((char) => char === search[0]);\n    const query = isRepeated ? search[0] : search;\n    const item = this.getByText(query, currentValue);\n    const value = this.getItemValue(item);\n    function cleanup() {\n      clearTimeout(state.timer);\n      state.timer = -1;\n    }\n    function update(value2) {\n      state.keysSoFar = value2;\n      cleanup();\n      if (value2 !== \"\") {\n        state.timer = +setTimeout(() => {\n          update(\"\");\n          cleanup();\n        }, timeout);\n      }\n    }\n    update(search);\n    return value;\n  }\n  *[Symbol.iterator]() {\n    yield* this.items;\n  }\n  insertBefore(value, item) {\n    const index = this.indexOf(value);\n    if (index === -1) return;\n    this.items.splice(index, 0, item);\n  }\n  insertAfter(value, item) {\n    const index = this.indexOf(value);\n    if (index === -1) return;\n    this.items.splice(index + 1, 0, item);\n  }\n  reorder(fromIndex, toIndex) {\n    if (fromIndex === -1 || toIndex === -1) return;\n    if (fromIndex === toIndex) return;\n    const [removed] = this.items.splice(fromIndex, 1);\n    this.items.splice(toIndex, 0, removed);\n  }\n  json() {\n    return {\n      size: this.size,\n      first: this.firstValue,\n      last: this.lastValue\n    };\n  }\n};\nvar match = (label, query) => {\n  return !!label?.toLowerCase().startsWith(query.toLowerCase());\n};\nvar wrap = (v, idx) => {\n  return v.map((_, index) => v[(Math.max(idx, 0) + index) % v.length]);\n};\n\n// src/grid-collection.ts\nvar GridCollection = class extends ListCollection {\n  constructor(options) {\n    const { columnCount } = options;\n    super(options);\n    __publicField(this, \"columnCount\");\n    this.columnCount = columnCount;\n  }\n  /**\n   * Returns the row data in the grid\n   */\n  getRows() {\n    return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.chunk)([...this.items], this.columnCount);\n  }\n  /**\n   * Returns the number of rows in the grid\n   */\n  getRowCount() {\n    return this.getRows().length;\n  }\n  /**\n   * Returns the index of the specified row and column in the grid\n   */\n  getCellIndex(row, column) {\n    return row * this.columnCount + column;\n  }\n  /**\n   * Returns the item at the specified row and column in the grid\n   */\n  getCell(row, column) {\n    return this.at(this.getCellIndex(row, column));\n  }\n  /**\n   * Returns the value of the previous row in the grid, based on the current value\n   */\n  getPreviousRowValue(value, clamp = false) {\n    return this.getPreviousValue(value, this.columnCount, clamp);\n  }\n  /**\n   * Returns the value of the next row in the grid, based on the current value\n   */\n  getNextRowValue(value, clamp = false) {\n    return this.getNextValue(value, this.columnCount, clamp);\n  }\n};\n\n// src/tree-visit.ts\nfunction access(node, indexPath, options) {\n  for (let i = 0; i < indexPath.length; i++) node = options.getChildren(node, indexPath.slice(i + 1))[indexPath[i]];\n  return node;\n}\nfunction ancestorIndexPaths(indexPaths) {\n  const sortedPaths = sortIndexPaths(indexPaths);\n  const result = [];\n  const seen = /* @__PURE__ */ new Set();\n  for (const indexPath of sortedPaths) {\n    const key = indexPath.join();\n    if (!seen.has(key)) {\n      seen.add(key);\n      result.push(indexPath);\n    }\n  }\n  return result;\n}\nfunction compareIndexPaths(a, b) {\n  for (let i = 0; i < Math.min(a.length, b.length); i++) {\n    if (a[i] < b[i]) return -1;\n    if (a[i] > b[i]) return 1;\n  }\n  return a.length - b.length;\n}\nfunction sortIndexPaths(indexPaths) {\n  return indexPaths.sort(compareIndexPaths);\n}\nfunction find(node, options) {\n  let found;\n  visit(node, {\n    ...options,\n    onEnter: (child, indexPath) => {\n      if (options.predicate(child, indexPath)) {\n        found = child;\n        return \"stop\";\n      }\n    }\n  });\n  return found;\n}\nfunction findIndexPath(node, options) {\n  let found;\n  visit(node, {\n    onEnter: (child, indexPath) => {\n      if (options.predicate(child, indexPath)) {\n        found = [...indexPath];\n        return \"stop\";\n      }\n    },\n    getChildren: options.getChildren\n  });\n  return found;\n}\nfunction reduce(node, options) {\n  let result = options.initialResult;\n  visit(node, {\n    ...options,\n    onEnter: (child, indexPath) => {\n      result = options.nextResult(result, child, indexPath);\n    }\n  });\n  return result;\n}\nfunction flatMap(node, options) {\n  return reduce(node, {\n    ...options,\n    initialResult: [],\n    nextResult: (result, child, indexPath) => {\n      result.push(...options.transform(child, indexPath));\n      return result;\n    }\n  });\n}\nfunction insertOperation(index, nodes) {\n  return { type: \"insert\", index, nodes };\n}\nfunction removeOperation(indexes) {\n  return { type: \"remove\", indexes };\n}\nfunction replaceOperation() {\n  return { type: \"replace\" };\n}\nfunction splitIndexPath(indexPath) {\n  return [indexPath.slice(0, -1), indexPath[indexPath.length - 1]];\n}\nfunction getInsertionOperations(indexPath, nodes, operations = /* @__PURE__ */ new Map()) {\n  const [parentIndexPath, index] = splitIndexPath(indexPath);\n  for (let i = parentIndexPath.length - 1; i >= 0; i--) {\n    const parentKey = parentIndexPath.slice(0, i).join();\n    switch (operations.get(parentKey)?.type) {\n      case \"remove\":\n        continue;\n    }\n    operations.set(parentKey, replaceOperation());\n  }\n  const operation = operations.get(parentIndexPath.join());\n  switch (operation?.type) {\n    case \"remove\":\n      operations.set(parentIndexPath.join(), {\n        type: \"removeThenInsert\",\n        removeIndexes: operation.indexes,\n        insertIndex: index,\n        insertNodes: nodes\n      });\n      break;\n    default:\n      operations.set(parentIndexPath.join(), insertOperation(index, nodes));\n  }\n  return operations;\n}\nfunction getRemovalOperations(indexPaths) {\n  const operations = /* @__PURE__ */ new Map();\n  const indexesToRemove = /* @__PURE__ */ new Map();\n  for (const indexPath of indexPaths) {\n    const parentKey = indexPath.slice(0, -1).join();\n    const value = indexesToRemove.get(parentKey) ?? [];\n    value.push(indexPath[indexPath.length - 1]);\n    indexesToRemove.set(\n      parentKey,\n      value.sort((a, b) => a - b)\n    );\n  }\n  for (const indexPath of indexPaths) {\n    for (let i = indexPath.length - 2; i >= 0; i--) {\n      const parentKey = indexPath.slice(0, i).join();\n      if (!operations.has(parentKey)) {\n        operations.set(parentKey, replaceOperation());\n      }\n    }\n  }\n  for (const [parentKey, indexes] of indexesToRemove) {\n    operations.set(parentKey, removeOperation(indexes));\n  }\n  return operations;\n}\nfunction getReplaceOperations(indexPath, node) {\n  const operations = /* @__PURE__ */ new Map();\n  const [parentIndexPath, index] = splitIndexPath(indexPath);\n  for (let i = parentIndexPath.length - 1; i >= 0; i--) {\n    const parentKey = parentIndexPath.slice(0, i).join();\n    operations.set(parentKey, replaceOperation());\n  }\n  operations.set(parentIndexPath.join(), {\n    type: \"removeThenInsert\",\n    removeIndexes: [index],\n    insertIndex: index,\n    insertNodes: [node]\n  });\n  return operations;\n}\nfunction mutate(node, operations, options) {\n  return map(node, {\n    ...options,\n    getChildren: (node2, indexPath) => {\n      const key = indexPath.join();\n      const operation = operations.get(key);\n      switch (operation?.type) {\n        case \"replace\":\n        case \"remove\":\n        case \"removeThenInsert\":\n        case \"insert\":\n          return options.getChildren(node2, indexPath);\n        default:\n          return [];\n      }\n    },\n    transform: (node2, children, indexPath) => {\n      const key = indexPath.join();\n      const operation = operations.get(key);\n      switch (operation?.type) {\n        case \"remove\":\n          return options.create(\n            node2,\n            children.filter((_, index) => !operation.indexes.includes(index)),\n            indexPath\n          );\n        case \"removeThenInsert\":\n          const updatedChildren = children.filter((_, index) => !operation.removeIndexes.includes(index));\n          const adjustedIndex = operation.removeIndexes.reduce(\n            (index, removedIndex) => removedIndex < index ? index - 1 : index,\n            operation.insertIndex\n          );\n          return options.create(node2, splice(updatedChildren, adjustedIndex, 0, ...operation.insertNodes), indexPath);\n        case \"insert\":\n          return options.create(node2, splice(children, operation.index, 0, ...operation.nodes), indexPath);\n        case \"replace\":\n          return options.create(node2, children, indexPath);\n        default:\n          return node2;\n      }\n    }\n  });\n}\nfunction splice(array, start, deleteCount, ...items) {\n  return [...array.slice(0, start), ...items, ...array.slice(start + deleteCount)];\n}\nfunction map(node, options) {\n  const childrenMap = {};\n  visit(node, {\n    ...options,\n    onLeave: (child, indexPath) => {\n      const keyIndexPath = [0, ...indexPath];\n      const key = keyIndexPath.join();\n      const transformed = options.transform(child, childrenMap[key] ?? [], indexPath);\n      const parentKey = keyIndexPath.slice(0, -1).join();\n      const parentChildren = childrenMap[parentKey] ?? [];\n      parentChildren.push(transformed);\n      childrenMap[parentKey] = parentChildren;\n    }\n  });\n  return childrenMap[\"\"][0];\n}\nfunction insert(node, options) {\n  const { nodes, at } = options;\n  if (at.length === 0) throw new Error(`Can't insert nodes at the root`);\n  const state = getInsertionOperations(at, nodes);\n  return mutate(node, state, options);\n}\nfunction replace(node, options) {\n  if (options.at.length === 0) return options.node;\n  const operations = getReplaceOperations(options.at, options.node);\n  return mutate(node, operations, options);\n}\nfunction remove(node, options) {\n  if (options.indexPaths.length === 0) return node;\n  for (const indexPath of options.indexPaths) {\n    if (indexPath.length === 0) throw new Error(`Can't remove the root node`);\n  }\n  const operations = getRemovalOperations(options.indexPaths);\n  return mutate(node, operations, options);\n}\nfunction move(node, options) {\n  if (options.indexPaths.length === 0) return node;\n  for (const indexPath of options.indexPaths) {\n    if (indexPath.length === 0) throw new Error(`Can't move the root node`);\n  }\n  if (options.to.length === 0) throw new Error(`Can't move nodes to the root`);\n  const _ancestorIndexPaths = ancestorIndexPaths(options.indexPaths);\n  const nodesToInsert = _ancestorIndexPaths.map((indexPath) => access(node, indexPath, options));\n  const operations = getInsertionOperations(options.to, nodesToInsert, getRemovalOperations(_ancestorIndexPaths));\n  return mutate(node, operations, options);\n}\nfunction visit(node, options) {\n  const { onEnter, onLeave, getChildren } = options;\n  let indexPath = [];\n  let stack = [{ node }];\n  const getIndexPath = options.reuseIndexPath ? () => indexPath : () => indexPath.slice();\n  while (stack.length > 0) {\n    let wrapper = stack[stack.length - 1];\n    if (wrapper.state === void 0) {\n      const enterResult = onEnter?.(wrapper.node, getIndexPath());\n      if (enterResult === \"stop\") return;\n      wrapper.state = enterResult === \"skip\" ? -1 : 0;\n    }\n    const children = wrapper.children || getChildren(wrapper.node, getIndexPath());\n    wrapper.children || (wrapper.children = children);\n    if (wrapper.state !== -1) {\n      if (wrapper.state < children.length) {\n        let currentIndex = wrapper.state;\n        indexPath.push(currentIndex);\n        stack.push({ node: children[currentIndex] });\n        wrapper.state = currentIndex + 1;\n        continue;\n      }\n      const leaveResult = onLeave?.(wrapper.node, getIndexPath());\n      if (leaveResult === \"stop\") return;\n    }\n    indexPath.pop();\n    stack.pop();\n  }\n}\n\n// src/tree-collection.ts\nvar TreeCollection = class {\n  constructor(options) {\n    this.options = options;\n    __publicField(this, \"rootNode\");\n    __publicField(this, \"isEqual\", (other) => {\n      return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isEqual)(this.rootNode, other.rootNode);\n    });\n    __publicField(this, \"getNodeChildren\", (node) => {\n      return this.options.nodeToChildren?.(node) ?? fallback2.nodeToChildren(node) ?? [];\n    });\n    __publicField(this, \"getNodeValue\", (node) => {\n      return this.options.nodeToValue?.(node) ?? fallback2.nodeToValue(node);\n    });\n    __publicField(this, \"getNodeDisabled\", (node) => {\n      return this.options.isNodeDisabled?.(node) ?? fallback2.isNodeDisabled(node);\n    });\n    __publicField(this, \"stringify\", (value) => {\n      const node = this.findNode(value);\n      if (!node) return null;\n      return this.stringifyNode(node);\n    });\n    __publicField(this, \"stringifyNode\", (node) => {\n      return this.options.nodeToString?.(node) ?? fallback2.nodeToString(node);\n    });\n    __publicField(this, \"getFirstNode\", (rootNode = this.rootNode) => {\n      let firstChild;\n      visit(rootNode, {\n        getChildren: this.getNodeChildren,\n        onEnter: (node, indexPath) => {\n          if (!firstChild && indexPath.length > 0 && !this.getNodeDisabled(node)) {\n            firstChild = node;\n            return \"stop\";\n          }\n        }\n      });\n      return firstChild;\n    });\n    __publicField(this, \"getLastNode\", (rootNode = this.rootNode, opts = {}) => {\n      let lastChild;\n      visit(rootNode, {\n        getChildren: this.getNodeChildren,\n        onEnter: (node, indexPath) => {\n          const nodeValue = this.getNodeValue(node);\n          if (opts.skip?.({ value: nodeValue, node, indexPath })) return \"skip\";\n          if (indexPath.length > 1) return \"skip\";\n          if (!this.getNodeDisabled(node)) {\n            lastChild = node;\n          }\n        }\n      });\n      return lastChild;\n    });\n    __publicField(this, \"at\", (indexPath) => {\n      return access(this.rootNode, indexPath, {\n        getChildren: this.getNodeChildren\n      });\n    });\n    __publicField(this, \"findNode\", (value, rootNode = this.rootNode) => {\n      return find(rootNode, {\n        getChildren: this.getNodeChildren,\n        predicate: (node) => this.getNodeValue(node) === value\n      });\n    });\n    __publicField(this, \"sort\", (values) => {\n      return values.reduce(\n        (acc, value) => {\n          const indexPath = this.getIndexPath(value);\n          if (indexPath != null) acc.push({ value, indexPath });\n          return acc;\n        },\n        []\n      ).sort((a, b) => compareIndexPaths(a.indexPath, b.indexPath)).map(({ value }) => value);\n    });\n    __publicField(this, \"getIndexPath\", (value) => {\n      return findIndexPath(this.rootNode, {\n        getChildren: this.getNodeChildren,\n        predicate: (node) => this.getNodeValue(node) === value\n      });\n    });\n    __publicField(this, \"getValue\", (indexPath) => {\n      const node = this.at(indexPath);\n      return node ? this.getNodeValue(node) : void 0;\n    });\n    __publicField(this, \"getValuePath\", (indexPath) => {\n      if (!indexPath) return [];\n      const valuePath = [];\n      let currentPath = [...indexPath];\n      while (currentPath.length > 0) {\n        const node = this.at(currentPath);\n        if (node) valuePath.unshift(this.getNodeValue(node));\n        currentPath.pop();\n      }\n      return valuePath;\n    });\n    __publicField(this, \"getDepth\", (value) => {\n      const indexPath = findIndexPath(this.rootNode, {\n        getChildren: this.getNodeChildren,\n        predicate: (node) => this.getNodeValue(node) === value\n      });\n      return indexPath?.length ?? 0;\n    });\n    __publicField(this, \"isRootNode\", (node) => {\n      return this.getNodeValue(node) === this.getNodeValue(this.rootNode);\n    });\n    __publicField(this, \"contains\", (parentIndexPath, valueIndexPath) => {\n      if (!parentIndexPath || !valueIndexPath) return false;\n      return valueIndexPath.slice(0, parentIndexPath.length).every((_, i) => parentIndexPath[i] === valueIndexPath[i]);\n    });\n    __publicField(this, \"getNextNode\", (value, opts = {}) => {\n      let found = false;\n      let nextNode;\n      visit(this.rootNode, {\n        getChildren: this.getNodeChildren,\n        onEnter: (node, indexPath) => {\n          if (this.isRootNode(node)) return;\n          const nodeValue = this.getNodeValue(node);\n          if (opts.skip?.({ value: nodeValue, node, indexPath })) {\n            if (nodeValue === value) {\n              found = true;\n            }\n            return \"skip\";\n          }\n          if (found && !this.getNodeDisabled(node)) {\n            nextNode = node;\n            return \"stop\";\n          }\n          if (nodeValue === value) {\n            found = true;\n          }\n        }\n      });\n      return nextNode;\n    });\n    __publicField(this, \"getPreviousNode\", (value, opts = {}) => {\n      let previousNode;\n      let found = false;\n      visit(this.rootNode, {\n        getChildren: this.getNodeChildren,\n        onEnter: (node, indexPath) => {\n          if (this.isRootNode(node)) return;\n          const nodeValue = this.getNodeValue(node);\n          if (opts.skip?.({ value: nodeValue, node, indexPath })) {\n            return \"skip\";\n          }\n          if (nodeValue === value) {\n            found = true;\n            return \"stop\";\n          }\n          if (!this.getNodeDisabled(node)) {\n            previousNode = node;\n          }\n        }\n      });\n      return found ? previousNode : void 0;\n    });\n    __publicField(this, \"getParentNodes\", (values) => {\n      const result = [];\n      let indexPath = this.getIndexPath(values);\n      while (indexPath && indexPath.length > 0) {\n        indexPath.pop();\n        const parentNode = this.at(indexPath);\n        if (parentNode && !this.isRootNode(parentNode)) {\n          result.unshift(parentNode);\n        }\n      }\n      return result;\n    });\n    __publicField(this, \"getParentIndexPath\", (indexPath) => {\n      return indexPath.slice(0, -1);\n    });\n    __publicField(this, \"getParentNode\", (valueOrIndexPath) => {\n      const indexPath = typeof valueOrIndexPath === \"string\" ? this.getIndexPath(valueOrIndexPath) : valueOrIndexPath;\n      return indexPath ? this.at(this.getParentIndexPath(indexPath)) : void 0;\n    });\n    __publicField(this, \"visit\", (opts) => {\n      const { skip, ...rest } = opts;\n      visit(this.rootNode, {\n        ...rest,\n        getChildren: this.getNodeChildren,\n        onEnter: (node, indexPath) => {\n          if (this.isRootNode(node)) return;\n          if (skip?.({ value: this.getNodeValue(node), node, indexPath })) return \"skip\";\n          return rest.onEnter?.(node, indexPath);\n        }\n      });\n    });\n    __publicField(this, \"getPreviousSibling\", (indexPath) => {\n      const parentNode = this.getParentNode(indexPath);\n      if (!parentNode) return;\n      const siblings = this.getNodeChildren(parentNode);\n      let idx = siblings.findIndex((sibling) => this.getValue(indexPath) === this.getNodeValue(sibling));\n      while (--idx >= 0) {\n        const sibling = siblings[idx];\n        if (!this.getNodeDisabled(sibling)) return sibling;\n      }\n      return;\n    });\n    __publicField(this, \"getNextSibling\", (indexPath) => {\n      const parentNode = this.getParentNode(indexPath);\n      if (!parentNode) return;\n      const siblings = this.getNodeChildren(parentNode);\n      let idx = siblings.findIndex((sibling) => this.getValue(indexPath) === this.getNodeValue(sibling));\n      while (++idx < siblings.length) {\n        const sibling = siblings[idx];\n        if (!this.getNodeDisabled(sibling)) return sibling;\n      }\n      return;\n    });\n    __publicField(this, \"getSiblingNodes\", (indexPath) => {\n      const parentNode = this.getParentNode(indexPath);\n      return parentNode ? this.getNodeChildren(parentNode) : [];\n    });\n    __publicField(this, \"getValues\", (rootNode = this.rootNode) => {\n      const values = flatMap(rootNode, {\n        getChildren: this.getNodeChildren,\n        transform: (node) => [this.getNodeValue(node)]\n      });\n      return values.slice(1);\n    });\n    __publicField(this, \"isSameDepth\", (indexPath, depth) => {\n      if (depth == null) return true;\n      return indexPath.length === depth;\n    });\n    __publicField(this, \"isBranchNode\", (node) => {\n      return this.getNodeChildren(node).length > 0;\n    });\n    __publicField(this, \"getBranchValues\", (rootNode = this.rootNode, opts = {}) => {\n      let values = [];\n      visit(rootNode, {\n        getChildren: this.getNodeChildren,\n        onEnter: (node, indexPath) => {\n          const nodeValue = this.getNodeValue(node);\n          if (opts.skip?.({ value: nodeValue, node, indexPath })) return \"skip\";\n          if (this.getNodeChildren(node).length > 0 && this.isSameDepth(indexPath, opts.depth)) {\n            values.push(this.getNodeValue(node));\n          }\n        }\n      });\n      return values.slice(1);\n    });\n    __publicField(this, \"flatten\", (rootNode = this.rootNode) => {\n      const nodes = flatMap(rootNode, {\n        getChildren: this.getNodeChildren,\n        transform: (node, indexPath) => {\n          const children = this.getNodeChildren(node).map((child) => this.getNodeValue(child));\n          return [\n            (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.compact)({\n              label: this.stringifyNode(node),\n              value: this.getNodeValue(node),\n              indexPath,\n              children: children.length > 0 ? children : void 0\n            })\n          ];\n        }\n      });\n      return nodes.slice(1);\n    });\n    __publicField(this, \"_create\", (node, children) => {\n      return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.compact)({ ...node, children });\n    });\n    __publicField(this, \"_insert\", (rootNode, indexPath, nodes) => {\n      return insert(rootNode, { at: indexPath, nodes, getChildren: this.getNodeChildren, create: this._create });\n    });\n    __publicField(this, \"_replace\", (rootNode, indexPath, node) => {\n      return replace(rootNode, { at: indexPath, node, getChildren: this.getNodeChildren, create: this._create });\n    });\n    __publicField(this, \"_move\", (rootNode, indexPaths, to) => {\n      return move(rootNode, { indexPaths, to, getChildren: this.getNodeChildren, create: this._create });\n    });\n    __publicField(this, \"_remove\", (rootNode, indexPaths) => {\n      return remove(rootNode, { indexPaths, getChildren: this.getNodeChildren, create: this._create });\n    });\n    __publicField(this, \"replace\", (indexPath, node) => {\n      return this._replace(this.rootNode, indexPath, node);\n    });\n    __publicField(this, \"remove\", (indexPaths) => {\n      return this._remove(this.rootNode, indexPaths);\n    });\n    __publicField(this, \"insertBefore\", (indexPath, nodes) => {\n      const parentNode = this.getParentNode(indexPath);\n      return parentNode ? this._insert(this.rootNode, indexPath, nodes) : void 0;\n    });\n    __publicField(this, \"insertAfter\", (indexPath, nodes) => {\n      const parentNode = this.getParentNode(indexPath);\n      if (!parentNode) return;\n      const nextIndex = [...indexPath.slice(0, -1), indexPath[indexPath.length - 1] + 1];\n      return this._insert(this.rootNode, nextIndex, nodes);\n    });\n    __publicField(this, \"move\", (fromIndexPaths, toIndexPath) => {\n      return this._move(this.rootNode, fromIndexPaths, toIndexPath);\n    });\n    __publicField(this, \"json\", () => {\n      return this.getValues(this.rootNode);\n    });\n    this.rootNode = options.rootNode;\n  }\n};\nfunction flattenedToTree(nodes) {\n  let rootNode = {\n    value: \"ROOT\"\n  };\n  nodes.map((node) => {\n    const { indexPath, label, value } = node;\n    if (!indexPath.length) {\n      Object.assign(rootNode, { label, value, children: [] });\n      return;\n    }\n    rootNode = insert(rootNode, {\n      at: indexPath,\n      nodes: [(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.compact)({ label, value })],\n      getChildren: (node2) => node2.children ?? [],\n      create: (node2, children) => {\n        return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.compact)({ ...node2, children });\n      }\n    });\n  });\n  return new TreeCollection({ rootNode });\n}\nfunction filePathToTree(paths) {\n  const rootNode = {\n    label: \"\",\n    value: \"ROOT\",\n    children: []\n  };\n  paths.forEach((path) => {\n    const parts = path.split(\"/\");\n    let currentNode = rootNode;\n    parts.forEach((part) => {\n      let childNode = currentNode.children?.find((child) => child.label === part);\n      if (!childNode) {\n        childNode = {\n          value: parts.slice(0, parts.indexOf(part) + 1).join(\"/\"),\n          label: part\n        };\n        currentNode.children || (currentNode.children = []);\n        currentNode.children.push(childNode);\n      }\n      currentNode = childNode;\n    });\n  });\n  return new TreeCollection({ rootNode });\n}\nvar fallback2 = {\n  nodeToValue(node) {\n    if (typeof node === \"string\") return node;\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(node) && (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.hasProp)(node, \"value\")) return node.value;\n    return \"\";\n  },\n  nodeToString(node) {\n    if (typeof node === \"string\") return node;\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(node) && (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.hasProp)(node, \"label\")) return node.label;\n    return fallback2.nodeToValue(node);\n  },\n  isNodeDisabled(node) {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.isObject)(node) && (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.hasProp)(node, \"disabled\")) return !!node.disabled;\n    return false;\n  },\n  nodeToChildren(node) {\n    return node.children;\n  }\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9jb2xsZWN0aW9uL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUEyRTs7QUFFM0U7QUFDQSw4RUFBOEUsNkRBQTZEO0FBQzNJO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1REFBUSxVQUFVLHNEQUFPO0FBQ2pDO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxRQUFRLHVEQUFRLFVBQVUsc0RBQU87QUFDakM7QUFDQSxHQUFHO0FBQ0g7QUFDQSxRQUFRLHVEQUFRLFVBQVUsc0RBQU87QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHNEQUFPO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVkscUNBQXFDO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWSxjQUFjO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG9EQUFLO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGtCQUFrQixzQkFBc0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isa0NBQWtDO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLFFBQVE7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLFFBQVE7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxRQUFRO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLFVBQVUsWUFBWTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxnQ0FBZ0M7QUFDMUM7QUFDQSxpQkFBaUIsTUFBTTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLDhCQUE4QjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLHNEQUFPO0FBQ3BCLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsS0FBSztBQUNMLDJFQUEyRTtBQUMzRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLG1DQUFtQztBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLGtCQUFrQjtBQUM5RDtBQUNBLFNBQVM7QUFDVDtBQUNBLDJFQUEyRSxPQUFPO0FBQ2xGLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLHdEQUF3RDtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixtQ0FBbUM7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxLQUFLO0FBQ0wsNERBQTREO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLG1DQUFtQztBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsY0FBYyxnQkFBZ0I7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixpREFBaUQ7QUFDeEU7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMLCtFQUErRTtBQUMvRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLG1DQUFtQztBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHNEQUFPO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxLQUFLO0FBQ0w7QUFDQSxhQUFhLHNEQUFPLEdBQUcsbUJBQW1CO0FBQzFDLEtBQUs7QUFDTDtBQUNBLGdDQUFnQywrRUFBK0U7QUFDL0csS0FBSztBQUNMO0FBQ0EsaUNBQWlDLDhFQUE4RTtBQUMvRyxLQUFLO0FBQ0w7QUFDQSw4QkFBOEIseUVBQXlFO0FBQ3ZHLEtBQUs7QUFDTDtBQUNBLGdDQUFnQyxxRUFBcUU7QUFDckcsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksMEJBQTBCO0FBQ3RDO0FBQ0EsZ0NBQWdDLDRCQUE0QjtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsc0RBQU8sR0FBRyxjQUFjO0FBQ3RDO0FBQ0E7QUFDQSxlQUFlLHNEQUFPLEdBQUcsb0JBQW9CO0FBQzdDO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSCw4QkFBOEIsVUFBVTtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNILDhCQUE4QixVQUFVO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1REFBUSxVQUFVLHNEQUFPO0FBQ2pDO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxRQUFRLHVEQUFRLFVBQVUsc0RBQU87QUFDakM7QUFDQSxHQUFHO0FBQ0g7QUFDQSxRQUFRLHVEQUFRLFVBQVUsc0RBQU87QUFDakM7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7O0FBRTJGIiwic291cmNlcyI6WyIvVXNlcnMvcGhpbGlhaGFtbW9uZC9EZXNrdG9wL2xlYXJuZXItYXBwLXN5c3RlbS9ub2RlX21vZHVsZXMvQHphZy1qcy9jb2xsZWN0aW9uL2Rpc3QvaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzRXF1YWwsIGNodW5rLCBjb21wYWN0LCBpc09iamVjdCwgaGFzUHJvcCB9IGZyb20gJ0B6YWctanMvdXRpbHMnO1xuXG52YXIgX19kZWZQcm9wID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIF9fZGVmTm9ybWFsUHJvcCA9IChvYmosIGtleSwgdmFsdWUpID0+IGtleSBpbiBvYmogPyBfX2RlZlByb3Aob2JqLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSwgdmFsdWUgfSkgOiBvYmpba2V5XSA9IHZhbHVlO1xudmFyIF9fcHVibGljRmllbGQgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBfX2RlZk5vcm1hbFByb3Aob2JqLCB0eXBlb2Yga2V5ICE9PSBcInN5bWJvbFwiID8ga2V5ICsgXCJcIiA6IGtleSwgdmFsdWUpO1xudmFyIGZhbGxiYWNrID0ge1xuICBpdGVtVG9WYWx1ZShpdGVtKSB7XG4gICAgaWYgKHR5cGVvZiBpdGVtID09PSBcInN0cmluZ1wiKSByZXR1cm4gaXRlbTtcbiAgICBpZiAoaXNPYmplY3QoaXRlbSkgJiYgaGFzUHJvcChpdGVtLCBcInZhbHVlXCIpKSByZXR1cm4gaXRlbS52YWx1ZTtcbiAgICByZXR1cm4gXCJcIjtcbiAgfSxcbiAgaXRlbVRvU3RyaW5nKGl0ZW0pIHtcbiAgICBpZiAodHlwZW9mIGl0ZW0gPT09IFwic3RyaW5nXCIpIHJldHVybiBpdGVtO1xuICAgIGlmIChpc09iamVjdChpdGVtKSAmJiBoYXNQcm9wKGl0ZW0sIFwibGFiZWxcIikpIHJldHVybiBpdGVtLmxhYmVsO1xuICAgIHJldHVybiBmYWxsYmFjay5pdGVtVG9WYWx1ZShpdGVtKTtcbiAgfSxcbiAgaXNJdGVtRGlzYWJsZWQoaXRlbSkge1xuICAgIGlmIChpc09iamVjdChpdGVtKSAmJiBoYXNQcm9wKGl0ZW0sIFwiZGlzYWJsZWRcIikpIHJldHVybiAhIWl0ZW0uZGlzYWJsZWQ7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59O1xudmFyIExpc3RDb2xsZWN0aW9uID0gY2xhc3Mge1xuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgICAvKipcbiAgICAgKiBUaGUgaXRlbXMgaW4gdGhlIGNvbGxlY3Rpb25cbiAgICAgKi9cbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiaXRlbXNcIik7XG4gICAgdGhpcy5pdGVtcyA9IFsuLi5vcHRpb25zLml0ZW1zXTtcbiAgfVxuICBpc0VxdWFsKG90aGVyKSB7XG4gICAgcmV0dXJuIGlzRXF1YWwodGhpcy5pdGVtcywgb3RoZXIuaXRlbXMpO1xuICB9XG4gIC8qKlxuICAgKiBGdW5jdGlvbiB0byB1cGRhdGUgdGhlIGNvbGxlY3Rpb24gaXRlbXNcbiAgICovXG4gIHNldEl0ZW1zKGl0ZW1zKSB7XG4gICAgdGhpcy5pdGVtcyA9IEFycmF5LmZyb20oaXRlbXMpO1xuICB9XG4gIC8qKlxuICAgKiBSZXR1cm5zIGFsbCB0aGUgdmFsdWVzIGluIHRoZSBjb2xsZWN0aW9uXG4gICAqL1xuICBnZXRWYWx1ZXMoaXRlbXMgPSB0aGlzLml0ZW1zKSB7XG4gICAgcmV0dXJuIEFycmF5LmZyb20oaXRlbXMpLm1hcCgoaXRlbSkgPT4gdGhpcy5nZXRJdGVtVmFsdWUoaXRlbSkpLmZpbHRlcihCb29sZWFuKTtcbiAgfVxuICAvKipcbiAgICogR2V0IHRoZSBpdGVtIGJhc2VkIG9uIGl0cyB2YWx1ZVxuICAgKi9cbiAgZmluZCh2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PSBudWxsKSByZXR1cm4gbnVsbDtcbiAgICBjb25zdCBpbmRleCA9IHRoaXMuaXRlbXMuZmluZEluZGV4KChpdGVtKSA9PiB0aGlzLmdldEl0ZW1WYWx1ZShpdGVtKSA9PT0gdmFsdWUpO1xuICAgIHJldHVybiBpbmRleCAhPSBudWxsID8gdGhpcy5pdGVtc1tpbmRleF0gOiBudWxsO1xuICB9XG4gIC8qKlxuICAgKiBHZXQgdGhlIGl0ZW1zIGJhc2VkIG9uIGl0cyB2YWx1ZXNcbiAgICovXG4gIGZpbmRNYW55KHZhbHVlcykge1xuICAgIHJldHVybiBBcnJheS5mcm9tKHZhbHVlcykubWFwKCh2YWx1ZSkgPT4gdGhpcy5maW5kKHZhbHVlKSkuZmlsdGVyKEJvb2xlYW4pO1xuICB9XG4gIC8qKlxuICAgKiBHZXQgdGhlIGl0ZW0gYmFzZWQgb24gaXRzIGluZGV4XG4gICAqL1xuICBhdChpbmRleCkge1xuICAgIHJldHVybiB0aGlzLml0ZW1zW2luZGV4XSA/PyBudWxsO1xuICB9XG4gIHNvcnRGbih2YWx1ZUEsIHZhbHVlQikge1xuICAgIGNvbnN0IGluZGV4QSA9IHRoaXMuaW5kZXhPZih2YWx1ZUEpO1xuICAgIGNvbnN0IGluZGV4QiA9IHRoaXMuaW5kZXhPZih2YWx1ZUIpO1xuICAgIHJldHVybiAoaW5kZXhBID8/IDApIC0gKGluZGV4QiA/PyAwKTtcbiAgfVxuICAvKipcbiAgICogU29ydCB0aGUgdmFsdWVzIGJhc2VkIG9uIHRoZWlyIGluZGV4XG4gICAqL1xuICBzb3J0KHZhbHVlcykge1xuICAgIHJldHVybiBbLi4udmFsdWVzXS5zb3J0KHRoaXMuc29ydEZuLmJpbmQodGhpcykpO1xuICB9XG4gIC8qKlxuICAgKiBDb252ZXJ0IGFuIGl0ZW0gdG8gYSB2YWx1ZVxuICAgKi9cbiAgZ2V0SXRlbVZhbHVlKGl0ZW0pIHtcbiAgICBpZiAoaXRlbSA9PSBudWxsKSByZXR1cm4gbnVsbDtcbiAgICByZXR1cm4gdGhpcy5vcHRpb25zLml0ZW1Ub1ZhbHVlPy4oaXRlbSkgPz8gZmFsbGJhY2suaXRlbVRvVmFsdWUoaXRlbSk7XG4gIH1cbiAgLyoqXG4gICAqIFdoZXRoZXIgYW4gaXRlbSBpcyBkaXNhYmxlZFxuICAgKi9cbiAgZ2V0SXRlbURpc2FibGVkKGl0ZW0pIHtcbiAgICBpZiAoaXRlbSA9PSBudWxsKSByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIHRoaXMub3B0aW9ucy5pc0l0ZW1EaXNhYmxlZD8uKGl0ZW0pID8/IGZhbGxiYWNrLmlzSXRlbURpc2FibGVkKGl0ZW0pO1xuICB9XG4gIC8qKlxuICAgKiBDb252ZXJ0IGFuIGl0ZW0gdG8gYSBzdHJpbmdcbiAgICovXG4gIHN0cmluZ2lmeUl0ZW0oaXRlbSkge1xuICAgIGlmIChpdGVtID09IG51bGwpIHJldHVybiBudWxsO1xuICAgIHJldHVybiB0aGlzLm9wdGlvbnMuaXRlbVRvU3RyaW5nPy4oaXRlbSkgPz8gZmFsbGJhY2suaXRlbVRvU3RyaW5nKGl0ZW0pO1xuICB9XG4gIC8qKlxuICAgKiBDb252ZXJ0IGEgdmFsdWUgdG8gYSBzdHJpbmdcbiAgICovXG4gIHN0cmluZ2lmeSh2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PSBudWxsKSByZXR1cm4gbnVsbDtcbiAgICByZXR1cm4gdGhpcy5zdHJpbmdpZnlJdGVtKHRoaXMuZmluZCh2YWx1ZSkpO1xuICB9XG4gIC8qKlxuICAgKiBDb252ZXJ0IGFuIGFycmF5IG9mIGl0ZW1zIHRvIGEgc3RyaW5nXG4gICAqL1xuICBzdHJpbmdpZnlJdGVtcyhpdGVtcywgc2VwYXJhdG9yID0gXCIsIFwiKSB7XG4gICAgcmV0dXJuIEFycmF5LmZyb20oaXRlbXMpLm1hcCgoaXRlbSkgPT4gdGhpcy5zdHJpbmdpZnlJdGVtKGl0ZW0pKS5maWx0ZXIoQm9vbGVhbikuam9pbihzZXBhcmF0b3IpO1xuICB9XG4gIC8qKlxuICAgKiBDb252ZXJ0IGFuIGFycmF5IG9mIGl0ZW1zIHRvIGEgc3RyaW5nXG4gICAqL1xuICBzdHJpbmdpZnlNYW55KHZhbHVlLCBzZXBhcmF0b3IpIHtcbiAgICByZXR1cm4gdGhpcy5zdHJpbmdpZnlJdGVtcyh0aGlzLmZpbmRNYW55KHZhbHVlKSwgc2VwYXJhdG9yKTtcbiAgfVxuICAvKipcbiAgICogV2hldGhlciB0aGUgY29sbGVjdGlvbiBoYXMgYSB2YWx1ZVxuICAgKi9cbiAgaGFzKHZhbHVlKSB7XG4gICAgcmV0dXJuIHRoaXMuaW5kZXhPZih2YWx1ZSkgIT09IC0xO1xuICB9XG4gIC8qKlxuICAgKiBXaGV0aGVyIHRoZSBjb2xsZWN0aW9uIGhhcyBhbiBpdGVtXG4gICAqL1xuICBoYXNJdGVtKGl0ZW0pIHtcbiAgICBpZiAoaXRlbSA9PSBudWxsKSByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIHRoaXMuaGFzKHRoaXMuZ2V0SXRlbVZhbHVlKGl0ZW0pKTtcbiAgfVxuICAvKipcbiAgICogUmV0dXJucyB0aGUgbnVtYmVyIG9mIGl0ZW1zIGluIHRoZSBjb2xsZWN0aW9uXG4gICAqL1xuICBnZXQgc2l6ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5pdGVtcy5sZW5ndGg7XG4gIH1cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIGZpcnN0IHZhbHVlIGluIHRoZSBjb2xsZWN0aW9uXG4gICAqL1xuICBnZXQgZmlyc3RWYWx1ZSgpIHtcbiAgICBsZXQgaW5kZXggPSAwO1xuICAgIHdoaWxlICh0aGlzLmdldEl0ZW1EaXNhYmxlZCh0aGlzLmF0KGluZGV4KSkpIGluZGV4Kys7XG4gICAgcmV0dXJuIHRoaXMuZ2V0SXRlbVZhbHVlKHRoaXMuYXQoaW5kZXgpKTtcbiAgfVxuICAvKipcbiAgICogUmV0dXJucyB0aGUgbGFzdCB2YWx1ZSBpbiB0aGUgY29sbGVjdGlvblxuICAgKi9cbiAgZ2V0IGxhc3RWYWx1ZSgpIHtcbiAgICBsZXQgaW5kZXggPSB0aGlzLnNpemUgLSAxO1xuICAgIHdoaWxlICh0aGlzLmdldEl0ZW1EaXNhYmxlZCh0aGlzLmF0KGluZGV4KSkpIGluZGV4LS07XG4gICAgcmV0dXJuIHRoaXMuZ2V0SXRlbVZhbHVlKHRoaXMuYXQoaW5kZXgpKTtcbiAgfVxuICAvKipcbiAgICogUmV0dXJucyB0aGUgbmV4dCB2YWx1ZSBpbiB0aGUgY29sbGVjdGlvblxuICAgKi9cbiAgZ2V0TmV4dFZhbHVlKHZhbHVlLCBzdGVwID0gMSwgY2xhbXAgPSBmYWxzZSkge1xuICAgIGxldCBpbmRleCA9IHRoaXMuaW5kZXhPZih2YWx1ZSk7XG4gICAgaWYgKGluZGV4ID09PSAtMSkgcmV0dXJuIG51bGw7XG4gICAgaW5kZXggPSBjbGFtcCA/IE1hdGgubWluKGluZGV4ICsgc3RlcCwgdGhpcy5zaXplIC0gMSkgOiBpbmRleCArIHN0ZXA7XG4gICAgd2hpbGUgKGluZGV4IDw9IHRoaXMuc2l6ZSAmJiB0aGlzLmdldEl0ZW1EaXNhYmxlZCh0aGlzLmF0KGluZGV4KSkpIGluZGV4Kys7XG4gICAgcmV0dXJuIHRoaXMuZ2V0SXRlbVZhbHVlKHRoaXMuYXQoaW5kZXgpKTtcbiAgfVxuICAvKipcbiAgICogUmV0dXJucyB0aGUgcHJldmlvdXMgdmFsdWUgaW4gdGhlIGNvbGxlY3Rpb25cbiAgICovXG4gIGdldFByZXZpb3VzVmFsdWUodmFsdWUsIHN0ZXAgPSAxLCBjbGFtcCA9IGZhbHNlKSB7XG4gICAgbGV0IGluZGV4ID0gdGhpcy5pbmRleE9mKHZhbHVlKTtcbiAgICBpZiAoaW5kZXggPT09IC0xKSByZXR1cm4gbnVsbDtcbiAgICBpbmRleCA9IGNsYW1wID8gTWF0aC5tYXgoaW5kZXggLSBzdGVwLCAwKSA6IGluZGV4IC0gc3RlcDtcbiAgICB3aGlsZSAoaW5kZXggPj0gMCAmJiB0aGlzLmdldEl0ZW1EaXNhYmxlZCh0aGlzLmF0KGluZGV4KSkpIGluZGV4LS07XG4gICAgcmV0dXJuIHRoaXMuZ2V0SXRlbVZhbHVlKHRoaXMuYXQoaW5kZXgpKTtcbiAgfVxuICAvKipcbiAgICogR2V0IHRoZSBpbmRleCBvZiBhbiBpdGVtIGJhc2VkIG9uIGl0cyBrZXlcbiAgICovXG4gIGluZGV4T2YodmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT0gbnVsbCkgcmV0dXJuIC0xO1xuICAgIHJldHVybiB0aGlzLml0ZW1zLmZpbmRJbmRleCgoaXRlbSkgPT4gdGhpcy5nZXRJdGVtVmFsdWUoaXRlbSkgPT09IHZhbHVlKTtcbiAgfVxuICBnZXRCeVRleHQodGV4dCwgY3VycmVudCkge1xuICAgIGxldCBpdGVtcyA9IGN1cnJlbnQgIT0gbnVsbCA/IHdyYXAodGhpcy5pdGVtcywgdGhpcy5pbmRleE9mKGN1cnJlbnQpKSA6IHRoaXMuaXRlbXM7XG4gICAgY29uc3QgaXNTaW5nbGVLZXkgPSB0ZXh0Lmxlbmd0aCA9PT0gMTtcbiAgICBpZiAoaXNTaW5nbGVLZXkpIGl0ZW1zID0gaXRlbXMuZmlsdGVyKChpdGVtKSA9PiB0aGlzLmdldEl0ZW1WYWx1ZShpdGVtKSAhPT0gY3VycmVudCk7XG4gICAgcmV0dXJuIGl0ZW1zLmZpbmQoKGl0ZW0pID0+IG1hdGNoKHRoaXMuc3RyaW5naWZ5SXRlbShpdGVtKSwgdGV4dCkpO1xuICB9XG4gIC8qKlxuICAgKiBTZWFyY2ggZm9yIGEgdmFsdWUgYmFzZWQgb24gYSBxdWVyeVxuICAgKi9cbiAgc2VhcmNoKHF1ZXJ5U3RyaW5nLCBvcHRpb25zKSB7XG4gICAgY29uc3QgeyBzdGF0ZSwgY3VycmVudFZhbHVlLCB0aW1lb3V0ID0gMzUwIH0gPSBvcHRpb25zO1xuICAgIGNvbnN0IHNlYXJjaCA9IHN0YXRlLmtleXNTb0ZhciArIHF1ZXJ5U3RyaW5nO1xuICAgIGNvbnN0IGlzUmVwZWF0ZWQgPSBzZWFyY2gubGVuZ3RoID4gMSAmJiBBcnJheS5mcm9tKHNlYXJjaCkuZXZlcnkoKGNoYXIpID0+IGNoYXIgPT09IHNlYXJjaFswXSk7XG4gICAgY29uc3QgcXVlcnkgPSBpc1JlcGVhdGVkID8gc2VhcmNoWzBdIDogc2VhcmNoO1xuICAgIGNvbnN0IGl0ZW0gPSB0aGlzLmdldEJ5VGV4dChxdWVyeSwgY3VycmVudFZhbHVlKTtcbiAgICBjb25zdCB2YWx1ZSA9IHRoaXMuZ2V0SXRlbVZhbHVlKGl0ZW0pO1xuICAgIGZ1bmN0aW9uIGNsZWFudXAoKSB7XG4gICAgICBjbGVhclRpbWVvdXQoc3RhdGUudGltZXIpO1xuICAgICAgc3RhdGUudGltZXIgPSAtMTtcbiAgICB9XG4gICAgZnVuY3Rpb24gdXBkYXRlKHZhbHVlMikge1xuICAgICAgc3RhdGUua2V5c1NvRmFyID0gdmFsdWUyO1xuICAgICAgY2xlYW51cCgpO1xuICAgICAgaWYgKHZhbHVlMiAhPT0gXCJcIikge1xuICAgICAgICBzdGF0ZS50aW1lciA9ICtzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICB1cGRhdGUoXCJcIik7XG4gICAgICAgICAgY2xlYW51cCgpO1xuICAgICAgICB9LCB0aW1lb3V0KTtcbiAgICAgIH1cbiAgICB9XG4gICAgdXBkYXRlKHNlYXJjaCk7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG4gICpbU3ltYm9sLml0ZXJhdG9yXSgpIHtcbiAgICB5aWVsZCogdGhpcy5pdGVtcztcbiAgfVxuICBpbnNlcnRCZWZvcmUodmFsdWUsIGl0ZW0pIHtcbiAgICBjb25zdCBpbmRleCA9IHRoaXMuaW5kZXhPZih2YWx1ZSk7XG4gICAgaWYgKGluZGV4ID09PSAtMSkgcmV0dXJuO1xuICAgIHRoaXMuaXRlbXMuc3BsaWNlKGluZGV4LCAwLCBpdGVtKTtcbiAgfVxuICBpbnNlcnRBZnRlcih2YWx1ZSwgaXRlbSkge1xuICAgIGNvbnN0IGluZGV4ID0gdGhpcy5pbmRleE9mKHZhbHVlKTtcbiAgICBpZiAoaW5kZXggPT09IC0xKSByZXR1cm47XG4gICAgdGhpcy5pdGVtcy5zcGxpY2UoaW5kZXggKyAxLCAwLCBpdGVtKTtcbiAgfVxuICByZW9yZGVyKGZyb21JbmRleCwgdG9JbmRleCkge1xuICAgIGlmIChmcm9tSW5kZXggPT09IC0xIHx8IHRvSW5kZXggPT09IC0xKSByZXR1cm47XG4gICAgaWYgKGZyb21JbmRleCA9PT0gdG9JbmRleCkgcmV0dXJuO1xuICAgIGNvbnN0IFtyZW1vdmVkXSA9IHRoaXMuaXRlbXMuc3BsaWNlKGZyb21JbmRleCwgMSk7XG4gICAgdGhpcy5pdGVtcy5zcGxpY2UodG9JbmRleCwgMCwgcmVtb3ZlZCk7XG4gIH1cbiAganNvbigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgc2l6ZTogdGhpcy5zaXplLFxuICAgICAgZmlyc3Q6IHRoaXMuZmlyc3RWYWx1ZSxcbiAgICAgIGxhc3Q6IHRoaXMubGFzdFZhbHVlXG4gICAgfTtcbiAgfVxufTtcbnZhciBtYXRjaCA9IChsYWJlbCwgcXVlcnkpID0+IHtcbiAgcmV0dXJuICEhbGFiZWw/LnRvTG93ZXJDYXNlKCkuc3RhcnRzV2l0aChxdWVyeS50b0xvd2VyQ2FzZSgpKTtcbn07XG52YXIgd3JhcCA9ICh2LCBpZHgpID0+IHtcbiAgcmV0dXJuIHYubWFwKChfLCBpbmRleCkgPT4gdlsoTWF0aC5tYXgoaWR4LCAwKSArIGluZGV4KSAlIHYubGVuZ3RoXSk7XG59O1xuXG4vLyBzcmMvZ3JpZC1jb2xsZWN0aW9uLnRzXG52YXIgR3JpZENvbGxlY3Rpb24gPSBjbGFzcyBleHRlbmRzIExpc3RDb2xsZWN0aW9uIHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgIGNvbnN0IHsgY29sdW1uQ291bnQgfSA9IG9wdGlvbnM7XG4gICAgc3VwZXIob3B0aW9ucyk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImNvbHVtbkNvdW50XCIpO1xuICAgIHRoaXMuY29sdW1uQ291bnQgPSBjb2x1bW5Db3VudDtcbiAgfVxuICAvKipcbiAgICogUmV0dXJucyB0aGUgcm93IGRhdGEgaW4gdGhlIGdyaWRcbiAgICovXG4gIGdldFJvd3MoKSB7XG4gICAgcmV0dXJuIGNodW5rKFsuLi50aGlzLml0ZW1zXSwgdGhpcy5jb2x1bW5Db3VudCk7XG4gIH1cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIG51bWJlciBvZiByb3dzIGluIHRoZSBncmlkXG4gICAqL1xuICBnZXRSb3dDb3VudCgpIHtcbiAgICByZXR1cm4gdGhpcy5nZXRSb3dzKCkubGVuZ3RoO1xuICB9XG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSBpbmRleCBvZiB0aGUgc3BlY2lmaWVkIHJvdyBhbmQgY29sdW1uIGluIHRoZSBncmlkXG4gICAqL1xuICBnZXRDZWxsSW5kZXgocm93LCBjb2x1bW4pIHtcbiAgICByZXR1cm4gcm93ICogdGhpcy5jb2x1bW5Db3VudCArIGNvbHVtbjtcbiAgfVxuICAvKipcbiAgICogUmV0dXJucyB0aGUgaXRlbSBhdCB0aGUgc3BlY2lmaWVkIHJvdyBhbmQgY29sdW1uIGluIHRoZSBncmlkXG4gICAqL1xuICBnZXRDZWxsKHJvdywgY29sdW1uKSB7XG4gICAgcmV0dXJuIHRoaXMuYXQodGhpcy5nZXRDZWxsSW5kZXgocm93LCBjb2x1bW4pKTtcbiAgfVxuICAvKipcbiAgICogUmV0dXJucyB0aGUgdmFsdWUgb2YgdGhlIHByZXZpb3VzIHJvdyBpbiB0aGUgZ3JpZCwgYmFzZWQgb24gdGhlIGN1cnJlbnQgdmFsdWVcbiAgICovXG4gIGdldFByZXZpb3VzUm93VmFsdWUodmFsdWUsIGNsYW1wID0gZmFsc2UpIHtcbiAgICByZXR1cm4gdGhpcy5nZXRQcmV2aW91c1ZhbHVlKHZhbHVlLCB0aGlzLmNvbHVtbkNvdW50LCBjbGFtcCk7XG4gIH1cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIHZhbHVlIG9mIHRoZSBuZXh0IHJvdyBpbiB0aGUgZ3JpZCwgYmFzZWQgb24gdGhlIGN1cnJlbnQgdmFsdWVcbiAgICovXG4gIGdldE5leHRSb3dWYWx1ZSh2YWx1ZSwgY2xhbXAgPSBmYWxzZSkge1xuICAgIHJldHVybiB0aGlzLmdldE5leHRWYWx1ZSh2YWx1ZSwgdGhpcy5jb2x1bW5Db3VudCwgY2xhbXApO1xuICB9XG59O1xuXG4vLyBzcmMvdHJlZS12aXNpdC50c1xuZnVuY3Rpb24gYWNjZXNzKG5vZGUsIGluZGV4UGF0aCwgb3B0aW9ucykge1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGluZGV4UGF0aC5sZW5ndGg7IGkrKykgbm9kZSA9IG9wdGlvbnMuZ2V0Q2hpbGRyZW4obm9kZSwgaW5kZXhQYXRoLnNsaWNlKGkgKyAxKSlbaW5kZXhQYXRoW2ldXTtcbiAgcmV0dXJuIG5vZGU7XG59XG5mdW5jdGlvbiBhbmNlc3RvckluZGV4UGF0aHMoaW5kZXhQYXRocykge1xuICBjb25zdCBzb3J0ZWRQYXRocyA9IHNvcnRJbmRleFBhdGhzKGluZGV4UGF0aHMpO1xuICBjb25zdCByZXN1bHQgPSBbXTtcbiAgY29uc3Qgc2VlbiA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KCk7XG4gIGZvciAoY29uc3QgaW5kZXhQYXRoIG9mIHNvcnRlZFBhdGhzKSB7XG4gICAgY29uc3Qga2V5ID0gaW5kZXhQYXRoLmpvaW4oKTtcbiAgICBpZiAoIXNlZW4uaGFzKGtleSkpIHtcbiAgICAgIHNlZW4uYWRkKGtleSk7XG4gICAgICByZXN1bHQucHVzaChpbmRleFBhdGgpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gY29tcGFyZUluZGV4UGF0aHMoYSwgYikge1xuICBmb3IgKGxldCBpID0gMDsgaSA8IE1hdGgubWluKGEubGVuZ3RoLCBiLmxlbmd0aCk7IGkrKykge1xuICAgIGlmIChhW2ldIDwgYltpXSkgcmV0dXJuIC0xO1xuICAgIGlmIChhW2ldID4gYltpXSkgcmV0dXJuIDE7XG4gIH1cbiAgcmV0dXJuIGEubGVuZ3RoIC0gYi5sZW5ndGg7XG59XG5mdW5jdGlvbiBzb3J0SW5kZXhQYXRocyhpbmRleFBhdGhzKSB7XG4gIHJldHVybiBpbmRleFBhdGhzLnNvcnQoY29tcGFyZUluZGV4UGF0aHMpO1xufVxuZnVuY3Rpb24gZmluZChub2RlLCBvcHRpb25zKSB7XG4gIGxldCBmb3VuZDtcbiAgdmlzaXQobm9kZSwge1xuICAgIC4uLm9wdGlvbnMsXG4gICAgb25FbnRlcjogKGNoaWxkLCBpbmRleFBhdGgpID0+IHtcbiAgICAgIGlmIChvcHRpb25zLnByZWRpY2F0ZShjaGlsZCwgaW5kZXhQYXRoKSkge1xuICAgICAgICBmb3VuZCA9IGNoaWxkO1xuICAgICAgICByZXR1cm4gXCJzdG9wXCI7XG4gICAgICB9XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIGZvdW5kO1xufVxuZnVuY3Rpb24gZmluZEluZGV4UGF0aChub2RlLCBvcHRpb25zKSB7XG4gIGxldCBmb3VuZDtcbiAgdmlzaXQobm9kZSwge1xuICAgIG9uRW50ZXI6IChjaGlsZCwgaW5kZXhQYXRoKSA9PiB7XG4gICAgICBpZiAob3B0aW9ucy5wcmVkaWNhdGUoY2hpbGQsIGluZGV4UGF0aCkpIHtcbiAgICAgICAgZm91bmQgPSBbLi4uaW5kZXhQYXRoXTtcbiAgICAgICAgcmV0dXJuIFwic3RvcFwiO1xuICAgICAgfVxuICAgIH0sXG4gICAgZ2V0Q2hpbGRyZW46IG9wdGlvbnMuZ2V0Q2hpbGRyZW5cbiAgfSk7XG4gIHJldHVybiBmb3VuZDtcbn1cbmZ1bmN0aW9uIHJlZHVjZShub2RlLCBvcHRpb25zKSB7XG4gIGxldCByZXN1bHQgPSBvcHRpb25zLmluaXRpYWxSZXN1bHQ7XG4gIHZpc2l0KG5vZGUsIHtcbiAgICAuLi5vcHRpb25zLFxuICAgIG9uRW50ZXI6IChjaGlsZCwgaW5kZXhQYXRoKSA9PiB7XG4gICAgICByZXN1bHQgPSBvcHRpb25zLm5leHRSZXN1bHQocmVzdWx0LCBjaGlsZCwgaW5kZXhQYXRoKTtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gZmxhdE1hcChub2RlLCBvcHRpb25zKSB7XG4gIHJldHVybiByZWR1Y2Uobm9kZSwge1xuICAgIC4uLm9wdGlvbnMsXG4gICAgaW5pdGlhbFJlc3VsdDogW10sXG4gICAgbmV4dFJlc3VsdDogKHJlc3VsdCwgY2hpbGQsIGluZGV4UGF0aCkgPT4ge1xuICAgICAgcmVzdWx0LnB1c2goLi4ub3B0aW9ucy50cmFuc2Zvcm0oY2hpbGQsIGluZGV4UGF0aCkpO1xuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gIH0pO1xufVxuZnVuY3Rpb24gaW5zZXJ0T3BlcmF0aW9uKGluZGV4LCBub2Rlcykge1xuICByZXR1cm4geyB0eXBlOiBcImluc2VydFwiLCBpbmRleCwgbm9kZXMgfTtcbn1cbmZ1bmN0aW9uIHJlbW92ZU9wZXJhdGlvbihpbmRleGVzKSB7XG4gIHJldHVybiB7IHR5cGU6IFwicmVtb3ZlXCIsIGluZGV4ZXMgfTtcbn1cbmZ1bmN0aW9uIHJlcGxhY2VPcGVyYXRpb24oKSB7XG4gIHJldHVybiB7IHR5cGU6IFwicmVwbGFjZVwiIH07XG59XG5mdW5jdGlvbiBzcGxpdEluZGV4UGF0aChpbmRleFBhdGgpIHtcbiAgcmV0dXJuIFtpbmRleFBhdGguc2xpY2UoMCwgLTEpLCBpbmRleFBhdGhbaW5kZXhQYXRoLmxlbmd0aCAtIDFdXTtcbn1cbmZ1bmN0aW9uIGdldEluc2VydGlvbk9wZXJhdGlvbnMoaW5kZXhQYXRoLCBub2Rlcywgb3BlcmF0aW9ucyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCkpIHtcbiAgY29uc3QgW3BhcmVudEluZGV4UGF0aCwgaW5kZXhdID0gc3BsaXRJbmRleFBhdGgoaW5kZXhQYXRoKTtcbiAgZm9yIChsZXQgaSA9IHBhcmVudEluZGV4UGF0aC5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgIGNvbnN0IHBhcmVudEtleSA9IHBhcmVudEluZGV4UGF0aC5zbGljZSgwLCBpKS5qb2luKCk7XG4gICAgc3dpdGNoIChvcGVyYXRpb25zLmdldChwYXJlbnRLZXkpPy50eXBlKSB7XG4gICAgICBjYXNlIFwicmVtb3ZlXCI6XG4gICAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICBvcGVyYXRpb25zLnNldChwYXJlbnRLZXksIHJlcGxhY2VPcGVyYXRpb24oKSk7XG4gIH1cbiAgY29uc3Qgb3BlcmF0aW9uID0gb3BlcmF0aW9ucy5nZXQocGFyZW50SW5kZXhQYXRoLmpvaW4oKSk7XG4gIHN3aXRjaCAob3BlcmF0aW9uPy50eXBlKSB7XG4gICAgY2FzZSBcInJlbW92ZVwiOlxuICAgICAgb3BlcmF0aW9ucy5zZXQocGFyZW50SW5kZXhQYXRoLmpvaW4oKSwge1xuICAgICAgICB0eXBlOiBcInJlbW92ZVRoZW5JbnNlcnRcIixcbiAgICAgICAgcmVtb3ZlSW5kZXhlczogb3BlcmF0aW9uLmluZGV4ZXMsXG4gICAgICAgIGluc2VydEluZGV4OiBpbmRleCxcbiAgICAgICAgaW5zZXJ0Tm9kZXM6IG5vZGVzXG4gICAgICB9KTtcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICBvcGVyYXRpb25zLnNldChwYXJlbnRJbmRleFBhdGguam9pbigpLCBpbnNlcnRPcGVyYXRpb24oaW5kZXgsIG5vZGVzKSk7XG4gIH1cbiAgcmV0dXJuIG9wZXJhdGlvbnM7XG59XG5mdW5jdGlvbiBnZXRSZW1vdmFsT3BlcmF0aW9ucyhpbmRleFBhdGhzKSB7XG4gIGNvbnN0IG9wZXJhdGlvbnMgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpO1xuICBjb25zdCBpbmRleGVzVG9SZW1vdmUgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpO1xuICBmb3IgKGNvbnN0IGluZGV4UGF0aCBvZiBpbmRleFBhdGhzKSB7XG4gICAgY29uc3QgcGFyZW50S2V5ID0gaW5kZXhQYXRoLnNsaWNlKDAsIC0xKS5qb2luKCk7XG4gICAgY29uc3QgdmFsdWUgPSBpbmRleGVzVG9SZW1vdmUuZ2V0KHBhcmVudEtleSkgPz8gW107XG4gICAgdmFsdWUucHVzaChpbmRleFBhdGhbaW5kZXhQYXRoLmxlbmd0aCAtIDFdKTtcbiAgICBpbmRleGVzVG9SZW1vdmUuc2V0KFxuICAgICAgcGFyZW50S2V5LFxuICAgICAgdmFsdWUuc29ydCgoYSwgYikgPT4gYSAtIGIpXG4gICAgKTtcbiAgfVxuICBmb3IgKGNvbnN0IGluZGV4UGF0aCBvZiBpbmRleFBhdGhzKSB7XG4gICAgZm9yIChsZXQgaSA9IGluZGV4UGF0aC5sZW5ndGggLSAyOyBpID49IDA7IGktLSkge1xuICAgICAgY29uc3QgcGFyZW50S2V5ID0gaW5kZXhQYXRoLnNsaWNlKDAsIGkpLmpvaW4oKTtcbiAgICAgIGlmICghb3BlcmF0aW9ucy5oYXMocGFyZW50S2V5KSkge1xuICAgICAgICBvcGVyYXRpb25zLnNldChwYXJlbnRLZXksIHJlcGxhY2VPcGVyYXRpb24oKSk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGZvciAoY29uc3QgW3BhcmVudEtleSwgaW5kZXhlc10gb2YgaW5kZXhlc1RvUmVtb3ZlKSB7XG4gICAgb3BlcmF0aW9ucy5zZXQocGFyZW50S2V5LCByZW1vdmVPcGVyYXRpb24oaW5kZXhlcykpO1xuICB9XG4gIHJldHVybiBvcGVyYXRpb25zO1xufVxuZnVuY3Rpb24gZ2V0UmVwbGFjZU9wZXJhdGlvbnMoaW5kZXhQYXRoLCBub2RlKSB7XG4gIGNvbnN0IG9wZXJhdGlvbnMgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpO1xuICBjb25zdCBbcGFyZW50SW5kZXhQYXRoLCBpbmRleF0gPSBzcGxpdEluZGV4UGF0aChpbmRleFBhdGgpO1xuICBmb3IgKGxldCBpID0gcGFyZW50SW5kZXhQYXRoLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgY29uc3QgcGFyZW50S2V5ID0gcGFyZW50SW5kZXhQYXRoLnNsaWNlKDAsIGkpLmpvaW4oKTtcbiAgICBvcGVyYXRpb25zLnNldChwYXJlbnRLZXksIHJlcGxhY2VPcGVyYXRpb24oKSk7XG4gIH1cbiAgb3BlcmF0aW9ucy5zZXQocGFyZW50SW5kZXhQYXRoLmpvaW4oKSwge1xuICAgIHR5cGU6IFwicmVtb3ZlVGhlbkluc2VydFwiLFxuICAgIHJlbW92ZUluZGV4ZXM6IFtpbmRleF0sXG4gICAgaW5zZXJ0SW5kZXg6IGluZGV4LFxuICAgIGluc2VydE5vZGVzOiBbbm9kZV1cbiAgfSk7XG4gIHJldHVybiBvcGVyYXRpb25zO1xufVxuZnVuY3Rpb24gbXV0YXRlKG5vZGUsIG9wZXJhdGlvbnMsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIG1hcChub2RlLCB7XG4gICAgLi4ub3B0aW9ucyxcbiAgICBnZXRDaGlsZHJlbjogKG5vZGUyLCBpbmRleFBhdGgpID0+IHtcbiAgICAgIGNvbnN0IGtleSA9IGluZGV4UGF0aC5qb2luKCk7XG4gICAgICBjb25zdCBvcGVyYXRpb24gPSBvcGVyYXRpb25zLmdldChrZXkpO1xuICAgICAgc3dpdGNoIChvcGVyYXRpb24/LnR5cGUpIHtcbiAgICAgICAgY2FzZSBcInJlcGxhY2VcIjpcbiAgICAgICAgY2FzZSBcInJlbW92ZVwiOlxuICAgICAgICBjYXNlIFwicmVtb3ZlVGhlbkluc2VydFwiOlxuICAgICAgICBjYXNlIFwiaW5zZXJ0XCI6XG4gICAgICAgICAgcmV0dXJuIG9wdGlvbnMuZ2V0Q2hpbGRyZW4obm9kZTIsIGluZGV4UGF0aCk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgfVxuICAgIH0sXG4gICAgdHJhbnNmb3JtOiAobm9kZTIsIGNoaWxkcmVuLCBpbmRleFBhdGgpID0+IHtcbiAgICAgIGNvbnN0IGtleSA9IGluZGV4UGF0aC5qb2luKCk7XG4gICAgICBjb25zdCBvcGVyYXRpb24gPSBvcGVyYXRpb25zLmdldChrZXkpO1xuICAgICAgc3dpdGNoIChvcGVyYXRpb24/LnR5cGUpIHtcbiAgICAgICAgY2FzZSBcInJlbW92ZVwiOlxuICAgICAgICAgIHJldHVybiBvcHRpb25zLmNyZWF0ZShcbiAgICAgICAgICAgIG5vZGUyLFxuICAgICAgICAgICAgY2hpbGRyZW4uZmlsdGVyKChfLCBpbmRleCkgPT4gIW9wZXJhdGlvbi5pbmRleGVzLmluY2x1ZGVzKGluZGV4KSksXG4gICAgICAgICAgICBpbmRleFBhdGhcbiAgICAgICAgICApO1xuICAgICAgICBjYXNlIFwicmVtb3ZlVGhlbkluc2VydFwiOlxuICAgICAgICAgIGNvbnN0IHVwZGF0ZWRDaGlsZHJlbiA9IGNoaWxkcmVuLmZpbHRlcigoXywgaW5kZXgpID0+ICFvcGVyYXRpb24ucmVtb3ZlSW5kZXhlcy5pbmNsdWRlcyhpbmRleCkpO1xuICAgICAgICAgIGNvbnN0IGFkanVzdGVkSW5kZXggPSBvcGVyYXRpb24ucmVtb3ZlSW5kZXhlcy5yZWR1Y2UoXG4gICAgICAgICAgICAoaW5kZXgsIHJlbW92ZWRJbmRleCkgPT4gcmVtb3ZlZEluZGV4IDwgaW5kZXggPyBpbmRleCAtIDEgOiBpbmRleCxcbiAgICAgICAgICAgIG9wZXJhdGlvbi5pbnNlcnRJbmRleFxuICAgICAgICAgICk7XG4gICAgICAgICAgcmV0dXJuIG9wdGlvbnMuY3JlYXRlKG5vZGUyLCBzcGxpY2UodXBkYXRlZENoaWxkcmVuLCBhZGp1c3RlZEluZGV4LCAwLCAuLi5vcGVyYXRpb24uaW5zZXJ0Tm9kZXMpLCBpbmRleFBhdGgpO1xuICAgICAgICBjYXNlIFwiaW5zZXJ0XCI6XG4gICAgICAgICAgcmV0dXJuIG9wdGlvbnMuY3JlYXRlKG5vZGUyLCBzcGxpY2UoY2hpbGRyZW4sIG9wZXJhdGlvbi5pbmRleCwgMCwgLi4ub3BlcmF0aW9uLm5vZGVzKSwgaW5kZXhQYXRoKTtcbiAgICAgICAgY2FzZSBcInJlcGxhY2VcIjpcbiAgICAgICAgICByZXR1cm4gb3B0aW9ucy5jcmVhdGUobm9kZTIsIGNoaWxkcmVuLCBpbmRleFBhdGgpO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIHJldHVybiBub2RlMjtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xufVxuZnVuY3Rpb24gc3BsaWNlKGFycmF5LCBzdGFydCwgZGVsZXRlQ291bnQsIC4uLml0ZW1zKSB7XG4gIHJldHVybiBbLi4uYXJyYXkuc2xpY2UoMCwgc3RhcnQpLCAuLi5pdGVtcywgLi4uYXJyYXkuc2xpY2Uoc3RhcnQgKyBkZWxldGVDb3VudCldO1xufVxuZnVuY3Rpb24gbWFwKG5vZGUsIG9wdGlvbnMpIHtcbiAgY29uc3QgY2hpbGRyZW5NYXAgPSB7fTtcbiAgdmlzaXQobm9kZSwge1xuICAgIC4uLm9wdGlvbnMsXG4gICAgb25MZWF2ZTogKGNoaWxkLCBpbmRleFBhdGgpID0+IHtcbiAgICAgIGNvbnN0IGtleUluZGV4UGF0aCA9IFswLCAuLi5pbmRleFBhdGhdO1xuICAgICAgY29uc3Qga2V5ID0ga2V5SW5kZXhQYXRoLmpvaW4oKTtcbiAgICAgIGNvbnN0IHRyYW5zZm9ybWVkID0gb3B0aW9ucy50cmFuc2Zvcm0oY2hpbGQsIGNoaWxkcmVuTWFwW2tleV0gPz8gW10sIGluZGV4UGF0aCk7XG4gICAgICBjb25zdCBwYXJlbnRLZXkgPSBrZXlJbmRleFBhdGguc2xpY2UoMCwgLTEpLmpvaW4oKTtcbiAgICAgIGNvbnN0IHBhcmVudENoaWxkcmVuID0gY2hpbGRyZW5NYXBbcGFyZW50S2V5XSA/PyBbXTtcbiAgICAgIHBhcmVudENoaWxkcmVuLnB1c2godHJhbnNmb3JtZWQpO1xuICAgICAgY2hpbGRyZW5NYXBbcGFyZW50S2V5XSA9IHBhcmVudENoaWxkcmVuO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBjaGlsZHJlbk1hcFtcIlwiXVswXTtcbn1cbmZ1bmN0aW9uIGluc2VydChub2RlLCBvcHRpb25zKSB7XG4gIGNvbnN0IHsgbm9kZXMsIGF0IH0gPSBvcHRpb25zO1xuICBpZiAoYXQubGVuZ3RoID09PSAwKSB0aHJvdyBuZXcgRXJyb3IoYENhbid0IGluc2VydCBub2RlcyBhdCB0aGUgcm9vdGApO1xuICBjb25zdCBzdGF0ZSA9IGdldEluc2VydGlvbk9wZXJhdGlvbnMoYXQsIG5vZGVzKTtcbiAgcmV0dXJuIG11dGF0ZShub2RlLCBzdGF0ZSwgb3B0aW9ucyk7XG59XG5mdW5jdGlvbiByZXBsYWNlKG5vZGUsIG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMuYXQubGVuZ3RoID09PSAwKSByZXR1cm4gb3B0aW9ucy5ub2RlO1xuICBjb25zdCBvcGVyYXRpb25zID0gZ2V0UmVwbGFjZU9wZXJhdGlvbnMob3B0aW9ucy5hdCwgb3B0aW9ucy5ub2RlKTtcbiAgcmV0dXJuIG11dGF0ZShub2RlLCBvcGVyYXRpb25zLCBvcHRpb25zKTtcbn1cbmZ1bmN0aW9uIHJlbW92ZShub2RlLCBvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zLmluZGV4UGF0aHMubGVuZ3RoID09PSAwKSByZXR1cm4gbm9kZTtcbiAgZm9yIChjb25zdCBpbmRleFBhdGggb2Ygb3B0aW9ucy5pbmRleFBhdGhzKSB7XG4gICAgaWYgKGluZGV4UGF0aC5sZW5ndGggPT09IDApIHRocm93IG5ldyBFcnJvcihgQ2FuJ3QgcmVtb3ZlIHRoZSByb290IG5vZGVgKTtcbiAgfVxuICBjb25zdCBvcGVyYXRpb25zID0gZ2V0UmVtb3ZhbE9wZXJhdGlvbnMob3B0aW9ucy5pbmRleFBhdGhzKTtcbiAgcmV0dXJuIG11dGF0ZShub2RlLCBvcGVyYXRpb25zLCBvcHRpb25zKTtcbn1cbmZ1bmN0aW9uIG1vdmUobm9kZSwgb3B0aW9ucykge1xuICBpZiAob3B0aW9ucy5pbmRleFBhdGhzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIG5vZGU7XG4gIGZvciAoY29uc3QgaW5kZXhQYXRoIG9mIG9wdGlvbnMuaW5kZXhQYXRocykge1xuICAgIGlmIChpbmRleFBhdGgubGVuZ3RoID09PSAwKSB0aHJvdyBuZXcgRXJyb3IoYENhbid0IG1vdmUgdGhlIHJvb3Qgbm9kZWApO1xuICB9XG4gIGlmIChvcHRpb25zLnRvLmxlbmd0aCA9PT0gMCkgdGhyb3cgbmV3IEVycm9yKGBDYW4ndCBtb3ZlIG5vZGVzIHRvIHRoZSByb290YCk7XG4gIGNvbnN0IF9hbmNlc3RvckluZGV4UGF0aHMgPSBhbmNlc3RvckluZGV4UGF0aHMob3B0aW9ucy5pbmRleFBhdGhzKTtcbiAgY29uc3Qgbm9kZXNUb0luc2VydCA9IF9hbmNlc3RvckluZGV4UGF0aHMubWFwKChpbmRleFBhdGgpID0+IGFjY2Vzcyhub2RlLCBpbmRleFBhdGgsIG9wdGlvbnMpKTtcbiAgY29uc3Qgb3BlcmF0aW9ucyA9IGdldEluc2VydGlvbk9wZXJhdGlvbnMob3B0aW9ucy50bywgbm9kZXNUb0luc2VydCwgZ2V0UmVtb3ZhbE9wZXJhdGlvbnMoX2FuY2VzdG9ySW5kZXhQYXRocykpO1xuICByZXR1cm4gbXV0YXRlKG5vZGUsIG9wZXJhdGlvbnMsIG9wdGlvbnMpO1xufVxuZnVuY3Rpb24gdmlzaXQobm9kZSwgb3B0aW9ucykge1xuICBjb25zdCB7IG9uRW50ZXIsIG9uTGVhdmUsIGdldENoaWxkcmVuIH0gPSBvcHRpb25zO1xuICBsZXQgaW5kZXhQYXRoID0gW107XG4gIGxldCBzdGFjayA9IFt7IG5vZGUgfV07XG4gIGNvbnN0IGdldEluZGV4UGF0aCA9IG9wdGlvbnMucmV1c2VJbmRleFBhdGggPyAoKSA9PiBpbmRleFBhdGggOiAoKSA9PiBpbmRleFBhdGguc2xpY2UoKTtcbiAgd2hpbGUgKHN0YWNrLmxlbmd0aCA+IDApIHtcbiAgICBsZXQgd3JhcHBlciA9IHN0YWNrW3N0YWNrLmxlbmd0aCAtIDFdO1xuICAgIGlmICh3cmFwcGVyLnN0YXRlID09PSB2b2lkIDApIHtcbiAgICAgIGNvbnN0IGVudGVyUmVzdWx0ID0gb25FbnRlcj8uKHdyYXBwZXIubm9kZSwgZ2V0SW5kZXhQYXRoKCkpO1xuICAgICAgaWYgKGVudGVyUmVzdWx0ID09PSBcInN0b3BcIikgcmV0dXJuO1xuICAgICAgd3JhcHBlci5zdGF0ZSA9IGVudGVyUmVzdWx0ID09PSBcInNraXBcIiA/IC0xIDogMDtcbiAgICB9XG4gICAgY29uc3QgY2hpbGRyZW4gPSB3cmFwcGVyLmNoaWxkcmVuIHx8IGdldENoaWxkcmVuKHdyYXBwZXIubm9kZSwgZ2V0SW5kZXhQYXRoKCkpO1xuICAgIHdyYXBwZXIuY2hpbGRyZW4gfHwgKHdyYXBwZXIuY2hpbGRyZW4gPSBjaGlsZHJlbik7XG4gICAgaWYgKHdyYXBwZXIuc3RhdGUgIT09IC0xKSB7XG4gICAgICBpZiAod3JhcHBlci5zdGF0ZSA8IGNoaWxkcmVuLmxlbmd0aCkge1xuICAgICAgICBsZXQgY3VycmVudEluZGV4ID0gd3JhcHBlci5zdGF0ZTtcbiAgICAgICAgaW5kZXhQYXRoLnB1c2goY3VycmVudEluZGV4KTtcbiAgICAgICAgc3RhY2sucHVzaCh7IG5vZGU6IGNoaWxkcmVuW2N1cnJlbnRJbmRleF0gfSk7XG4gICAgICAgIHdyYXBwZXIuc3RhdGUgPSBjdXJyZW50SW5kZXggKyAxO1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IGxlYXZlUmVzdWx0ID0gb25MZWF2ZT8uKHdyYXBwZXIubm9kZSwgZ2V0SW5kZXhQYXRoKCkpO1xuICAgICAgaWYgKGxlYXZlUmVzdWx0ID09PSBcInN0b3BcIikgcmV0dXJuO1xuICAgIH1cbiAgICBpbmRleFBhdGgucG9wKCk7XG4gICAgc3RhY2sucG9wKCk7XG4gIH1cbn1cblxuLy8gc3JjL3RyZWUtY29sbGVjdGlvbi50c1xudmFyIFRyZWVDb2xsZWN0aW9uID0gY2xhc3Mge1xuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwicm9vdE5vZGVcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImlzRXF1YWxcIiwgKG90aGVyKSA9PiB7XG4gICAgICByZXR1cm4gaXNFcXVhbCh0aGlzLnJvb3ROb2RlLCBvdGhlci5yb290Tm9kZSk7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImdldE5vZGVDaGlsZHJlblwiLCAobm9kZSkgPT4ge1xuICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy5ub2RlVG9DaGlsZHJlbj8uKG5vZGUpID8/IGZhbGxiYWNrMi5ub2RlVG9DaGlsZHJlbihub2RlKSA/PyBbXTtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZ2V0Tm9kZVZhbHVlXCIsIChub2RlKSA9PiB7XG4gICAgICByZXR1cm4gdGhpcy5vcHRpb25zLm5vZGVUb1ZhbHVlPy4obm9kZSkgPz8gZmFsbGJhY2syLm5vZGVUb1ZhbHVlKG5vZGUpO1xuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJnZXROb2RlRGlzYWJsZWRcIiwgKG5vZGUpID0+IHtcbiAgICAgIHJldHVybiB0aGlzLm9wdGlvbnMuaXNOb2RlRGlzYWJsZWQ/Lihub2RlKSA/PyBmYWxsYmFjazIuaXNOb2RlRGlzYWJsZWQobm9kZSk7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInN0cmluZ2lmeVwiLCAodmFsdWUpID0+IHtcbiAgICAgIGNvbnN0IG5vZGUgPSB0aGlzLmZpbmROb2RlKHZhbHVlKTtcbiAgICAgIGlmICghbm9kZSkgcmV0dXJuIG51bGw7XG4gICAgICByZXR1cm4gdGhpcy5zdHJpbmdpZnlOb2RlKG5vZGUpO1xuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJzdHJpbmdpZnlOb2RlXCIsIChub2RlKSA9PiB7XG4gICAgICByZXR1cm4gdGhpcy5vcHRpb25zLm5vZGVUb1N0cmluZz8uKG5vZGUpID8/IGZhbGxiYWNrMi5ub2RlVG9TdHJpbmcobm9kZSk7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImdldEZpcnN0Tm9kZVwiLCAocm9vdE5vZGUgPSB0aGlzLnJvb3ROb2RlKSA9PiB7XG4gICAgICBsZXQgZmlyc3RDaGlsZDtcbiAgICAgIHZpc2l0KHJvb3ROb2RlLCB7XG4gICAgICAgIGdldENoaWxkcmVuOiB0aGlzLmdldE5vZGVDaGlsZHJlbixcbiAgICAgICAgb25FbnRlcjogKG5vZGUsIGluZGV4UGF0aCkgPT4ge1xuICAgICAgICAgIGlmICghZmlyc3RDaGlsZCAmJiBpbmRleFBhdGgubGVuZ3RoID4gMCAmJiAhdGhpcy5nZXROb2RlRGlzYWJsZWQobm9kZSkpIHtcbiAgICAgICAgICAgIGZpcnN0Q2hpbGQgPSBub2RlO1xuICAgICAgICAgICAgcmV0dXJuIFwic3RvcFwiO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gZmlyc3RDaGlsZDtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZ2V0TGFzdE5vZGVcIiwgKHJvb3ROb2RlID0gdGhpcy5yb290Tm9kZSwgb3B0cyA9IHt9KSA9PiB7XG4gICAgICBsZXQgbGFzdENoaWxkO1xuICAgICAgdmlzaXQocm9vdE5vZGUsIHtcbiAgICAgICAgZ2V0Q2hpbGRyZW46IHRoaXMuZ2V0Tm9kZUNoaWxkcmVuLFxuICAgICAgICBvbkVudGVyOiAobm9kZSwgaW5kZXhQYXRoKSA9PiB7XG4gICAgICAgICAgY29uc3Qgbm9kZVZhbHVlID0gdGhpcy5nZXROb2RlVmFsdWUobm9kZSk7XG4gICAgICAgICAgaWYgKG9wdHMuc2tpcD8uKHsgdmFsdWU6IG5vZGVWYWx1ZSwgbm9kZSwgaW5kZXhQYXRoIH0pKSByZXR1cm4gXCJza2lwXCI7XG4gICAgICAgICAgaWYgKGluZGV4UGF0aC5sZW5ndGggPiAxKSByZXR1cm4gXCJza2lwXCI7XG4gICAgICAgICAgaWYgKCF0aGlzLmdldE5vZGVEaXNhYmxlZChub2RlKSkge1xuICAgICAgICAgICAgbGFzdENoaWxkID0gbm9kZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIGxhc3RDaGlsZDtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiYXRcIiwgKGluZGV4UGF0aCkgPT4ge1xuICAgICAgcmV0dXJuIGFjY2Vzcyh0aGlzLnJvb3ROb2RlLCBpbmRleFBhdGgsIHtcbiAgICAgICAgZ2V0Q2hpbGRyZW46IHRoaXMuZ2V0Tm9kZUNoaWxkcmVuXG4gICAgICB9KTtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZmluZE5vZGVcIiwgKHZhbHVlLCByb290Tm9kZSA9IHRoaXMucm9vdE5vZGUpID0+IHtcbiAgICAgIHJldHVybiBmaW5kKHJvb3ROb2RlLCB7XG4gICAgICAgIGdldENoaWxkcmVuOiB0aGlzLmdldE5vZGVDaGlsZHJlbixcbiAgICAgICAgcHJlZGljYXRlOiAobm9kZSkgPT4gdGhpcy5nZXROb2RlVmFsdWUobm9kZSkgPT09IHZhbHVlXG4gICAgICB9KTtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic29ydFwiLCAodmFsdWVzKSA9PiB7XG4gICAgICByZXR1cm4gdmFsdWVzLnJlZHVjZShcbiAgICAgICAgKGFjYywgdmFsdWUpID0+IHtcbiAgICAgICAgICBjb25zdCBpbmRleFBhdGggPSB0aGlzLmdldEluZGV4UGF0aCh2YWx1ZSk7XG4gICAgICAgICAgaWYgKGluZGV4UGF0aCAhPSBudWxsKSBhY2MucHVzaCh7IHZhbHVlLCBpbmRleFBhdGggfSk7XG4gICAgICAgICAgcmV0dXJuIGFjYztcbiAgICAgICAgfSxcbiAgICAgICAgW11cbiAgICAgICkuc29ydCgoYSwgYikgPT4gY29tcGFyZUluZGV4UGF0aHMoYS5pbmRleFBhdGgsIGIuaW5kZXhQYXRoKSkubWFwKCh7IHZhbHVlIH0pID0+IHZhbHVlKTtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZ2V0SW5kZXhQYXRoXCIsICh2YWx1ZSkgPT4ge1xuICAgICAgcmV0dXJuIGZpbmRJbmRleFBhdGgodGhpcy5yb290Tm9kZSwge1xuICAgICAgICBnZXRDaGlsZHJlbjogdGhpcy5nZXROb2RlQ2hpbGRyZW4sXG4gICAgICAgIHByZWRpY2F0ZTogKG5vZGUpID0+IHRoaXMuZ2V0Tm9kZVZhbHVlKG5vZGUpID09PSB2YWx1ZVxuICAgICAgfSk7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImdldFZhbHVlXCIsIChpbmRleFBhdGgpID0+IHtcbiAgICAgIGNvbnN0IG5vZGUgPSB0aGlzLmF0KGluZGV4UGF0aCk7XG4gICAgICByZXR1cm4gbm9kZSA/IHRoaXMuZ2V0Tm9kZVZhbHVlKG5vZGUpIDogdm9pZCAwO1xuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJnZXRWYWx1ZVBhdGhcIiwgKGluZGV4UGF0aCkgPT4ge1xuICAgICAgaWYgKCFpbmRleFBhdGgpIHJldHVybiBbXTtcbiAgICAgIGNvbnN0IHZhbHVlUGF0aCA9IFtdO1xuICAgICAgbGV0IGN1cnJlbnRQYXRoID0gWy4uLmluZGV4UGF0aF07XG4gICAgICB3aGlsZSAoY3VycmVudFBhdGgubGVuZ3RoID4gMCkge1xuICAgICAgICBjb25zdCBub2RlID0gdGhpcy5hdChjdXJyZW50UGF0aCk7XG4gICAgICAgIGlmIChub2RlKSB2YWx1ZVBhdGgudW5zaGlmdCh0aGlzLmdldE5vZGVWYWx1ZShub2RlKSk7XG4gICAgICAgIGN1cnJlbnRQYXRoLnBvcCgpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHZhbHVlUGF0aDtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZ2V0RGVwdGhcIiwgKHZhbHVlKSA9PiB7XG4gICAgICBjb25zdCBpbmRleFBhdGggPSBmaW5kSW5kZXhQYXRoKHRoaXMucm9vdE5vZGUsIHtcbiAgICAgICAgZ2V0Q2hpbGRyZW46IHRoaXMuZ2V0Tm9kZUNoaWxkcmVuLFxuICAgICAgICBwcmVkaWNhdGU6IChub2RlKSA9PiB0aGlzLmdldE5vZGVWYWx1ZShub2RlKSA9PT0gdmFsdWVcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIGluZGV4UGF0aD8ubGVuZ3RoID8/IDA7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImlzUm9vdE5vZGVcIiwgKG5vZGUpID0+IHtcbiAgICAgIHJldHVybiB0aGlzLmdldE5vZGVWYWx1ZShub2RlKSA9PT0gdGhpcy5nZXROb2RlVmFsdWUodGhpcy5yb290Tm9kZSk7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImNvbnRhaW5zXCIsIChwYXJlbnRJbmRleFBhdGgsIHZhbHVlSW5kZXhQYXRoKSA9PiB7XG4gICAgICBpZiAoIXBhcmVudEluZGV4UGF0aCB8fCAhdmFsdWVJbmRleFBhdGgpIHJldHVybiBmYWxzZTtcbiAgICAgIHJldHVybiB2YWx1ZUluZGV4UGF0aC5zbGljZSgwLCBwYXJlbnRJbmRleFBhdGgubGVuZ3RoKS5ldmVyeSgoXywgaSkgPT4gcGFyZW50SW5kZXhQYXRoW2ldID09PSB2YWx1ZUluZGV4UGF0aFtpXSk7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImdldE5leHROb2RlXCIsICh2YWx1ZSwgb3B0cyA9IHt9KSA9PiB7XG4gICAgICBsZXQgZm91bmQgPSBmYWxzZTtcbiAgICAgIGxldCBuZXh0Tm9kZTtcbiAgICAgIHZpc2l0KHRoaXMucm9vdE5vZGUsIHtcbiAgICAgICAgZ2V0Q2hpbGRyZW46IHRoaXMuZ2V0Tm9kZUNoaWxkcmVuLFxuICAgICAgICBvbkVudGVyOiAobm9kZSwgaW5kZXhQYXRoKSA9PiB7XG4gICAgICAgICAgaWYgKHRoaXMuaXNSb290Tm9kZShub2RlKSkgcmV0dXJuO1xuICAgICAgICAgIGNvbnN0IG5vZGVWYWx1ZSA9IHRoaXMuZ2V0Tm9kZVZhbHVlKG5vZGUpO1xuICAgICAgICAgIGlmIChvcHRzLnNraXA/Lih7IHZhbHVlOiBub2RlVmFsdWUsIG5vZGUsIGluZGV4UGF0aCB9KSkge1xuICAgICAgICAgICAgaWYgKG5vZGVWYWx1ZSA9PT0gdmFsdWUpIHtcbiAgICAgICAgICAgICAgZm91bmQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIFwic2tpcFwiO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoZm91bmQgJiYgIXRoaXMuZ2V0Tm9kZURpc2FibGVkKG5vZGUpKSB7XG4gICAgICAgICAgICBuZXh0Tm9kZSA9IG5vZGU7XG4gICAgICAgICAgICByZXR1cm4gXCJzdG9wXCI7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChub2RlVmFsdWUgPT09IHZhbHVlKSB7XG4gICAgICAgICAgICBmb3VuZCA9IHRydWU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBuZXh0Tm9kZTtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZ2V0UHJldmlvdXNOb2RlXCIsICh2YWx1ZSwgb3B0cyA9IHt9KSA9PiB7XG4gICAgICBsZXQgcHJldmlvdXNOb2RlO1xuICAgICAgbGV0IGZvdW5kID0gZmFsc2U7XG4gICAgICB2aXNpdCh0aGlzLnJvb3ROb2RlLCB7XG4gICAgICAgIGdldENoaWxkcmVuOiB0aGlzLmdldE5vZGVDaGlsZHJlbixcbiAgICAgICAgb25FbnRlcjogKG5vZGUsIGluZGV4UGF0aCkgPT4ge1xuICAgICAgICAgIGlmICh0aGlzLmlzUm9vdE5vZGUobm9kZSkpIHJldHVybjtcbiAgICAgICAgICBjb25zdCBub2RlVmFsdWUgPSB0aGlzLmdldE5vZGVWYWx1ZShub2RlKTtcbiAgICAgICAgICBpZiAob3B0cy5za2lwPy4oeyB2YWx1ZTogbm9kZVZhbHVlLCBub2RlLCBpbmRleFBhdGggfSkpIHtcbiAgICAgICAgICAgIHJldHVybiBcInNraXBcIjtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKG5vZGVWYWx1ZSA9PT0gdmFsdWUpIHtcbiAgICAgICAgICAgIGZvdW5kID0gdHJ1ZTtcbiAgICAgICAgICAgIHJldHVybiBcInN0b3BcIjtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKCF0aGlzLmdldE5vZGVEaXNhYmxlZChub2RlKSkge1xuICAgICAgICAgICAgcHJldmlvdXNOb2RlID0gbm9kZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIGZvdW5kID8gcHJldmlvdXNOb2RlIDogdm9pZCAwO1xuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJnZXRQYXJlbnROb2Rlc1wiLCAodmFsdWVzKSA9PiB7XG4gICAgICBjb25zdCByZXN1bHQgPSBbXTtcbiAgICAgIGxldCBpbmRleFBhdGggPSB0aGlzLmdldEluZGV4UGF0aCh2YWx1ZXMpO1xuICAgICAgd2hpbGUgKGluZGV4UGF0aCAmJiBpbmRleFBhdGgubGVuZ3RoID4gMCkge1xuICAgICAgICBpbmRleFBhdGgucG9wKCk7XG4gICAgICAgIGNvbnN0IHBhcmVudE5vZGUgPSB0aGlzLmF0KGluZGV4UGF0aCk7XG4gICAgICAgIGlmIChwYXJlbnROb2RlICYmICF0aGlzLmlzUm9vdE5vZGUocGFyZW50Tm9kZSkpIHtcbiAgICAgICAgICByZXN1bHQudW5zaGlmdChwYXJlbnROb2RlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZ2V0UGFyZW50SW5kZXhQYXRoXCIsIChpbmRleFBhdGgpID0+IHtcbiAgICAgIHJldHVybiBpbmRleFBhdGguc2xpY2UoMCwgLTEpO1xuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJnZXRQYXJlbnROb2RlXCIsICh2YWx1ZU9ySW5kZXhQYXRoKSA9PiB7XG4gICAgICBjb25zdCBpbmRleFBhdGggPSB0eXBlb2YgdmFsdWVPckluZGV4UGF0aCA9PT0gXCJzdHJpbmdcIiA/IHRoaXMuZ2V0SW5kZXhQYXRoKHZhbHVlT3JJbmRleFBhdGgpIDogdmFsdWVPckluZGV4UGF0aDtcbiAgICAgIHJldHVybiBpbmRleFBhdGggPyB0aGlzLmF0KHRoaXMuZ2V0UGFyZW50SW5kZXhQYXRoKGluZGV4UGF0aCkpIDogdm9pZCAwO1xuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJ2aXNpdFwiLCAob3B0cykgPT4ge1xuICAgICAgY29uc3QgeyBza2lwLCAuLi5yZXN0IH0gPSBvcHRzO1xuICAgICAgdmlzaXQodGhpcy5yb290Tm9kZSwge1xuICAgICAgICAuLi5yZXN0LFxuICAgICAgICBnZXRDaGlsZHJlbjogdGhpcy5nZXROb2RlQ2hpbGRyZW4sXG4gICAgICAgIG9uRW50ZXI6IChub2RlLCBpbmRleFBhdGgpID0+IHtcbiAgICAgICAgICBpZiAodGhpcy5pc1Jvb3ROb2RlKG5vZGUpKSByZXR1cm47XG4gICAgICAgICAgaWYgKHNraXA/Lih7IHZhbHVlOiB0aGlzLmdldE5vZGVWYWx1ZShub2RlKSwgbm9kZSwgaW5kZXhQYXRoIH0pKSByZXR1cm4gXCJza2lwXCI7XG4gICAgICAgICAgcmV0dXJuIHJlc3Qub25FbnRlcj8uKG5vZGUsIGluZGV4UGF0aCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJnZXRQcmV2aW91c1NpYmxpbmdcIiwgKGluZGV4UGF0aCkgPT4ge1xuICAgICAgY29uc3QgcGFyZW50Tm9kZSA9IHRoaXMuZ2V0UGFyZW50Tm9kZShpbmRleFBhdGgpO1xuICAgICAgaWYgKCFwYXJlbnROb2RlKSByZXR1cm47XG4gICAgICBjb25zdCBzaWJsaW5ncyA9IHRoaXMuZ2V0Tm9kZUNoaWxkcmVuKHBhcmVudE5vZGUpO1xuICAgICAgbGV0IGlkeCA9IHNpYmxpbmdzLmZpbmRJbmRleCgoc2libGluZykgPT4gdGhpcy5nZXRWYWx1ZShpbmRleFBhdGgpID09PSB0aGlzLmdldE5vZGVWYWx1ZShzaWJsaW5nKSk7XG4gICAgICB3aGlsZSAoLS1pZHggPj0gMCkge1xuICAgICAgICBjb25zdCBzaWJsaW5nID0gc2libGluZ3NbaWR4XTtcbiAgICAgICAgaWYgKCF0aGlzLmdldE5vZGVEaXNhYmxlZChzaWJsaW5nKSkgcmV0dXJuIHNpYmxpbmc7XG4gICAgICB9XG4gICAgICByZXR1cm47XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImdldE5leHRTaWJsaW5nXCIsIChpbmRleFBhdGgpID0+IHtcbiAgICAgIGNvbnN0IHBhcmVudE5vZGUgPSB0aGlzLmdldFBhcmVudE5vZGUoaW5kZXhQYXRoKTtcbiAgICAgIGlmICghcGFyZW50Tm9kZSkgcmV0dXJuO1xuICAgICAgY29uc3Qgc2libGluZ3MgPSB0aGlzLmdldE5vZGVDaGlsZHJlbihwYXJlbnROb2RlKTtcbiAgICAgIGxldCBpZHggPSBzaWJsaW5ncy5maW5kSW5kZXgoKHNpYmxpbmcpID0+IHRoaXMuZ2V0VmFsdWUoaW5kZXhQYXRoKSA9PT0gdGhpcy5nZXROb2RlVmFsdWUoc2libGluZykpO1xuICAgICAgd2hpbGUgKCsraWR4IDwgc2libGluZ3MubGVuZ3RoKSB7XG4gICAgICAgIGNvbnN0IHNpYmxpbmcgPSBzaWJsaW5nc1tpZHhdO1xuICAgICAgICBpZiAoIXRoaXMuZ2V0Tm9kZURpc2FibGVkKHNpYmxpbmcpKSByZXR1cm4gc2libGluZztcbiAgICAgIH1cbiAgICAgIHJldHVybjtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZ2V0U2libGluZ05vZGVzXCIsIChpbmRleFBhdGgpID0+IHtcbiAgICAgIGNvbnN0IHBhcmVudE5vZGUgPSB0aGlzLmdldFBhcmVudE5vZGUoaW5kZXhQYXRoKTtcbiAgICAgIHJldHVybiBwYXJlbnROb2RlID8gdGhpcy5nZXROb2RlQ2hpbGRyZW4ocGFyZW50Tm9kZSkgOiBbXTtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZ2V0VmFsdWVzXCIsIChyb290Tm9kZSA9IHRoaXMucm9vdE5vZGUpID0+IHtcbiAgICAgIGNvbnN0IHZhbHVlcyA9IGZsYXRNYXAocm9vdE5vZGUsIHtcbiAgICAgICAgZ2V0Q2hpbGRyZW46IHRoaXMuZ2V0Tm9kZUNoaWxkcmVuLFxuICAgICAgICB0cmFuc2Zvcm06IChub2RlKSA9PiBbdGhpcy5nZXROb2RlVmFsdWUobm9kZSldXG4gICAgICB9KTtcbiAgICAgIHJldHVybiB2YWx1ZXMuc2xpY2UoMSk7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImlzU2FtZURlcHRoXCIsIChpbmRleFBhdGgsIGRlcHRoKSA9PiB7XG4gICAgICBpZiAoZGVwdGggPT0gbnVsbCkgcmV0dXJuIHRydWU7XG4gICAgICByZXR1cm4gaW5kZXhQYXRoLmxlbmd0aCA9PT0gZGVwdGg7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImlzQnJhbmNoTm9kZVwiLCAobm9kZSkgPT4ge1xuICAgICAgcmV0dXJuIHRoaXMuZ2V0Tm9kZUNoaWxkcmVuKG5vZGUpLmxlbmd0aCA+IDA7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImdldEJyYW5jaFZhbHVlc1wiLCAocm9vdE5vZGUgPSB0aGlzLnJvb3ROb2RlLCBvcHRzID0ge30pID0+IHtcbiAgICAgIGxldCB2YWx1ZXMgPSBbXTtcbiAgICAgIHZpc2l0KHJvb3ROb2RlLCB7XG4gICAgICAgIGdldENoaWxkcmVuOiB0aGlzLmdldE5vZGVDaGlsZHJlbixcbiAgICAgICAgb25FbnRlcjogKG5vZGUsIGluZGV4UGF0aCkgPT4ge1xuICAgICAgICAgIGNvbnN0IG5vZGVWYWx1ZSA9IHRoaXMuZ2V0Tm9kZVZhbHVlKG5vZGUpO1xuICAgICAgICAgIGlmIChvcHRzLnNraXA/Lih7IHZhbHVlOiBub2RlVmFsdWUsIG5vZGUsIGluZGV4UGF0aCB9KSkgcmV0dXJuIFwic2tpcFwiO1xuICAgICAgICAgIGlmICh0aGlzLmdldE5vZGVDaGlsZHJlbihub2RlKS5sZW5ndGggPiAwICYmIHRoaXMuaXNTYW1lRGVwdGgoaW5kZXhQYXRoLCBvcHRzLmRlcHRoKSkge1xuICAgICAgICAgICAgdmFsdWVzLnB1c2godGhpcy5nZXROb2RlVmFsdWUobm9kZSkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gdmFsdWVzLnNsaWNlKDEpO1xuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJmbGF0dGVuXCIsIChyb290Tm9kZSA9IHRoaXMucm9vdE5vZGUpID0+IHtcbiAgICAgIGNvbnN0IG5vZGVzID0gZmxhdE1hcChyb290Tm9kZSwge1xuICAgICAgICBnZXRDaGlsZHJlbjogdGhpcy5nZXROb2RlQ2hpbGRyZW4sXG4gICAgICAgIHRyYW5zZm9ybTogKG5vZGUsIGluZGV4UGF0aCkgPT4ge1xuICAgICAgICAgIGNvbnN0IGNoaWxkcmVuID0gdGhpcy5nZXROb2RlQ2hpbGRyZW4obm9kZSkubWFwKChjaGlsZCkgPT4gdGhpcy5nZXROb2RlVmFsdWUoY2hpbGQpKTtcbiAgICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgY29tcGFjdCh7XG4gICAgICAgICAgICAgIGxhYmVsOiB0aGlzLnN0cmluZ2lmeU5vZGUobm9kZSksXG4gICAgICAgICAgICAgIHZhbHVlOiB0aGlzLmdldE5vZGVWYWx1ZShub2RlKSxcbiAgICAgICAgICAgICAgaW5kZXhQYXRoLFxuICAgICAgICAgICAgICBjaGlsZHJlbjogY2hpbGRyZW4ubGVuZ3RoID4gMCA/IGNoaWxkcmVuIDogdm9pZCAwXG4gICAgICAgICAgICB9KVxuICAgICAgICAgIF07XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIG5vZGVzLnNsaWNlKDEpO1xuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJfY3JlYXRlXCIsIChub2RlLCBjaGlsZHJlbikgPT4ge1xuICAgICAgcmV0dXJuIGNvbXBhY3QoeyAuLi5ub2RlLCBjaGlsZHJlbiB9KTtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiX2luc2VydFwiLCAocm9vdE5vZGUsIGluZGV4UGF0aCwgbm9kZXMpID0+IHtcbiAgICAgIHJldHVybiBpbnNlcnQocm9vdE5vZGUsIHsgYXQ6IGluZGV4UGF0aCwgbm9kZXMsIGdldENoaWxkcmVuOiB0aGlzLmdldE5vZGVDaGlsZHJlbiwgY3JlYXRlOiB0aGlzLl9jcmVhdGUgfSk7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcIl9yZXBsYWNlXCIsIChyb290Tm9kZSwgaW5kZXhQYXRoLCBub2RlKSA9PiB7XG4gICAgICByZXR1cm4gcmVwbGFjZShyb290Tm9kZSwgeyBhdDogaW5kZXhQYXRoLCBub2RlLCBnZXRDaGlsZHJlbjogdGhpcy5nZXROb2RlQ2hpbGRyZW4sIGNyZWF0ZTogdGhpcy5fY3JlYXRlIH0pO1xuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJfbW92ZVwiLCAocm9vdE5vZGUsIGluZGV4UGF0aHMsIHRvKSA9PiB7XG4gICAgICByZXR1cm4gbW92ZShyb290Tm9kZSwgeyBpbmRleFBhdGhzLCB0bywgZ2V0Q2hpbGRyZW46IHRoaXMuZ2V0Tm9kZUNoaWxkcmVuLCBjcmVhdGU6IHRoaXMuX2NyZWF0ZSB9KTtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiX3JlbW92ZVwiLCAocm9vdE5vZGUsIGluZGV4UGF0aHMpID0+IHtcbiAgICAgIHJldHVybiByZW1vdmUocm9vdE5vZGUsIHsgaW5kZXhQYXRocywgZ2V0Q2hpbGRyZW46IHRoaXMuZ2V0Tm9kZUNoaWxkcmVuLCBjcmVhdGU6IHRoaXMuX2NyZWF0ZSB9KTtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwicmVwbGFjZVwiLCAoaW5kZXhQYXRoLCBub2RlKSA9PiB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVwbGFjZSh0aGlzLnJvb3ROb2RlLCBpbmRleFBhdGgsIG5vZGUpO1xuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJyZW1vdmVcIiwgKGluZGV4UGF0aHMpID0+IHtcbiAgICAgIHJldHVybiB0aGlzLl9yZW1vdmUodGhpcy5yb290Tm9kZSwgaW5kZXhQYXRocyk7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImluc2VydEJlZm9yZVwiLCAoaW5kZXhQYXRoLCBub2RlcykgPT4ge1xuICAgICAgY29uc3QgcGFyZW50Tm9kZSA9IHRoaXMuZ2V0UGFyZW50Tm9kZShpbmRleFBhdGgpO1xuICAgICAgcmV0dXJuIHBhcmVudE5vZGUgPyB0aGlzLl9pbnNlcnQodGhpcy5yb290Tm9kZSwgaW5kZXhQYXRoLCBub2RlcykgOiB2b2lkIDA7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImluc2VydEFmdGVyXCIsIChpbmRleFBhdGgsIG5vZGVzKSA9PiB7XG4gICAgICBjb25zdCBwYXJlbnROb2RlID0gdGhpcy5nZXRQYXJlbnROb2RlKGluZGV4UGF0aCk7XG4gICAgICBpZiAoIXBhcmVudE5vZGUpIHJldHVybjtcbiAgICAgIGNvbnN0IG5leHRJbmRleCA9IFsuLi5pbmRleFBhdGguc2xpY2UoMCwgLTEpLCBpbmRleFBhdGhbaW5kZXhQYXRoLmxlbmd0aCAtIDFdICsgMV07XG4gICAgICByZXR1cm4gdGhpcy5faW5zZXJ0KHRoaXMucm9vdE5vZGUsIG5leHRJbmRleCwgbm9kZXMpO1xuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJtb3ZlXCIsIChmcm9tSW5kZXhQYXRocywgdG9JbmRleFBhdGgpID0+IHtcbiAgICAgIHJldHVybiB0aGlzLl9tb3ZlKHRoaXMucm9vdE5vZGUsIGZyb21JbmRleFBhdGhzLCB0b0luZGV4UGF0aCk7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImpzb25cIiwgKCkgPT4ge1xuICAgICAgcmV0dXJuIHRoaXMuZ2V0VmFsdWVzKHRoaXMucm9vdE5vZGUpO1xuICAgIH0pO1xuICAgIHRoaXMucm9vdE5vZGUgPSBvcHRpb25zLnJvb3ROb2RlO1xuICB9XG59O1xuZnVuY3Rpb24gZmxhdHRlbmVkVG9UcmVlKG5vZGVzKSB7XG4gIGxldCByb290Tm9kZSA9IHtcbiAgICB2YWx1ZTogXCJST09UXCJcbiAgfTtcbiAgbm9kZXMubWFwKChub2RlKSA9PiB7XG4gICAgY29uc3QgeyBpbmRleFBhdGgsIGxhYmVsLCB2YWx1ZSB9ID0gbm9kZTtcbiAgICBpZiAoIWluZGV4UGF0aC5sZW5ndGgpIHtcbiAgICAgIE9iamVjdC5hc3NpZ24ocm9vdE5vZGUsIHsgbGFiZWwsIHZhbHVlLCBjaGlsZHJlbjogW10gfSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHJvb3ROb2RlID0gaW5zZXJ0KHJvb3ROb2RlLCB7XG4gICAgICBhdDogaW5kZXhQYXRoLFxuICAgICAgbm9kZXM6IFtjb21wYWN0KHsgbGFiZWwsIHZhbHVlIH0pXSxcbiAgICAgIGdldENoaWxkcmVuOiAobm9kZTIpID0+IG5vZGUyLmNoaWxkcmVuID8/IFtdLFxuICAgICAgY3JlYXRlOiAobm9kZTIsIGNoaWxkcmVuKSA9PiB7XG4gICAgICAgIHJldHVybiBjb21wYWN0KHsgLi4ubm9kZTIsIGNoaWxkcmVuIH0pO1xuICAgICAgfVxuICAgIH0pO1xuICB9KTtcbiAgcmV0dXJuIG5ldyBUcmVlQ29sbGVjdGlvbih7IHJvb3ROb2RlIH0pO1xufVxuZnVuY3Rpb24gZmlsZVBhdGhUb1RyZWUocGF0aHMpIHtcbiAgY29uc3Qgcm9vdE5vZGUgPSB7XG4gICAgbGFiZWw6IFwiXCIsXG4gICAgdmFsdWU6IFwiUk9PVFwiLFxuICAgIGNoaWxkcmVuOiBbXVxuICB9O1xuICBwYXRocy5mb3JFYWNoKChwYXRoKSA9PiB7XG4gICAgY29uc3QgcGFydHMgPSBwYXRoLnNwbGl0KFwiL1wiKTtcbiAgICBsZXQgY3VycmVudE5vZGUgPSByb290Tm9kZTtcbiAgICBwYXJ0cy5mb3JFYWNoKChwYXJ0KSA9PiB7XG4gICAgICBsZXQgY2hpbGROb2RlID0gY3VycmVudE5vZGUuY2hpbGRyZW4/LmZpbmQoKGNoaWxkKSA9PiBjaGlsZC5sYWJlbCA9PT0gcGFydCk7XG4gICAgICBpZiAoIWNoaWxkTm9kZSkge1xuICAgICAgICBjaGlsZE5vZGUgPSB7XG4gICAgICAgICAgdmFsdWU6IHBhcnRzLnNsaWNlKDAsIHBhcnRzLmluZGV4T2YocGFydCkgKyAxKS5qb2luKFwiL1wiKSxcbiAgICAgICAgICBsYWJlbDogcGFydFxuICAgICAgICB9O1xuICAgICAgICBjdXJyZW50Tm9kZS5jaGlsZHJlbiB8fCAoY3VycmVudE5vZGUuY2hpbGRyZW4gPSBbXSk7XG4gICAgICAgIGN1cnJlbnROb2RlLmNoaWxkcmVuLnB1c2goY2hpbGROb2RlKTtcbiAgICAgIH1cbiAgICAgIGN1cnJlbnROb2RlID0gY2hpbGROb2RlO1xuICAgIH0pO1xuICB9KTtcbiAgcmV0dXJuIG5ldyBUcmVlQ29sbGVjdGlvbih7IHJvb3ROb2RlIH0pO1xufVxudmFyIGZhbGxiYWNrMiA9IHtcbiAgbm9kZVRvVmFsdWUobm9kZSkge1xuICAgIGlmICh0eXBlb2Ygbm9kZSA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIG5vZGU7XG4gICAgaWYgKGlzT2JqZWN0KG5vZGUpICYmIGhhc1Byb3Aobm9kZSwgXCJ2YWx1ZVwiKSkgcmV0dXJuIG5vZGUudmFsdWU7XG4gICAgcmV0dXJuIFwiXCI7XG4gIH0sXG4gIG5vZGVUb1N0cmluZyhub2RlKSB7XG4gICAgaWYgKHR5cGVvZiBub2RlID09PSBcInN0cmluZ1wiKSByZXR1cm4gbm9kZTtcbiAgICBpZiAoaXNPYmplY3Qobm9kZSkgJiYgaGFzUHJvcChub2RlLCBcImxhYmVsXCIpKSByZXR1cm4gbm9kZS5sYWJlbDtcbiAgICByZXR1cm4gZmFsbGJhY2syLm5vZGVUb1ZhbHVlKG5vZGUpO1xuICB9LFxuICBpc05vZGVEaXNhYmxlZChub2RlKSB7XG4gICAgaWYgKGlzT2JqZWN0KG5vZGUpICYmIGhhc1Byb3Aobm9kZSwgXCJkaXNhYmxlZFwiKSkgcmV0dXJuICEhbm9kZS5kaXNhYmxlZDtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH0sXG4gIG5vZGVUb0NoaWxkcmVuKG5vZGUpIHtcbiAgICByZXR1cm4gbm9kZS5jaGlsZHJlbjtcbiAgfVxufTtcblxuZXhwb3J0IHsgR3JpZENvbGxlY3Rpb24sIExpc3RDb2xsZWN0aW9uLCBUcmVlQ29sbGVjdGlvbiwgZmlsZVBhdGhUb1RyZWUsIGZsYXR0ZW5lZFRvVHJlZSB9O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/collection/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/color-picker/dist/index.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/@zag-js/color-picker/dist/index.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   parse: () => (/* binding */ parse)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/color-utils */ \"(ssr)/./node_modules/@zag-js/color-utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_popper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/popper */ \"(ssr)/./node_modules/@zag-js/popper/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_dismissable__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/dismissable */ \"(ssr)/./node_modules/@zag-js/dismissable/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n\n\n\n\n// src/color-picker.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"color-picker\", [\n  \"root\",\n  \"label\",\n  \"control\",\n  \"trigger\",\n  \"positioner\",\n  \"content\",\n  \"area\",\n  \"areaThumb\",\n  \"valueText\",\n  \"areaBackground\",\n  \"channelSlider\",\n  \"channelSliderLabel\",\n  \"channelSliderTrack\",\n  \"channelSliderThumb\",\n  \"channelSliderValueText\",\n  \"channelInput\",\n  \"transparencyGrid\",\n  \"swatchGroup\",\n  \"swatchTrigger\",\n  \"swatchIndicator\",\n  \"swatch\",\n  \"eyeDropperTrigger\",\n  \"formatTrigger\",\n  \"formatSelect\"\n]);\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getRootId: (ctx) => ctx.ids?.root ?? `color-picker:${ctx.id}`,\n  getLabelId: (ctx) => ctx.ids?.label ?? `color-picker:${ctx.id}:label`,\n  getHiddenInputId: (ctx) => ctx.ids?.hiddenInput ?? `color-picker:${ctx.id}:hidden-input`,\n  getControlId: (ctx) => ctx.ids?.control ?? `color-picker:${ctx.id}:control`,\n  getTriggerId: (ctx) => ctx.ids?.trigger ?? `color-picker:${ctx.id}:trigger`,\n  getContentId: (ctx) => ctx.ids?.content ?? `color-picker:${ctx.id}:content`,\n  getPositionerId: (ctx) => ctx.ids?.positioner ?? `color-picker:${ctx.id}:positioner`,\n  getFormatSelectId: (ctx) => ctx.ids?.formatSelect ?? `color-picker:${ctx.id}:format-select`,\n  getAreaId: (ctx) => ctx.ids?.area ?? `color-picker:${ctx.id}:area`,\n  getAreaGradientId: (ctx) => ctx.ids?.areaGradient ?? `color-picker:${ctx.id}:area-gradient`,\n  getAreaThumbId: (ctx) => ctx.ids?.areaThumb ?? `color-picker:${ctx.id}:area-thumb`,\n  getChannelSliderTrackId: (ctx, channel) => ctx.ids?.channelSliderTrack?.(channel) ?? `color-picker:${ctx.id}:slider-track:${channel}`,\n  getChannelSliderThumbId: (ctx, channel) => ctx.ids?.channelSliderThumb?.(channel) ?? `color-picker:${ctx.id}:slider-thumb:${channel}`,\n  getContentEl: (ctx) => dom.getById(ctx, dom.getContentId(ctx)),\n  getAreaThumbEl: (ctx) => dom.getById(ctx, dom.getAreaThumbId(ctx)),\n  getChannelSliderThumbEl: (ctx, channel) => dom.getById(ctx, dom.getChannelSliderThumbId(ctx, channel)),\n  getChannelInputEl: (ctx, channel) => {\n    const selector = `input[data-channel=\"${channel}\"]`;\n    return [\n      ...(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.queryAll)(dom.getContentEl(ctx), selector),\n      ...(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.queryAll)(dom.getControlEl(ctx), selector)\n    ];\n  },\n  getFormatSelectEl: (ctx) => dom.getById(ctx, dom.getFormatSelectId(ctx)),\n  getHiddenInputEl: (ctx) => dom.getById(ctx, dom.getHiddenInputId(ctx)),\n  getAreaEl: (ctx) => dom.getById(ctx, dom.getAreaId(ctx)),\n  getAreaValueFromPoint(ctx, point) {\n    const areaEl = dom.getAreaEl(ctx);\n    if (!areaEl) return;\n    const { percent } = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getRelativePoint)(point, areaEl);\n    return percent;\n  },\n  getControlEl: (ctx) => dom.getById(ctx, dom.getControlId(ctx)),\n  getTriggerEl: (ctx) => dom.getById(ctx, dom.getTriggerId(ctx)),\n  getPositionerEl: (ctx) => dom.getById(ctx, dom.getPositionerId(ctx)),\n  getChannelSliderTrackEl: (ctx, channel) => {\n    return dom.getById(ctx, dom.getChannelSliderTrackId(ctx, channel));\n  },\n  getChannelSliderValueFromPoint(ctx, point, channel) {\n    const trackEl = dom.getChannelSliderTrackEl(ctx, channel);\n    if (!trackEl) return;\n    const { percent } = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getRelativePoint)(point, trackEl);\n    return percent;\n  },\n  getChannelInputEls: (ctx) => {\n    return [\n      ...(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.queryAll)(dom.getContentEl(ctx), \"input[data-channel]\"),\n      ...(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.queryAll)(dom.getControlEl(ctx), \"input[data-channel]\")\n    ];\n  }\n});\nfunction getChannelDisplayColor(color, channel) {\n  switch (channel) {\n    case \"hue\":\n      return (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.parseColor)(`hsl(${color.getChannelValue(\"hue\")}, 100%, 50%)`);\n    case \"lightness\":\n    case \"brightness\":\n    case \"saturation\":\n    case \"red\":\n    case \"green\":\n    case \"blue\":\n      return color.withChannelValue(\"alpha\", 1);\n    case \"alpha\": {\n      return color;\n    }\n    default:\n      throw new Error(\"Unknown color channel: \" + channel);\n  }\n}\nfunction getChannelValue(color, channel) {\n  if (channel == null) return \"\";\n  if (channel === \"hex\") {\n    return color.toString(\"hex\");\n  }\n  if (channel === \"css\") {\n    return color.toString(\"css\");\n  }\n  if (channel in color) {\n    return color.getChannelValue(channel).toString();\n  }\n  const isHSL = color.getFormat() === \"hsla\";\n  switch (channel) {\n    case \"hue\":\n      return isHSL ? color.toFormat(\"hsla\").getChannelValue(\"hue\").toString() : color.toFormat(\"hsba\").getChannelValue(\"hue\").toString();\n    case \"saturation\":\n      return isHSL ? color.toFormat(\"hsla\").getChannelValue(\"saturation\").toString() : color.toFormat(\"hsba\").getChannelValue(\"saturation\").toString();\n    case \"lightness\":\n      return color.toFormat(\"hsla\").getChannelValue(\"lightness\").toString();\n    case \"brightness\":\n      return color.toFormat(\"hsba\").getChannelValue(\"brightness\").toString();\n    case \"red\":\n    case \"green\":\n    case \"blue\":\n      return color.toFormat(\"rgba\").getChannelValue(channel).toString();\n    default:\n      return color.getChannelValue(channel).toString();\n  }\n}\nfunction getChannelRange(color, channel) {\n  switch (channel) {\n    case \"hex\":\n      const minColor = (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.parseColor)(\"#000000\");\n      const maxColor = (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.parseColor)(\"#FFFFFF\");\n      return {\n        minValue: minColor.toHexInt(),\n        maxValue: maxColor.toHexInt(),\n        pageSize: 10,\n        step: 1\n      };\n    case \"css\":\n      return void 0;\n    case \"hue\":\n    case \"saturation\":\n    case \"lightness\":\n      return color.toFormat(\"hsla\").getChannelRange(channel);\n    case \"brightness\":\n      return color.toFormat(\"hsba\").getChannelRange(channel);\n    case \"red\":\n    case \"green\":\n    case \"blue\":\n      return color.toFormat(\"rgba\").getChannelRange(channel);\n    default:\n      return color.getChannelRange(channel);\n  }\n}\n\n// src/utils/get-slider-background.ts\nfunction getSliderBackgroundDirection(orientation, dir) {\n  if (orientation === \"vertical\") {\n    return \"top\";\n  } else if (dir === \"ltr\") {\n    return \"right\";\n  } else {\n    return \"left\";\n  }\n}\nvar getSliderBackground = (props) => {\n  const { channel, value, dir, orientation } = props;\n  const bgDirection = getSliderBackgroundDirection(orientation, dir);\n  const { minValue, maxValue } = value.getChannelRange(channel);\n  switch (channel) {\n    case \"hue\":\n      return `linear-gradient(to ${bgDirection}, rgb(255, 0, 0) 0%, rgb(255, 255, 0) 17%, rgb(0, 255, 0) 33%, rgb(0, 255, 255) 50%, rgb(0, 0, 255) 67%, rgb(255, 0, 255) 83%, rgb(255, 0, 0) 100%)`;\n    case \"lightness\": {\n      let start = value.withChannelValue(channel, minValue).toString(\"css\");\n      let middle = value.withChannelValue(channel, (maxValue - minValue) / 2).toString(\"css\");\n      let end = value.withChannelValue(channel, maxValue).toString(\"css\");\n      return `linear-gradient(to ${bgDirection}, ${start}, ${middle}, ${end})`;\n    }\n    case \"saturation\":\n    case \"brightness\":\n    case \"red\":\n    case \"green\":\n    case \"blue\":\n    case \"alpha\": {\n      let start = value.withChannelValue(channel, minValue).toString(\"css\");\n      let end = value.withChannelValue(channel, maxValue).toString(\"css\");\n      return `linear-gradient(to ${bgDirection}, ${start}, ${end})`;\n    }\n    default:\n      throw new Error(\"Unknown color channel: \" + channel);\n  }\n};\n\n// src/color-picker.connect.ts\nfunction connect(state, send, normalize) {\n  const value = state.context.value;\n  const areaValue = state.context.areaValue;\n  const valueAsString = state.context.valueAsString;\n  const disabled = state.context.isDisabled;\n  const interactive = state.context.isInteractive;\n  const dragging = state.hasTag(\"dragging\");\n  const open = state.hasTag(\"open\");\n  const focused = state.hasTag(\"focused\");\n  const getAreaChannels = (props) => {\n    const channels = areaValue.getChannels();\n    return {\n      xChannel: props.xChannel ?? channels[1],\n      yChannel: props.yChannel ?? channels[2]\n    };\n  };\n  const currentPlacement = state.context.currentPlacement;\n  const popperStyles = (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacementStyles)({\n    ...state.context.positioning,\n    placement: currentPlacement\n  });\n  function getSwatchTriggerState(props) {\n    const color = (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.normalizeColor)(props.value).toFormat(state.context.format);\n    return {\n      value: color,\n      valueAsString: color.toString(\"hex\"),\n      checked: color.isEqual(value),\n      disabled: props.disabled || !interactive\n    };\n  }\n  return {\n    dragging,\n    open,\n    valueAsString,\n    value,\n    setOpen(nextOpen) {\n      if (nextOpen === open) return;\n      send({ type: nextOpen ? \"OPEN\" : \"CLOSE\" });\n    },\n    setValue(value2) {\n      send({ type: \"VALUE.SET\", value: (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.normalizeColor)(value2), src: \"set-color\" });\n    },\n    getChannelValue(channel) {\n      return getChannelValue(value, channel);\n    },\n    getChannelValueText(channel, locale) {\n      return value.formatChannelValue(channel, locale);\n    },\n    setChannelValue(channel, channelValue) {\n      const color = value.withChannelValue(channel, channelValue);\n      send({ type: \"VALUE.SET\", value: color, src: \"set-channel\" });\n    },\n    format: state.context.format,\n    setFormat(format) {\n      const formatValue = value.toFormat(format);\n      send({ type: \"VALUE.SET\", value: formatValue, src: \"set-format\" });\n    },\n    alpha: value.getChannelValue(\"alpha\"),\n    setAlpha(alphaValue) {\n      const color = value.withChannelValue(\"alpha\", alphaValue);\n      send({ type: \"VALUE.SET\", value: color, src: \"set-alpha\" });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: state.context.dir,\n        id: dom.getRootId(state.context),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.readOnly),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.invalid),\n        style: {\n          \"--value\": value.toString(\"css\")\n        }\n      });\n    },\n    getLabelProps() {\n      return normalize.element({\n        ...parts.label.attrs,\n        dir: state.context.dir,\n        id: dom.getLabelId(state.context),\n        htmlFor: dom.getHiddenInputId(state.context),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.readOnly),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.invalid),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n        onClick(event) {\n          event.preventDefault();\n          const inputEl = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.query)(dom.getControlEl(state.context), \"[data-channel=hex]\");\n          inputEl?.focus({ preventScroll: true });\n        }\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        id: dom.getControlId(state.context),\n        dir: state.context.dir,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.readOnly),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.invalid),\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused)\n      });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        id: dom.getTriggerId(state.context),\n        dir: state.context.dir,\n        disabled,\n        \"aria-label\": `select color. current color is ${valueAsString}`,\n        \"aria-controls\": dom.getContentId(state.context),\n        \"aria-labelledby\": dom.getLabelId(state.context),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.readOnly),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.invalid),\n        \"data-placement\": currentPlacement,\n        \"aria-expanded\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(open),\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n        type: \"button\",\n        onClick() {\n          if (!interactive) return;\n          send({ type: \"TRIGGER.CLICK\" });\n        },\n        onBlur() {\n          if (!interactive) return;\n          send({ type: \"TRIGGER.BLUR\" });\n        },\n        style: {\n          position: \"relative\"\n        }\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        ...parts.positioner.attrs,\n        id: dom.getPositionerId(state.context),\n        dir: state.context.dir,\n        style: popperStyles.floating\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        id: dom.getContentId(state.context),\n        dir: state.context.dir,\n        \"data-placement\": currentPlacement,\n        \"data-state\": open ? \"open\" : \"closed\",\n        hidden: !open\n      });\n    },\n    getValueTextProps() {\n      return normalize.element({\n        ...parts.valueText.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused)\n      });\n    },\n    getAreaProps(props = {}) {\n      const { xChannel, yChannel } = getAreaChannels(props);\n      const { areaStyles } = (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.getColorAreaGradient)(areaValue, {\n        xChannel,\n        yChannel,\n        dir: state.context.dir\n      });\n      return normalize.element({\n        ...parts.area.attrs,\n        id: dom.getAreaId(state.context),\n        role: \"group\",\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.invalid),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.readOnly),\n        onPointerDown(event) {\n          if (!interactive) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isLeftClick)(event)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isModifierKey)(event)) return;\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventPoint)(event);\n          const channel = { xChannel, yChannel };\n          send({ type: \"AREA.POINTER_DOWN\", point, channel, id: \"area\" });\n          event.preventDefault();\n        },\n        style: {\n          position: \"relative\",\n          touchAction: \"none\",\n          forcedColorAdjust: \"none\",\n          ...areaStyles\n        }\n      });\n    },\n    getAreaBackgroundProps(props = {}) {\n      const { xChannel, yChannel } = getAreaChannels(props);\n      const { areaGradientStyles } = (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.getColorAreaGradient)(areaValue, {\n        xChannel,\n        yChannel,\n        dir: state.context.dir\n      });\n      return normalize.element({\n        ...parts.areaBackground.attrs,\n        id: dom.getAreaGradientId(state.context),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.invalid),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.readOnly),\n        style: {\n          position: \"relative\",\n          touchAction: \"none\",\n          forcedColorAdjust: \"none\",\n          ...areaGradientStyles\n        }\n      });\n    },\n    getAreaThumbProps(props = {}) {\n      const { xChannel, yChannel } = getAreaChannels(props);\n      const channel = { xChannel, yChannel };\n      const xPercent = areaValue.getChannelValuePercent(xChannel);\n      const yPercent = 1 - areaValue.getChannelValuePercent(yChannel);\n      const xValue = areaValue.getChannelValue(xChannel);\n      const yValue = areaValue.getChannelValue(yChannel);\n      const color = areaValue.withChannelValue(\"alpha\", 1).toString(\"css\");\n      return normalize.element({\n        ...parts.areaThumb.attrs,\n        id: dom.getAreaThumbId(state.context),\n        dir: state.context.dir,\n        tabIndex: disabled ? void 0 : 0,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.invalid),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.readOnly),\n        role: \"slider\",\n        \"aria-valuemin\": 0,\n        \"aria-valuemax\": 100,\n        \"aria-valuenow\": xValue,\n        \"aria-label\": `${xChannel} and ${yChannel}`,\n        \"aria-roledescription\": \"2d slider\",\n        \"aria-valuetext\": `${xChannel} ${xValue}, ${yChannel} ${yValue}`,\n        style: {\n          position: \"absolute\",\n          left: `${xPercent * 100}%`,\n          top: `${yPercent * 100}%`,\n          transform: \"translate(-50%, -50%)\",\n          touchAction: \"none\",\n          forcedColorAdjust: \"none\",\n          \"--color\": color,\n          background: color\n        },\n        onFocus() {\n          if (!interactive) return;\n          send({ type: \"AREA.FOCUS\", id: \"area\", channel });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          const step = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventStep)(event);\n          const keyMap = {\n            ArrowUp() {\n              send({ type: \"AREA.ARROW_UP\", channel, step });\n            },\n            ArrowDown() {\n              send({ type: \"AREA.ARROW_DOWN\", channel, step });\n            },\n            ArrowLeft() {\n              send({ type: \"AREA.ARROW_LEFT\", channel, step });\n            },\n            ArrowRight() {\n              send({ type: \"AREA.ARROW_RIGHT\", channel, step });\n            },\n            PageUp() {\n              send({ type: \"AREA.PAGE_UP\", channel, step });\n            },\n            PageDown() {\n              send({ type: \"AREA.PAGE_DOWN\", channel, step });\n            },\n            Escape(event2) {\n              event2.stopPropagation();\n            }\n          };\n          const exec = keyMap[(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventKey)(event, state.context)];\n          if (exec) {\n            exec(event);\n            event.preventDefault();\n          }\n        }\n      });\n    },\n    getTransparencyGridProps(props = {}) {\n      const { size = \"12px\" } = props;\n      return normalize.element({\n        ...parts.transparencyGrid.attrs,\n        style: {\n          \"--size\": size,\n          width: \"100%\",\n          height: \"100%\",\n          position: \"absolute\",\n          backgroundColor: \"#fff\",\n          backgroundImage: \"conic-gradient(#eeeeee 0 25%, transparent 0 50%, #eeeeee 0 75%, transparent 0)\",\n          backgroundSize: \"var(--size) var(--size)\",\n          inset: \"0px\",\n          zIndex: \"auto\",\n          pointerEvents: \"none\"\n        }\n      });\n    },\n    getChannelSliderProps(props) {\n      const { orientation = \"horizontal\", channel, format } = props;\n      return normalize.element({\n        ...parts.channelSlider.attrs,\n        \"data-channel\": channel,\n        \"data-orientation\": orientation,\n        role: \"presentation\",\n        onPointerDown(event) {\n          if (!interactive) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isLeftClick)(event)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isModifierKey)(event)) return;\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventPoint)(event);\n          send({ type: \"CHANNEL_SLIDER.POINTER_DOWN\", channel, format, point, id: channel, orientation });\n          event.preventDefault();\n        },\n        style: {\n          position: \"relative\",\n          touchAction: \"none\"\n        }\n      });\n    },\n    getChannelSliderTrackProps(props) {\n      const { orientation = \"horizontal\", channel, format } = props;\n      const normalizedValue = format ? value.toFormat(format) : areaValue;\n      return normalize.element({\n        ...parts.channelSliderTrack.attrs,\n        id: dom.getChannelSliderTrackId(state.context, channel),\n        role: \"group\",\n        \"data-channel\": channel,\n        \"data-orientation\": orientation,\n        style: {\n          position: \"relative\",\n          forcedColorAdjust: \"none\",\n          backgroundImage: getSliderBackground({\n            orientation,\n            channel,\n            dir: state.context.dir,\n            value: normalizedValue\n          })\n        }\n      });\n    },\n    getChannelSliderLabelProps(props) {\n      const { channel } = props;\n      return normalize.element({\n        ...parts.channelSliderLabel.attrs,\n        \"data-channel\": channel,\n        onClick(event) {\n          if (!interactive) return;\n          event.preventDefault();\n          const thumbId = dom.getChannelSliderThumbId(state.context, channel);\n          dom.getById(state.context, thumbId)?.focus({ preventScroll: true });\n        },\n        style: {\n          userSelect: \"none\",\n          WebkitUserSelect: \"none\"\n        }\n      });\n    },\n    getChannelSliderValueTextProps(props) {\n      return normalize.element({\n        ...parts.channelSliderValueText.attrs,\n        \"data-channel\": props.channel\n      });\n    },\n    getChannelSliderThumbProps(props) {\n      const { orientation = \"horizontal\", channel, format } = props;\n      const normalizedValue = format ? value.toFormat(format) : areaValue;\n      const channelRange = normalizedValue.getChannelRange(channel);\n      const channelValue = normalizedValue.getChannelValue(channel);\n      const offset = (channelValue - channelRange.minValue) / (channelRange.maxValue - channelRange.minValue);\n      const placementStyles = orientation === \"horizontal\" ? { left: `${offset * 100}%`, top: \"50%\" } : { top: `${offset * 100}%`, left: \"50%\" };\n      return normalize.element({\n        ...parts.channelSliderThumb.attrs,\n        id: dom.getChannelSliderThumbId(state.context, channel),\n        role: \"slider\",\n        \"aria-label\": channel,\n        tabIndex: disabled ? void 0 : 0,\n        \"data-channel\": channel,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-orientation\": orientation,\n        \"aria-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"aria-orientation\": orientation,\n        \"aria-valuemax\": channelRange.maxValue,\n        \"aria-valuemin\": channelRange.minValue,\n        \"aria-valuenow\": channelValue,\n        \"aria-valuetext\": `${channel} ${channelValue}`,\n        style: {\n          forcedColorAdjust: \"none\",\n          position: \"absolute\",\n          background: getChannelDisplayColor(areaValue, channel).toString(\"css\"),\n          ...placementStyles\n        },\n        onFocus() {\n          if (!interactive) return;\n          send({ type: \"CHANNEL_SLIDER.FOCUS\", channel });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          const step = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventStep)(event) * channelRange.step;\n          const keyMap = {\n            ArrowUp() {\n              send({ type: \"CHANNEL_SLIDER.ARROW_UP\", channel, step });\n            },\n            ArrowDown() {\n              send({ type: \"CHANNEL_SLIDER.ARROW_DOWN\", channel, step });\n            },\n            ArrowLeft() {\n              send({ type: \"CHANNEL_SLIDER.ARROW_LEFT\", channel, step });\n            },\n            ArrowRight() {\n              send({ type: \"CHANNEL_SLIDER.ARROW_RIGHT\", channel, step });\n            },\n            PageUp() {\n              send({ type: \"CHANNEL_SLIDER.PAGE_UP\", channel });\n            },\n            PageDown() {\n              send({ type: \"CHANNEL_SLIDER.PAGE_DOWN\", channel });\n            },\n            Home() {\n              send({ type: \"CHANNEL_SLIDER.HOME\", channel });\n            },\n            End() {\n              send({ type: \"CHANNEL_SLIDER.END\", channel });\n            },\n            Escape(event2) {\n              event2.stopPropagation();\n            }\n          };\n          const exec = keyMap[(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventKey)(event, state.context)];\n          if (exec) {\n            exec(event);\n            event.preventDefault();\n          }\n        }\n      });\n    },\n    getChannelInputProps(props) {\n      const { channel } = props;\n      const isTextField = channel === \"hex\" || channel === \"css\";\n      const channelRange = getChannelRange(value, channel);\n      return normalize.input({\n        ...parts.channelInput.attrs,\n        dir: state.context.dir,\n        type: isTextField ? \"text\" : \"number\",\n        \"data-channel\": channel,\n        \"aria-label\": channel,\n        spellCheck: false,\n        autoComplete: \"off\",\n        disabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.invalid),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.readOnly),\n        readOnly: state.context.readOnly,\n        defaultValue: getChannelValue(value, channel),\n        min: channelRange?.minValue,\n        max: channelRange?.maxValue,\n        step: channelRange?.step,\n        onBeforeInput(event) {\n          if (isTextField || !interactive) return;\n          const value2 = event.currentTarget.value;\n          if (value2.match(/[^0-9.]/g)) {\n            event.preventDefault();\n          }\n        },\n        onFocus(event) {\n          if (!interactive) return;\n          send({ type: \"CHANNEL_INPUT.FOCUS\", channel });\n          event.currentTarget.select();\n        },\n        onBlur(event) {\n          if (!interactive) return;\n          const value2 = isTextField ? event.currentTarget.value : event.currentTarget.valueAsNumber;\n          send({ type: \"CHANNEL_INPUT.BLUR\", channel, value: value2, isTextField });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          if (event.key === \"Enter\") {\n            const value2 = isTextField ? event.currentTarget.value : event.currentTarget.valueAsNumber;\n            send({ type: \"CHANNEL_INPUT.CHANGE\", channel, value: value2, isTextField });\n            event.preventDefault();\n          }\n        },\n        style: {\n          appearance: \"none\",\n          WebkitAppearance: \"none\",\n          MozAppearance: \"textfield\"\n        }\n      });\n    },\n    getHiddenInputProps() {\n      return normalize.input({\n        type: \"text\",\n        disabled,\n        name: state.context.name,\n        tabIndex: -1,\n        readOnly: state.context.readOnly,\n        required: state.context.required,\n        id: dom.getHiddenInputId(state.context),\n        style: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.visuallyHiddenStyle,\n        defaultValue: valueAsString\n      });\n    },\n    getEyeDropperTriggerProps() {\n      return normalize.button({\n        ...parts.eyeDropperTrigger.attrs,\n        type: \"button\",\n        dir: state.context.dir,\n        disabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.invalid),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.readOnly),\n        \"aria-label\": \"Pick a color from the screen\",\n        onClick() {\n          if (!interactive) return;\n          send(\"EYEDROPPER.CLICK\");\n        }\n      });\n    },\n    getSwatchGroupProps() {\n      return normalize.element({\n        ...parts.swatchGroup.attrs,\n        role: \"group\"\n      });\n    },\n    getSwatchTriggerState,\n    getSwatchTriggerProps(props) {\n      const swatchState = getSwatchTriggerState(props);\n      return normalize.button({\n        ...parts.swatchTrigger.attrs,\n        disabled: swatchState.disabled,\n        dir: state.context.dir,\n        type: \"button\",\n        \"aria-label\": `select ${swatchState.valueAsString} as the color`,\n        \"data-state\": swatchState.checked ? \"checked\" : \"unchecked\",\n        \"data-value\": swatchState.valueAsString,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(swatchState.disabled),\n        onClick() {\n          if (swatchState.disabled) return;\n          send({ type: \"SWATCH_TRIGGER.CLICK\", value: swatchState.value });\n        },\n        style: {\n          \"--color\": swatchState.valueAsString,\n          position: \"relative\"\n        }\n      });\n    },\n    getSwatchIndicatorProps(props) {\n      const swatchState = getSwatchTriggerState(props);\n      return normalize.element({\n        ...parts.swatchIndicator.attrs,\n        dir: state.context.dir,\n        hidden: !swatchState.checked\n      });\n    },\n    getSwatchProps(props) {\n      const { respectAlpha = true } = props;\n      const swatchState = getSwatchTriggerState(props);\n      const color = swatchState.value.toString(respectAlpha ? \"css\" : \"hex\");\n      return normalize.element({\n        ...parts.swatch.attrs,\n        dir: state.context.dir,\n        \"data-state\": swatchState.checked ? \"checked\" : \"unchecked\",\n        \"data-value\": swatchState.valueAsString,\n        style: {\n          \"--color\": color,\n          position: \"relative\",\n          background: color\n        }\n      });\n    },\n    getFormatTriggerProps() {\n      return normalize.button({\n        ...parts.formatTrigger.attrs,\n        dir: state.context.dir,\n        type: \"button\",\n        \"aria-label\": `change color format to ${getNextFormat(state.context.format)}`,\n        onClick(event) {\n          if (event.currentTarget.disabled) return;\n          const nextFormat = getNextFormat(state.context.format);\n          send({ type: \"FORMAT.SET\", format: nextFormat, src: \"format-trigger\" });\n        }\n      });\n    },\n    getFormatSelectProps() {\n      return normalize.select({\n        ...parts.formatSelect.attrs,\n        \"aria-label\": \"change color format\",\n        dir: state.context.dir,\n        defaultValue: state.context.format,\n        disabled,\n        onChange(event) {\n          const format = assertFormat(event.currentTarget.value);\n          send({ type: \"FORMAT.SET\", format, src: \"format-select\" });\n        }\n      });\n    }\n  };\n}\nvar formats = [\"hsba\", \"hsla\", \"rgba\"];\nvar formatRegex = new RegExp(`^(${formats.join(\"|\")})$`);\nfunction getNextFormat(format) {\n  const index = formats.indexOf(format);\n  return formats[index + 1] ?? formats[0];\n}\nfunction assertFormat(format) {\n  if (formatRegex.test(format)) return format;\n  throw new Error(`Unsupported color format: ${format}`);\n}\nvar parse = (colorString) => {\n  return (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.parseColor)(colorString);\n};\n\n// src/color-picker.machine.ts\nvar { and } = _zag_js_core__WEBPACK_IMPORTED_MODULE_4__.guards;\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_5__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_4__.createMachine)(\n    {\n      id: \"color-picker\",\n      initial: ctx.open ? \"open\" : \"idle\",\n      context: {\n        dir: \"ltr\",\n        value: parse(\"#000000\"),\n        format: \"rgba\",\n        disabled: false,\n        closeOnSelect: false,\n        openAutoFocus: true,\n        ...ctx,\n        activeId: null,\n        activeChannel: null,\n        activeOrientation: null,\n        fieldsetDisabled: false,\n        restoreFocus: true,\n        positioning: {\n          ...ctx.positioning,\n          placement: \"bottom\"\n        }\n      },\n      computed: {\n        isRtl: (ctx2) => ctx2.dir === \"rtl\",\n        isDisabled: (ctx2) => !!ctx2.disabled || ctx2.fieldsetDisabled,\n        isInteractive: (ctx2) => !(ctx2.isDisabled || ctx2.readOnly),\n        valueAsString: (ctx2) => ctx2.value.toString(ctx2.format),\n        areaValue: (ctx2) => {\n          const format = ctx2.format.startsWith(\"hsl\") ? \"hsla\" : \"hsba\";\n          return ctx2.value.toFormat(format);\n        }\n      },\n      activities: [\"trackFormControl\"],\n      watch: {\n        value: [\"syncInputElements\"],\n        format: [\"syncFormatSelectElement\"],\n        open: [\"toggleVisibility\"]\n      },\n      on: {\n        \"VALUE.SET\": {\n          actions: [\"setValue\"]\n        },\n        \"FORMAT.SET\": {\n          actions: [\"setFormat\"]\n        },\n        \"CHANNEL_INPUT.CHANGE\": {\n          actions: [\"setChannelColorFromInput\"]\n        },\n        \"EYEDROPPER.CLICK\": {\n          actions: [\"openEyeDropper\"]\n        },\n        \"SWATCH_TRIGGER.CLICK\": {\n          actions: [\"setValue\"]\n        }\n      },\n      states: {\n        idle: {\n          tags: [\"closed\"],\n          on: {\n            \"CONTROLLED.OPEN\": {\n              target: \"open\",\n              actions: [\"setInitialFocus\"]\n            },\n            OPEN: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\", \"setInitialFocus\"]\n              }\n            ],\n            \"TRIGGER.CLICK\": [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\", \"setInitialFocus\"]\n              }\n            ],\n            \"CHANNEL_INPUT.FOCUS\": {\n              target: \"focused\",\n              actions: [\"setActiveChannel\"]\n            }\n          }\n        },\n        focused: {\n          tags: [\"closed\", \"focused\"],\n          on: {\n            \"CONTROLLED.OPEN\": {\n              target: \"open\",\n              actions: [\"setInitialFocus\"]\n            },\n            OPEN: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\", \"setInitialFocus\"]\n              }\n            ],\n            \"TRIGGER.CLICK\": [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\", \"setInitialFocus\"]\n              }\n            ],\n            \"CHANNEL_INPUT.FOCUS\": {\n              actions: [\"setActiveChannel\"]\n            },\n            \"CHANNEL_INPUT.BLUR\": {\n              target: \"idle\",\n              actions: [\"setChannelColorFromInput\"]\n            },\n            \"TRIGGER.BLUR\": {\n              target: \"idle\"\n            }\n          }\n        },\n        open: {\n          tags: [\"open\"],\n          activities: [\"trackPositioning\", \"trackDismissableElement\"],\n          on: {\n            \"CONTROLLED.CLOSE\": [\n              {\n                guard: \"shouldRestoreFocus\",\n                target: \"focused\",\n                actions: [\"setReturnFocus\"]\n              },\n              {\n                target: \"idle\"\n              }\n            ],\n            \"TRIGGER.CLICK\": [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                target: \"idle\",\n                actions: [\"invokeOnClose\"]\n              }\n            ],\n            \"AREA.POINTER_DOWN\": {\n              target: \"open:dragging\",\n              actions: [\"setActiveChannel\", \"setAreaColorFromPoint\", \"focusAreaThumb\"]\n            },\n            \"AREA.FOCUS\": {\n              actions: [\"setActiveChannel\"]\n            },\n            \"CHANNEL_SLIDER.POINTER_DOWN\": {\n              target: \"open:dragging\",\n              actions: [\"setActiveChannel\", \"setChannelColorFromPoint\", \"focusChannelThumb\"]\n            },\n            \"CHANNEL_SLIDER.FOCUS\": {\n              actions: [\"setActiveChannel\"]\n            },\n            \"AREA.ARROW_LEFT\": {\n              actions: [\"decrementAreaXChannel\"]\n            },\n            \"AREA.ARROW_RIGHT\": {\n              actions: [\"incrementAreaXChannel\"]\n            },\n            \"AREA.ARROW_UP\": {\n              actions: [\"incrementAreaYChannel\"]\n            },\n            \"AREA.ARROW_DOWN\": {\n              actions: [\"decrementAreaYChannel\"]\n            },\n            \"AREA.PAGE_UP\": {\n              actions: [\"incrementAreaXChannel\"]\n            },\n            \"AREA.PAGE_DOWN\": {\n              actions: [\"decrementAreaXChannel\"]\n            },\n            \"CHANNEL_SLIDER.ARROW_LEFT\": {\n              actions: [\"decrementChannel\"]\n            },\n            \"CHANNEL_SLIDER.ARROW_RIGHT\": {\n              actions: [\"incrementChannel\"]\n            },\n            \"CHANNEL_SLIDER.ARROW_UP\": {\n              actions: [\"incrementChannel\"]\n            },\n            \"CHANNEL_SLIDER.ARROW_DOWN\": {\n              actions: [\"decrementChannel\"]\n            },\n            \"CHANNEL_SLIDER.PAGE_UP\": {\n              actions: [\"incrementChannel\"]\n            },\n            \"CHANNEL_SLIDER.PAGE_DOWN\": {\n              actions: [\"decrementChannel\"]\n            },\n            \"CHANNEL_SLIDER.HOME\": {\n              actions: [\"setChannelToMin\"]\n            },\n            \"CHANNEL_SLIDER.END\": {\n              actions: [\"setChannelToMax\"]\n            },\n            \"CHANNEL_INPUT.BLUR\": {\n              actions: [\"setChannelColorFromInput\"]\n            },\n            INTERACT_OUTSIDE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                guard: \"shouldRestoreFocus\",\n                target: \"focused\",\n                actions: [\"invokeOnClose\", \"setReturnFocus\"]\n              },\n              {\n                target: \"idle\",\n                actions: [\"invokeOnClose\"]\n              }\n            ],\n            CLOSE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                target: \"idle\",\n                actions: [\"invokeOnClose\"]\n              }\n            ],\n            \"SWATCH_TRIGGER.CLICK\": [\n              {\n                guard: and(\"isOpenControlled\", \"closeOnSelect\"),\n                actions: [\"setValue\", \"invokeOnClose\"]\n              },\n              {\n                guard: \"closeOnSelect\",\n                target: \"focused\",\n                actions: [\"setValue\", \"invokeOnClose\", \"setReturnFocus\"]\n              },\n              {\n                actions: [\"setValue\"]\n              }\n            ]\n          }\n        },\n        \"open:dragging\": {\n          tags: [\"open\"],\n          exit: [\"clearActiveChannel\"],\n          activities: [\"trackPointerMove\", \"disableTextSelection\", \"trackPositioning\", \"trackDismissableElement\"],\n          on: {\n            \"CONTROLLED.CLOSE\": [\n              {\n                guard: \"shouldRestoreFocus\",\n                target: \"focused\",\n                actions: [\"setReturnFocus\"]\n              },\n              {\n                target: \"idle\"\n              }\n            ],\n            \"AREA.POINTER_MOVE\": {\n              actions: [\"setAreaColorFromPoint\", \"focusAreaThumb\"]\n            },\n            \"AREA.POINTER_UP\": {\n              target: \"open\",\n              actions: [\"invokeOnChangeEnd\"]\n            },\n            \"CHANNEL_SLIDER.POINTER_MOVE\": {\n              actions: [\"setChannelColorFromPoint\", \"focusChannelThumb\"]\n            },\n            \"CHANNEL_SLIDER.POINTER_UP\": {\n              target: \"open\",\n              actions: [\"invokeOnChangeEnd\"]\n            },\n            INTERACT_OUTSIDE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                guard: \"shouldRestoreFocus\",\n                target: \"focused\",\n                actions: [\"invokeOnClose\", \"setReturnFocus\"]\n              },\n              {\n                target: \"idle\",\n                actions: [\"invokeOnClose\"]\n              }\n            ],\n            CLOSE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                target: \"idle\",\n                actions: [\"invokeOnClose\"]\n              }\n            ]\n          }\n        }\n      }\n    },\n    {\n      guards: {\n        closeOnSelect: (ctx2) => !!ctx2.closeOnSelect,\n        isOpenControlled: (ctx2) => !!ctx2[\"open.controlled\"],\n        shouldRestoreFocus: (ctx2) => !!ctx2.restoreFocus\n      },\n      activities: {\n        trackPositioning(ctx2) {\n          ctx2.currentPlacement || (ctx2.currentPlacement = ctx2.positioning.placement);\n          const anchorEl = dom.getTriggerEl(ctx2);\n          const getPositionerEl = () => dom.getPositionerEl(ctx2);\n          return (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacement)(anchorEl, getPositionerEl, {\n            ...ctx2.positioning,\n            defer: true,\n            onComplete(data) {\n              ctx2.currentPlacement = data.placement;\n            }\n          });\n        },\n        trackDismissableElement(ctx2, _evt, { send }) {\n          const getContentEl = () => dom.getContentEl(ctx2);\n          return (0,_zag_js_dismissable__WEBPACK_IMPORTED_MODULE_6__.trackDismissableElement)(getContentEl, {\n            exclude: dom.getTriggerEl(ctx2),\n            defer: true,\n            onInteractOutside(event) {\n              ctx2.onInteractOutside?.(event);\n              if (event.defaultPrevented) return;\n              ctx2.restoreFocus = !(event.detail.focusable || event.detail.contextmenu);\n            },\n            onPointerDownOutside: ctx2.onPointerDownOutside,\n            onFocusOutside: ctx2.onFocusOutside,\n            onDismiss() {\n              send({ type: \"INTERACT_OUTSIDE\" });\n            }\n          });\n        },\n        trackFormControl(ctx2, _evt, { send, initialContext }) {\n          const inputEl = dom.getHiddenInputEl(ctx2);\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackFormControl)(inputEl, {\n            onFieldsetDisabledChange(disabled) {\n              ctx2.fieldsetDisabled = disabled;\n            },\n            onFormReset() {\n              send({ type: \"VALUE.SET\", value: initialContext.value, src: \"form.reset\" });\n            }\n          });\n        },\n        trackPointerMove(ctx2, evt, { send }) {\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackPointerMove)(dom.getDoc(ctx2), {\n            onPointerMove({ point }) {\n              const type = ctx2.activeId === \"area\" ? \"AREA.POINTER_MOVE\" : \"CHANNEL_SLIDER.POINTER_MOVE\";\n              send({ type, point, format: evt.format });\n            },\n            onPointerUp() {\n              const type = ctx2.activeId === \"area\" ? \"AREA.POINTER_UP\" : \"CHANNEL_SLIDER.POINTER_UP\";\n              send({ type });\n            }\n          });\n        },\n        disableTextSelection(ctx2) {\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.disableTextSelection)({ doc: dom.getDoc(ctx2), target: dom.getContentEl(ctx2) });\n        }\n      },\n      actions: {\n        openEyeDropper(ctx2) {\n          const isSupported = \"EyeDropper\" in dom.getWin(ctx2);\n          if (!isSupported) return;\n          const win = dom.getWin(ctx2);\n          const picker = new win.EyeDropper();\n          picker.open().then(({ sRGBHex }) => {\n            const format = ctx2.value.getFormat();\n            const color = (0,_zag_js_color_utils__WEBPACK_IMPORTED_MODULE_2__.parseColor)(sRGBHex).toFormat(format);\n            set.value(ctx2, color);\n            ctx2.onValueChangeEnd?.({ value: ctx2.value, valueAsString: ctx2.valueAsString });\n          }).catch(() => void 0);\n        },\n        setActiveChannel(ctx2, evt) {\n          ctx2.activeId = evt.id;\n          if (evt.channel) ctx2.activeChannel = evt.channel;\n          if (evt.orientation) ctx2.activeOrientation = evt.orientation;\n        },\n        clearActiveChannel(ctx2) {\n          ctx2.activeChannel = null;\n          ctx2.activeId = null;\n          ctx2.activeOrientation = null;\n        },\n        setAreaColorFromPoint(ctx2, evt) {\n          const normalizedValue = evt.format ? ctx2.value.toFormat(evt.format) : ctx2.areaValue;\n          const { xChannel, yChannel } = evt.channel || ctx2.activeChannel;\n          const percent = dom.getAreaValueFromPoint(ctx2, evt.point);\n          if (!percent) return;\n          const xValue = normalizedValue.getChannelPercentValue(xChannel, percent.x);\n          const yValue = normalizedValue.getChannelPercentValue(yChannel, 1 - percent.y);\n          const color = normalizedValue.withChannelValue(xChannel, xValue).withChannelValue(yChannel, yValue);\n          set.value(ctx2, color);\n        },\n        setChannelColorFromPoint(ctx2, evt) {\n          const channel = evt.channel || ctx2.activeId;\n          const normalizedValue = evt.format ? ctx2.value.toFormat(evt.format) : ctx2.areaValue;\n          const percent = dom.getChannelSliderValueFromPoint(ctx2, evt.point, channel);\n          if (!percent) return;\n          const orientation = ctx2.activeOrientation || \"horizontal\";\n          const channelPercent = orientation === \"horizontal\" ? percent.x : percent.y;\n          const value = normalizedValue.getChannelPercentValue(channel, channelPercent);\n          const color = normalizedValue.withChannelValue(channel, value);\n          set.value(ctx2, color);\n        },\n        setValue(ctx2, evt) {\n          set.value(ctx2, evt.value);\n        },\n        setFormat(ctx2, evt) {\n          set.format(ctx2, evt.format);\n        },\n        syncInputElements(ctx2) {\n          sync.inputs(ctx2);\n        },\n        invokeOnChangeEnd(ctx2) {\n          invoke.changeEnd(ctx2);\n        },\n        setChannelColorFromInput(ctx2, evt) {\n          const { channel, isTextField, value } = evt;\n          const currentAlpha = ctx2.value.getChannelValue(\"alpha\");\n          let color;\n          if (channel === \"alpha\") {\n            let valueAsNumber = parseFloat(value);\n            valueAsNumber = Number.isNaN(valueAsNumber) ? currentAlpha : valueAsNumber;\n            color = ctx2.value.withChannelValue(\"alpha\", valueAsNumber);\n          } else if (isTextField) {\n            color = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_5__.tryCatch)(\n              () => parse(value).withChannelValue(\"alpha\", currentAlpha),\n              () => ctx2.value\n            );\n          } else {\n            const current = ctx2.value.toFormat(ctx2.format);\n            const valueAsNumber = Number.isNaN(value) ? current.getChannelValue(channel) : value;\n            color = current.withChannelValue(channel, valueAsNumber);\n          }\n          sync.inputs(ctx2, color);\n          set.value(ctx2, color);\n        },\n        incrementChannel(ctx2, evt) {\n          const color = ctx2.value.incrementChannel(evt.channel, evt.step);\n          set.value(ctx2, color);\n        },\n        decrementChannel(ctx2, evt) {\n          const color = ctx2.value.decrementChannel(evt.channel, evt.step);\n          set.value(ctx2, color);\n        },\n        incrementAreaXChannel(ctx2, evt) {\n          const { xChannel } = evt.channel;\n          const color = ctx2.areaValue.incrementChannel(xChannel, evt.step);\n          set.value(ctx2, color);\n        },\n        decrementAreaXChannel(ctx2, evt) {\n          const { xChannel } = evt.channel;\n          const color = ctx2.areaValue.decrementChannel(xChannel, evt.step);\n          set.value(ctx2, color);\n        },\n        incrementAreaYChannel(ctx2, evt) {\n          const { yChannel } = evt.channel;\n          const color = ctx2.areaValue.incrementChannel(yChannel, evt.step);\n          set.value(ctx2, color);\n        },\n        decrementAreaYChannel(ctx2, evt) {\n          const { yChannel } = evt.channel;\n          const color = ctx2.areaValue.decrementChannel(yChannel, evt.step);\n          set.value(ctx2, color);\n        },\n        setChannelToMax(ctx2, evt) {\n          const range = ctx2.value.getChannelRange(evt.channel);\n          const color = ctx2.value.withChannelValue(evt.channel, range.maxValue);\n          set.value(ctx2, color);\n        },\n        setChannelToMin(ctx2, evt) {\n          const range = ctx2.value.getChannelRange(evt.channel);\n          const color = ctx2.value.withChannelValue(evt.channel, range.minValue);\n          set.value(ctx2, color);\n        },\n        focusAreaThumb(ctx2) {\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            dom.getAreaThumbEl(ctx2)?.focus({ preventScroll: true });\n          });\n        },\n        focusChannelThumb(ctx2, evt) {\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            dom.getChannelSliderThumbEl(ctx2, evt.channel)?.focus({ preventScroll: true });\n          });\n        },\n        setInitialFocus(ctx2) {\n          if (!ctx2.openAutoFocus) return;\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            const element = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getInitialFocus)({\n              root: dom.getContentEl(ctx2),\n              getInitialEl: ctx2.initialFocusEl\n            });\n            element?.focus({ preventScroll: true });\n          });\n        },\n        setReturnFocus(ctx2) {\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            dom.getTriggerEl(ctx2)?.focus({ preventScroll: true });\n          });\n        },\n        syncFormatSelectElement(ctx2) {\n          sync.formatSelect(ctx2);\n        },\n        invokeOnOpen(ctx2) {\n          ctx2.onOpenChange?.({ open: true });\n        },\n        invokeOnClose(ctx2) {\n          ctx2.onOpenChange?.({ open: false });\n        },\n        toggleVisibility(ctx2, evt, { send }) {\n          send({ type: ctx2.open ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\", previousEvent: evt });\n        }\n      },\n      compareFns: {\n        value: (a, b) => a.isEqual(b)\n      }\n    }\n  );\n}\nvar sync = {\n  // sync channel inputs\n  inputs(ctx, color) {\n    const channelInputs = dom.getChannelInputEls(ctx);\n    (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n      channelInputs.forEach((inputEl) => {\n        const channel = inputEl.dataset.channel;\n        dom.setValue(inputEl, getChannelValue(color || ctx.value, channel));\n      });\n    });\n  },\n  // sync format select\n  formatSelect(ctx) {\n    const selectEl = dom.getFormatSelectEl(ctx);\n    (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n      dom.setValue(selectEl, ctx.format);\n    });\n  }\n};\nvar invoke = {\n  changeEnd(ctx) {\n    const value = ctx.value.toFormat(ctx.format);\n    ctx.onValueChangeEnd?.({\n      value,\n      valueAsString: ctx.valueAsString\n    });\n  },\n  change(ctx) {\n    const value = ctx.value.toFormat(ctx.format);\n    ctx.onValueChange?.({\n      value,\n      valueAsString: ctx.valueAsString\n    });\n    (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dispatchInputValueEvent)(dom.getHiddenInputEl(ctx), { value: ctx.valueAsString });\n  },\n  formatChange(ctx) {\n    ctx.onFormatChange?.({ format: ctx.format });\n  }\n};\nvar set = {\n  value(ctx, color) {\n    if (!color || ctx.value.isEqual(color)) return;\n    ctx.value = color;\n    invoke.change(ctx);\n  },\n  format(ctx, format) {\n    if (ctx.format === format) return;\n    ctx.format = format;\n    invoke.formatChange(ctx);\n  }\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/color-picker/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/color-utils/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@zag-js/color-utils/dist/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Color: () => (/* binding */ Color),\n/* harmony export */   getColorAreaGradient: () => (/* binding */ getColorAreaGradient),\n/* harmony export */   normalizeColor: () => (/* binding */ normalizeColor),\n/* harmony export */   parseColor: () => (/* binding */ parseColor)\n/* harmony export */ });\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, key + \"\" , value);\n\n// src/color-format-gradient.ts\nvar generateRGB_R = (orientation, dir, zValue) => {\n  const maskImage = `linear-gradient(to ${orientation[Number(!dir)]}, transparent, #000)`;\n  const result = {\n    areaStyles: {\n      backgroundImage: `linear-gradient(to ${orientation[Number(dir)]},rgb(${zValue},0,0),rgb(${zValue},255,0))`\n    },\n    areaGradientStyles: {\n      backgroundImage: `linear-gradient(to ${orientation[Number(dir)]},rgb(${zValue},0,255),rgb(${zValue},255,255))`,\n      WebkitMaskImage: maskImage,\n      maskImage\n    }\n  };\n  return result;\n};\nvar generateRGB_G = (orientation, dir, zValue) => {\n  const maskImage = `linear-gradient(to ${orientation[Number(!dir)]}, transparent, #000)`;\n  const result = {\n    areaStyles: {\n      backgroundImage: `linear-gradient(to ${orientation[Number(dir)]},rgb(0,${zValue},0),rgb(255,${zValue},0))`\n    },\n    areaGradientStyles: {\n      backgroundImage: `linear-gradient(to ${orientation[Number(dir)]},rgb(0,${zValue},255),rgb(255,${zValue},255))`,\n      WebkitMaskImage: maskImage,\n      maskImage\n    }\n  };\n  return result;\n};\nvar generateRGB_B = (orientation, dir, zValue) => {\n  const maskImage = `linear-gradient(to ${orientation[Number(!dir)]}, transparent, #000)`;\n  const result = {\n    areaStyles: {\n      backgroundImage: `linear-gradient(to ${orientation[Number(dir)]},rgb(0,0,${zValue}),rgb(255,0,${zValue}))`\n    },\n    areaGradientStyles: {\n      backgroundImage: `linear-gradient(to ${orientation[Number(dir)]},rgb(0,255,${zValue}),rgb(255,255,${zValue}))`,\n      WebkitMaskImage: maskImage,\n      maskImage\n    }\n  };\n  return result;\n};\nvar generateHSL_H = (orientation, dir, zValue) => {\n  const result = {\n    areaStyles: {},\n    areaGradientStyles: {\n      background: [\n        `linear-gradient(to ${orientation[Number(dir)]}, hsla(0,0%,0%,1) 0%, hsla(0,0%,0%,0) 50%, hsla(0,0%,100%,0) 50%, hsla(0,0%,100%,1) 100%)`,\n        `linear-gradient(to ${orientation[Number(!dir)]},hsl(0,0%,50%),hsla(0,0%,50%,0))`,\n        `hsl(${zValue}, 100%, 50%)`\n      ].join(\",\")\n    }\n  };\n  return result;\n};\nvar generateHSL_S = (orientation, dir, alphaValue) => {\n  const result = {\n    areaStyles: {},\n    areaGradientStyles: {\n      background: [\n        `linear-gradient(to ${orientation[Number(!dir)]}, hsla(0,0%,0%,${alphaValue}) 0%, hsla(0,0%,0%,0) 50%, hsla(0,0%,100%,0) 50%, hsla(0,0%,100%,${alphaValue}) 100%)`,\n        `linear-gradient(to ${orientation[Number(dir)]},hsla(0,100%,50%,${alphaValue}),hsla(60,100%,50%,${alphaValue}),hsla(120,100%,50%,${alphaValue}),hsla(180,100%,50%,${alphaValue}),hsla(240,100%,50%,${alphaValue}),hsla(300,100%,50%,${alphaValue}),hsla(359,100%,50%,${alphaValue}))`,\n        \"hsl(0, 0%, 50%)\"\n      ].join(\",\")\n    }\n  };\n  return result;\n};\nvar generateHSL_L = (orientation, dir, zValue) => {\n  const result = {\n    areaStyles: {},\n    areaGradientStyles: {\n      backgroundImage: [\n        `linear-gradient(to ${orientation[Number(!dir)]},hsl(0,0%,${zValue}%),hsla(0,0%,${zValue}%,0))`,\n        `linear-gradient(to ${orientation[Number(dir)]},hsl(0,100%,${zValue}%),hsl(60,100%,${zValue}%),hsl(120,100%,${zValue}%),hsl(180,100%,${zValue}%),hsl(240,100%,${zValue}%),hsl(300,100%,${zValue}%),hsl(360,100%,${zValue}%))`\n      ].join(\",\")\n    }\n  };\n  return result;\n};\nvar generateHSB_H = (orientation, dir, zValue) => {\n  const result = {\n    areaStyles: {},\n    areaGradientStyles: {\n      background: [\n        `linear-gradient(to ${orientation[Number(dir)]},hsl(0,0%,0%),hsla(0,0%,0%,0))`,\n        `linear-gradient(to ${orientation[Number(!dir)]},hsl(0,0%,100%),hsla(0,0%,100%,0))`,\n        `hsl(${zValue}, 100%, 50%)`\n      ].join(\",\")\n    }\n  };\n  return result;\n};\nvar generateHSB_S = (orientation, dir, alphaValue) => {\n  const result = {\n    areaStyles: {},\n    areaGradientStyles: {\n      background: [\n        `linear-gradient(to ${orientation[Number(!dir)]},hsla(0,0%,0%,${alphaValue}),hsla(0,0%,0%,0))`,\n        `linear-gradient(to ${orientation[Number(dir)]},hsla(0,100%,50%,${alphaValue}),hsla(60,100%,50%,${alphaValue}),hsla(120,100%,50%,${alphaValue}),hsla(180,100%,50%,${alphaValue}),hsla(240,100%,50%,${alphaValue}),hsla(300,100%,50%,${alphaValue}),hsla(359,100%,50%,${alphaValue}))`,\n        `linear-gradient(to ${orientation[Number(!dir)]},hsl(0,0%,0%),hsl(0,0%,100%))`\n      ].join(\",\")\n    }\n  };\n  return result;\n};\nvar generateHSB_B = (orientation, dir, alphaValue) => {\n  const result = {\n    areaStyles: {},\n    areaGradientStyles: {\n      background: [\n        `linear-gradient(to ${orientation[Number(!dir)]},hsla(0,0%,100%,${alphaValue}),hsla(0,0%,100%,0))`,\n        `linear-gradient(to ${orientation[Number(dir)]},hsla(0,100%,50%,${alphaValue}),hsla(60,100%,50%,${alphaValue}),hsla(120,100%,50%,${alphaValue}),hsla(180,100%,50%,${alphaValue}),hsla(240,100%,50%,${alphaValue}),hsla(300,100%,50%,${alphaValue}),hsla(359,100%,50%,${alphaValue}))`,\n        \"#000\"\n      ].join(\",\")\n    }\n  };\n  return result;\n};\n\n// src/area-gradient.ts\nfunction getColorAreaGradient(color, options) {\n  const { xChannel, yChannel, dir: dirProp = \"ltr\" } = options;\n  const { zChannel } = color.getColorAxes({ xChannel, yChannel });\n  const zValue = color.getChannelValue(zChannel);\n  const { minValue: zMin, maxValue: zMax } = color.getChannelRange(zChannel);\n  const orientation = [\"top\", dirProp === \"rtl\" ? \"left\" : \"right\"];\n  let dir = false;\n  let background = { areaStyles: {}, areaGradientStyles: {} };\n  let alphaValue = (zValue - zMin) / (zMax - zMin);\n  let isHSL = color.getFormat() === \"hsla\";\n  switch (zChannel) {\n    case \"red\": {\n      dir = xChannel === \"green\";\n      background = generateRGB_R(orientation, dir, zValue);\n      break;\n    }\n    case \"green\": {\n      dir = xChannel === \"red\";\n      background = generateRGB_G(orientation, dir, zValue);\n      break;\n    }\n    case \"blue\": {\n      dir = xChannel === \"red\";\n      background = generateRGB_B(orientation, dir, zValue);\n      break;\n    }\n    case \"hue\": {\n      dir = xChannel !== \"saturation\";\n      if (isHSL) {\n        background = generateHSL_H(orientation, dir, zValue);\n      } else {\n        background = generateHSB_H(orientation, dir, zValue);\n      }\n      break;\n    }\n    case \"saturation\": {\n      dir = xChannel === \"hue\";\n      if (isHSL) {\n        background = generateHSL_S(orientation, dir, alphaValue);\n      } else {\n        background = generateHSB_S(orientation, dir, alphaValue);\n      }\n      break;\n    }\n    case \"brightness\": {\n      dir = xChannel === \"hue\";\n      background = generateHSB_B(orientation, dir, alphaValue);\n      break;\n    }\n    case \"lightness\": {\n      dir = xChannel === \"hue\";\n      background = generateHSL_L(orientation, dir, zValue);\n      break;\n    }\n  }\n  return background;\n}\nvar isEqualObject = (a, b) => {\n  if (Object.keys(a).length !== Object.keys(b).length) return false;\n  for (let key in a) if (a[key] !== b[key]) return false;\n  return true;\n};\nvar Color = class {\n  toHexInt() {\n    return this.toFormat(\"rgba\").toHexInt();\n  }\n  getChannelValue(channel) {\n    if (channel in this) return this[channel];\n    throw new Error(\"Unsupported color channel: \" + channel);\n  }\n  getChannelValuePercent(channel, valueToCheck) {\n    const value = valueToCheck ?? this.getChannelValue(channel);\n    const { minValue, maxValue } = this.getChannelRange(channel);\n    return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.getValuePercent)(value, minValue, maxValue);\n  }\n  getChannelPercentValue(channel, percentToCheck) {\n    const { minValue, maxValue, step } = this.getChannelRange(channel);\n    const percentValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.getPercentValue)(percentToCheck, minValue, maxValue, step);\n    return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.snapValueToStep)(percentValue, minValue, maxValue, step);\n  }\n  withChannelValue(channel, value) {\n    const { minValue, maxValue } = this.getChannelRange(channel);\n    if (channel in this) {\n      let clone = this.clone();\n      clone[channel] = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(value, minValue, maxValue);\n      return clone;\n    }\n    throw new Error(\"Unsupported color channel: \" + channel);\n  }\n  getColorAxes(xyChannels) {\n    let { xChannel, yChannel } = xyChannels;\n    let xCh = xChannel || this.getChannels().find((c) => c !== yChannel);\n    let yCh = yChannel || this.getChannels().find((c) => c !== xCh);\n    let zCh = this.getChannels().find((c) => c !== xCh && c !== yCh);\n    return { xChannel: xCh, yChannel: yCh, zChannel: zCh };\n  }\n  incrementChannel(channel, stepSize) {\n    const { minValue, maxValue, step } = this.getChannelRange(channel);\n    const value = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.snapValueToStep)(\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(this.getChannelValue(channel) + stepSize, minValue, maxValue),\n      minValue,\n      maxValue,\n      step\n    );\n    return this.withChannelValue(channel, value);\n  }\n  decrementChannel(channel, stepSize) {\n    return this.incrementChannel(channel, -stepSize);\n  }\n  isEqual(color) {\n    const isSame = isEqualObject(this.toJSON(), color.toJSON());\n    return isSame && this.getChannelValue(\"alpha\") === color.getChannelValue(\"alpha\");\n  }\n};\nvar _RGBColor = class _RGBColor extends Color {\n  constructor(red, green, blue, alpha) {\n    super();\n    this.red = red;\n    this.green = green;\n    this.blue = blue;\n    this.alpha = alpha;\n  }\n  static parse(value) {\n    let colors = [];\n    if (/^#[\\da-f]+$/i.test(value) && [4, 5, 7, 9].includes(value.length)) {\n      const values = (value.length < 6 ? value.replace(/[^#]/gi, \"$&$&\") : value).slice(1).split(\"\");\n      while (values.length > 0) {\n        colors.push(parseInt(values.splice(0, 2).join(\"\"), 16));\n      }\n      colors[3] = colors[3] !== void 0 ? colors[3] / 255 : void 0;\n    }\n    const match = value.match(/^rgba?\\((.*)\\)$/);\n    if (match?.[1]) {\n      colors = match[1].split(\",\").map((value2) => Number(value2.trim())).map((num, i) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(num, 0, i < 3 ? 255 : 1));\n    }\n    return colors.length < 3 ? void 0 : new _RGBColor(colors[0], colors[1], colors[2], colors[3] ?? 1);\n  }\n  toString(format) {\n    switch (format) {\n      case \"hex\":\n        return \"#\" + (this.red.toString(16).padStart(2, \"0\") + this.green.toString(16).padStart(2, \"0\") + this.blue.toString(16).padStart(2, \"0\")).toUpperCase();\n      case \"hexa\":\n        return \"#\" + (this.red.toString(16).padStart(2, \"0\") + this.green.toString(16).padStart(2, \"0\") + this.blue.toString(16).padStart(2, \"0\") + Math.round(this.alpha * 255).toString(16).padStart(2, \"0\")).toUpperCase();\n      case \"rgb\":\n        return `rgb(${this.red}, ${this.green}, ${this.blue})`;\n      case \"css\":\n      case \"rgba\":\n        return `rgba(${this.red}, ${this.green}, ${this.blue}, ${this.alpha})`;\n      case \"hsl\":\n        return this.toHSL().toString(\"hsl\");\n      case \"hsb\":\n        return this.toHSB().toString(\"hsb\");\n      default:\n        return this.toFormat(format).toString(format);\n    }\n  }\n  toFormat(format) {\n    switch (format) {\n      case \"rgba\":\n        return this;\n      case \"hsba\":\n        return this.toHSB();\n      case \"hsla\":\n        return this.toHSL();\n      default:\n        throw new Error(\"Unsupported color conversion: rgb -> \" + format);\n    }\n  }\n  toHexInt() {\n    return this.red << 16 | this.green << 8 | this.blue;\n  }\n  /**\n   * Converts an RGB color value to HSB.\n   * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#From_RGB.\n   * @returns An HSBColor object.\n   */\n  toHSB() {\n    const red = this.red / 255;\n    const green = this.green / 255;\n    const blue = this.blue / 255;\n    const min = Math.min(red, green, blue);\n    const brightness = Math.max(red, green, blue);\n    const chroma = brightness - min;\n    const saturation = brightness === 0 ? 0 : chroma / brightness;\n    let hue = 0;\n    if (chroma !== 0) {\n      switch (brightness) {\n        case red:\n          hue = (green - blue) / chroma + (green < blue ? 6 : 0);\n          break;\n        case green:\n          hue = (blue - red) / chroma + 2;\n          break;\n        case blue:\n          hue = (red - green) / chroma + 4;\n          break;\n      }\n      hue /= 6;\n    }\n    return new HSBColor(\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(hue * 360, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(saturation * 100, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(brightness * 100, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.alpha, 2)\n    );\n  }\n  /**\n   * Converts an RGB color value to HSL.\n   * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#From_RGB.\n   * @returns An HSLColor object.\n   */\n  toHSL() {\n    const red = this.red / 255;\n    const green = this.green / 255;\n    const blue = this.blue / 255;\n    const min = Math.min(red, green, blue);\n    const max = Math.max(red, green, blue);\n    const lightness = (max + min) / 2;\n    const chroma = max - min;\n    let hue = -1;\n    let saturation = -1;\n    if (chroma === 0) {\n      hue = saturation = 0;\n    } else {\n      saturation = chroma / (lightness < 0.5 ? max + min : 2 - max - min);\n      switch (max) {\n        case red:\n          hue = (green - blue) / chroma + (green < blue ? 6 : 0);\n          break;\n        case green:\n          hue = (blue - red) / chroma + 2;\n          break;\n        case blue:\n          hue = (red - green) / chroma + 4;\n          break;\n      }\n      hue /= 6;\n    }\n    return new HSLColor(\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(hue * 360, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(saturation * 100, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(lightness * 100, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.alpha, 2)\n    );\n  }\n  clone() {\n    return new _RGBColor(this.red, this.green, this.blue, this.alpha);\n  }\n  getChannelFormatOptions(channel) {\n    switch (channel) {\n      case \"red\":\n      case \"green\":\n      case \"blue\":\n        return { style: \"decimal\" };\n      case \"alpha\":\n        return { style: \"percent\" };\n      default:\n        throw new Error(\"Unknown color channel: \" + channel);\n    }\n  }\n  formatChannelValue(channel, locale) {\n    let options = this.getChannelFormatOptions(channel);\n    let value = this.getChannelValue(channel);\n    return new Intl.NumberFormat(locale, options).format(value);\n  }\n  getChannelRange(channel) {\n    switch (channel) {\n      case \"red\":\n      case \"green\":\n      case \"blue\":\n        return { minValue: 0, maxValue: 255, step: 1, pageSize: 17 };\n      case \"alpha\":\n        return { minValue: 0, maxValue: 1, step: 0.01, pageSize: 0.1 };\n      default:\n        throw new Error(\"Unknown color channel: \" + channel);\n    }\n  }\n  toJSON() {\n    return { r: this.red, g: this.green, b: this.blue, a: this.alpha };\n  }\n  getFormat() {\n    return \"rgba\";\n  }\n  getChannels() {\n    return _RGBColor.colorChannels;\n  }\n};\n__publicField(_RGBColor, \"colorChannels\", [\"red\", \"green\", \"blue\"]);\nvar RGBColor = _RGBColor;\n\n// src/hsl-color.ts\nvar HSL_REGEX = /hsl\\(([-+]?\\d+(?:.\\d+)?\\s*,\\s*[-+]?\\d+(?:.\\d+)?%\\s*,\\s*[-+]?\\d+(?:.\\d+)?%)\\)|hsla\\(([-+]?\\d+(?:.\\d+)?\\s*,\\s*[-+]?\\d+(?:.\\d+)?%\\s*,\\s*[-+]?\\d+(?:.\\d+)?%\\s*,\\s*[-+]?\\d(.\\d+)?)\\)/;\nvar _HSLColor = class _HSLColor extends Color {\n  constructor(hue, saturation, lightness, alpha) {\n    super();\n    this.hue = hue;\n    this.saturation = saturation;\n    this.lightness = lightness;\n    this.alpha = alpha;\n  }\n  static parse(value) {\n    let m;\n    if (m = value.match(HSL_REGEX)) {\n      const [h, s, l, a] = (m[1] ?? m[2]).split(\",\").map((n) => Number(n.trim().replace(\"%\", \"\")));\n      return new _HSLColor((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.mod)(h, 360), (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(s, 0, 100), (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(l, 0, 100), (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(a ?? 1, 0, 1));\n    }\n  }\n  toString(format) {\n    switch (format) {\n      case \"hex\":\n        return this.toRGB().toString(\"hex\");\n      case \"hexa\":\n        return this.toRGB().toString(\"hexa\");\n      case \"hsl\":\n        return `hsl(${this.hue}, ${(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.saturation, 2)}%, ${(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.lightness, 2)}%)`;\n      case \"css\":\n      case \"hsla\":\n        return `hsla(${this.hue}, ${(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.saturation, 2)}%, ${(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.lightness, 2)}%, ${this.alpha})`;\n      case \"hsb\":\n        return this.toHSB().toString(\"hsb\");\n      case \"rgb\":\n        return this.toRGB().toString(\"rgb\");\n      default:\n        return this.toFormat(format).toString(format);\n    }\n  }\n  toFormat(format) {\n    switch (format) {\n      case \"hsla\":\n        return this;\n      case \"hsba\":\n        return this.toHSB();\n      case \"rgba\":\n        return this.toRGB();\n      default:\n        throw new Error(\"Unsupported color conversion: hsl -> \" + format);\n    }\n  }\n  /**\n   * Converts a HSL color to HSB.\n   * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSL_to_HSV.\n   * @returns An HSBColor object.\n   */\n  toHSB() {\n    let saturation = this.saturation / 100;\n    let lightness = this.lightness / 100;\n    let brightness = lightness + saturation * Math.min(lightness, 1 - lightness);\n    saturation = brightness === 0 ? 0 : 2 * (1 - lightness / brightness);\n    return new HSBColor(\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.hue, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(saturation * 100, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(brightness * 100, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.alpha, 2)\n    );\n  }\n  /**\n   * Converts a HSL color to RGB.\n   * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSL_to_RGB_alternative.\n   * @returns An RGBColor object.\n   */\n  toRGB() {\n    let hue = this.hue;\n    let saturation = this.saturation / 100;\n    let lightness = this.lightness / 100;\n    let a = saturation * Math.min(lightness, 1 - lightness);\n    let fn = (n, k = (n + hue / 30) % 12) => lightness - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n    return new RGBColor(\n      Math.round(fn(0) * 255),\n      Math.round(fn(8) * 255),\n      Math.round(fn(4) * 255),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.alpha, 2)\n    );\n  }\n  clone() {\n    return new _HSLColor(this.hue, this.saturation, this.lightness, this.alpha);\n  }\n  getChannelFormatOptions(channel) {\n    switch (channel) {\n      case \"hue\":\n        return { style: \"unit\", unit: \"degree\", unitDisplay: \"narrow\" };\n      case \"saturation\":\n      case \"lightness\":\n      case \"alpha\":\n        return { style: \"percent\" };\n      default:\n        throw new Error(\"Unknown color channel: \" + channel);\n    }\n  }\n  formatChannelValue(channel, locale) {\n    let options = this.getChannelFormatOptions(channel);\n    let value = this.getChannelValue(channel);\n    if (channel === \"saturation\" || channel === \"lightness\") {\n      value /= 100;\n    }\n    return new Intl.NumberFormat(locale, options).format(value);\n  }\n  getChannelRange(channel) {\n    switch (channel) {\n      case \"hue\":\n        return { minValue: 0, maxValue: 360, step: 1, pageSize: 15 };\n      case \"saturation\":\n      case \"lightness\":\n        return { minValue: 0, maxValue: 100, step: 1, pageSize: 10 };\n      case \"alpha\":\n        return { minValue: 0, maxValue: 1, step: 0.01, pageSize: 0.1 };\n      default:\n        throw new Error(\"Unknown color channel: \" + channel);\n    }\n  }\n  toJSON() {\n    return { h: this.hue, s: this.saturation, l: this.lightness, a: this.alpha };\n  }\n  getFormat() {\n    return \"hsla\";\n  }\n  getChannels() {\n    return _HSLColor.colorChannels;\n  }\n};\n__publicField(_HSLColor, \"colorChannels\", [\"hue\", \"saturation\", \"lightness\"]);\nvar HSLColor = _HSLColor;\n\n// src/hsb-color.ts\nvar HSB_REGEX = /hsb\\(([-+]?\\d+(?:.\\d+)?\\s*,\\s*[-+]?\\d+(?:.\\d+)?%\\s*,\\s*[-+]?\\d+(?:.\\d+)?%)\\)|hsba\\(([-+]?\\d+(?:.\\d+)?\\s*,\\s*[-+]?\\d+(?:.\\d+)?%\\s*,\\s*[-+]?\\d+(?:.\\d+)?%\\s*,\\s*[-+]?\\d(.\\d+)?)\\)/;\nvar _HSBColor = class _HSBColor extends Color {\n  constructor(hue, saturation, brightness, alpha) {\n    super();\n    this.hue = hue;\n    this.saturation = saturation;\n    this.brightness = brightness;\n    this.alpha = alpha;\n  }\n  static parse(value) {\n    let m;\n    if (m = value.match(HSB_REGEX)) {\n      const [h, s, b, a] = (m[1] ?? m[2]).split(\",\").map((n) => Number(n.trim().replace(\"%\", \"\")));\n      return new _HSBColor((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.mod)(h, 360), (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(s, 0, 100), (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(b, 0, 100), (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.clampValue)(a ?? 1, 0, 1));\n    }\n  }\n  toString(format) {\n    switch (format) {\n      case \"css\":\n        return this.toHSL().toString(\"css\");\n      case \"hex\":\n        return this.toRGB().toString(\"hex\");\n      case \"hexa\":\n        return this.toRGB().toString(\"hexa\");\n      case \"hsb\":\n        return `hsb(${this.hue}, ${(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.saturation, 2)}%, ${(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.brightness, 2)}%)`;\n      case \"hsba\":\n        return `hsba(${this.hue}, ${(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.saturation, 2)}%, ${(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.brightness, 2)}%, ${this.alpha})`;\n      case \"hsl\":\n        return this.toHSL().toString(\"hsl\");\n      case \"rgb\":\n        return this.toRGB().toString(\"rgb\");\n      default:\n        return this.toFormat(format).toString(format);\n    }\n  }\n  toFormat(format) {\n    switch (format) {\n      case \"hsba\":\n        return this;\n      case \"hsla\":\n        return this.toHSL();\n      case \"rgba\":\n        return this.toRGB();\n      default:\n        throw new Error(\"Unsupported color conversion: hsb -> \" + format);\n    }\n  }\n  /**\n   * Converts a HSB color to HSL.\n   * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSV_to_HSL.\n   * @returns An HSLColor object.\n   */\n  toHSL() {\n    let saturation = this.saturation / 100;\n    let brightness = this.brightness / 100;\n    let lightness = brightness * (1 - saturation / 2);\n    saturation = lightness === 0 || lightness === 1 ? 0 : (brightness - lightness) / Math.min(lightness, 1 - lightness);\n    return new HSLColor(\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.hue, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(saturation * 100, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(lightness * 100, 2),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.alpha, 2)\n    );\n  }\n  /**\n   * Converts a HSV color value to RGB.\n   * Conversion formula adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSV_to_RGB_alternative.\n   * @returns An RGBColor object.\n   */\n  toRGB() {\n    let hue = this.hue;\n    let saturation = this.saturation / 100;\n    let brightness = this.brightness / 100;\n    let fn = (n, k = (n + hue / 60) % 6) => brightness - saturation * brightness * Math.max(Math.min(k, 4 - k, 1), 0);\n    return new RGBColor(\n      Math.round(fn(5) * 255),\n      Math.round(fn(3) * 255),\n      Math.round(fn(1) * 255),\n      (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_0__.toFixedNumber)(this.alpha, 2)\n    );\n  }\n  clone() {\n    return new _HSBColor(this.hue, this.saturation, this.brightness, this.alpha);\n  }\n  getChannelFormatOptions(channel) {\n    switch (channel) {\n      case \"hue\":\n        return { style: \"unit\", unit: \"degree\", unitDisplay: \"narrow\" };\n      case \"saturation\":\n      case \"brightness\":\n      case \"alpha\":\n        return { style: \"percent\" };\n      default:\n        throw new Error(\"Unknown color channel: \" + channel);\n    }\n  }\n  formatChannelValue(channel, locale) {\n    let options = this.getChannelFormatOptions(channel);\n    let value = this.getChannelValue(channel);\n    if (channel === \"saturation\" || channel === \"brightness\") {\n      value /= 100;\n    }\n    return new Intl.NumberFormat(locale, options).format(value);\n  }\n  getChannelRange(channel) {\n    switch (channel) {\n      case \"hue\":\n        return { minValue: 0, maxValue: 360, step: 1, pageSize: 15 };\n      case \"saturation\":\n      case \"brightness\":\n        return { minValue: 0, maxValue: 100, step: 1, pageSize: 10 };\n      case \"alpha\":\n        return { minValue: 0, maxValue: 1, step: 0.01, pageSize: 0.1 };\n      default:\n        throw new Error(\"Unknown color channel: \" + channel);\n    }\n  }\n  toJSON() {\n    return { h: this.hue, s: this.saturation, b: this.brightness, a: this.alpha };\n  }\n  getFormat() {\n    return \"hsba\";\n  }\n  getChannels() {\n    return _HSBColor.colorChannels;\n  }\n};\n__publicField(_HSBColor, \"colorChannels\", [\"hue\", \"saturation\", \"brightness\"]);\nvar HSBColor = _HSBColor;\n\n// src/native-color.ts\nvar nativeColors = \"aliceblue:f0f8ff,antiquewhite:faebd7,aqua:00ffff,aquamarine:7fffd4,azure:f0ffff,beige:f5f5dc,bisque:ffe4c4,black:000000,blanchedalmond:ffebcd,blue:0000ff,blueviolet:8a2be2,brown:a52a2a,burlywood:deb887,cadetblue:5f9ea0,chartreuse:7fff00,chocolate:d2691e,coral:ff7f50,cornflowerblue:6495ed,cornsilk:fff8dc,crimson:dc143c,cyan:00ffff,darkblue:00008b,darkcyan:008b8b,darkgoldenrod:b8860b,darkgray:a9a9a9,darkgreen:006400,darkkhaki:bdb76b,darkmagenta:8b008b,darkolivegreen:556b2f,darkorange:ff8c00,darkorchid:9932cc,darkred:8b0000,darksalmon:e9967a,darkseagreen:8fbc8f,darkslateblue:483d8b,darkslategray:2f4f4f,darkturquoise:00ced1,darkviolet:9400d3,deeppink:ff1493,deepskyblue:00bfff,dimgray:696969,dodgerblue:1e90ff,firebrick:b22222,floralwhite:fffaf0,forestgreen:228b22,fuchsia:ff00ff,gainsboro:dcdcdc,ghostwhite:f8f8ff,gold:ffd700,goldenrod:daa520,gray:808080,green:008000,greenyellow:adff2f,honeydew:f0fff0,hotpink:ff69b4,indianred:cd5c5c,indigo:4b0082,ivory:fffff0,khaki:f0e68c,lavender:e6e6fa,lavenderblush:fff0f5,lawngreen:7cfc00,lemonchiffon:fffacd,lightblue:add8e6,lightcoral:f08080,lightcyan:e0ffff,lightgoldenrodyellow:fafad2,lightgrey:d3d3d3,lightgreen:90ee90,lightpink:ffb6c1,lightsalmon:ffa07a,lightseagreen:20b2aa,lightskyblue:87cefa,lightslategray:778899,lightsteelblue:b0c4de,lightyellow:ffffe0,lime:00ff00,limegreen:32cd32,linen:faf0e6,magenta:ff00ff,maroon:800000,mediumaquamarine:66cdaa,mediumblue:0000cd,mediumorchid:ba55d3,mediumpurple:9370d8,mediumseagreen:3cb371,mediumslateblue:7b68ee,mediumspringgreen:00fa9a,mediumturquoise:48d1cc,mediumvioletred:c71585,midnightblue:191970,mintcream:f5fffa,mistyrose:ffe4e1,moccasin:ffe4b5,navajowhite:ffdead,navy:000080,oldlace:fdf5e6,olive:808000,olivedrab:6b8e23,orange:ffa500,orangered:ff4500,orchid:da70d6,palegoldenrod:eee8aa,palegreen:98fb98,paleturquoise:afeeee,palevioletred:d87093,papayawhip:ffefd5,peachpuff:ffdab9,peru:cd853f,pink:ffc0cb,plum:dda0dd,powderblue:b0e0e6,purple:800080,rebeccapurple:663399,red:ff0000,rosybrown:bc8f8f,royalblue:4169e1,saddlebrown:8b4513,salmon:fa8072,sandybrown:f4a460,seagreen:2e8b57,seashell:fff5ee,sienna:a0522d,silver:c0c0c0,skyblue:87ceeb,slateblue:6a5acd,slategray:708090,snow:fffafa,springgreen:00ff7f,steelblue:4682b4,tan:d2b48c,teal:008080,thistle:d8bfd8,tomato:ff6347,turquoise:40e0d0,violet:ee82ee,wheat:f5deb3,white:ffffff,whitesmoke:f5f5f5,yellow:ffff00,yellowgreen:9acd32\";\nvar makeMap = (str) => {\n  const map = /* @__PURE__ */ new Map();\n  const list = str.split(\",\");\n  for (let i = 0; i < list.length; i++) {\n    const [key, val] = list[i].split(\":\");\n    map.set(key, `#${val}`);\n    if (key.includes(\"gray\")) map.set(key.replace(\"gray\", \"grey\"), `#${val}`);\n  }\n  return map;\n};\nvar nativeColorMap = makeMap(nativeColors);\n\n// src/parse-color.ts\nvar parseColor = (value) => {\n  if (nativeColorMap.has(value)) {\n    return parseColor(nativeColorMap.get(value));\n  }\n  const result = RGBColor.parse(value) || HSBColor.parse(value) || HSLColor.parse(value);\n  if (!result) {\n    const error = new Error(\"Invalid color value: \" + value);\n    Error.captureStackTrace?.(error, parseColor);\n    throw error;\n  }\n  return result;\n};\nvar normalizeColor = (v) => {\n  return typeof v === \"string\" ? parseColor(v) : v;\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9jb2xvci11dGlscy9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFrSDs7QUFFbEg7QUFDQSw4RUFBOEUsNkRBQTZEO0FBQzNJOztBQUVBO0FBQ0E7QUFDQSwwQ0FBMEMsMEJBQTBCO0FBQ3BFO0FBQ0E7QUFDQSw2Q0FBNkMseUJBQXlCLE9BQU8sT0FBTyxZQUFZLE9BQU87QUFDdkcsS0FBSztBQUNMO0FBQ0EsNkNBQTZDLHlCQUF5QixPQUFPLE9BQU8sY0FBYyxPQUFPO0FBQ3pHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLDBCQUEwQjtBQUNwRTtBQUNBO0FBQ0EsNkNBQTZDLHlCQUF5QixTQUFTLE9BQU8sY0FBYyxPQUFPO0FBQzNHLEtBQUs7QUFDTDtBQUNBLDZDQUE2Qyx5QkFBeUIsU0FBUyxPQUFPLGdCQUFnQixPQUFPO0FBQzdHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLDBCQUEwQjtBQUNwRTtBQUNBO0FBQ0EsNkNBQTZDLHlCQUF5QixXQUFXLE9BQU8sY0FBYyxPQUFPO0FBQzdHLEtBQUs7QUFDTDtBQUNBLDZDQUE2Qyx5QkFBeUIsYUFBYSxPQUFPLGdCQUFnQixPQUFPO0FBQ2pIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBLDhCQUE4Qix5QkFBeUI7QUFDdkQsOEJBQThCLDBCQUEwQjtBQUN4RCxlQUFlLE9BQU87QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBLDhCQUE4QiwwQkFBMEIsaUJBQWlCLFdBQVcsbUVBQW1FLFdBQVc7QUFDbEssOEJBQThCLHlCQUF5QixtQkFBbUIsV0FBVyxxQkFBcUIsV0FBVyxzQkFBc0IsV0FBVyxzQkFBc0IsV0FBVyxzQkFBc0IsV0FBVyxzQkFBc0IsV0FBVyxzQkFBc0IsV0FBVztBQUMxUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQSw4QkFBOEIsMEJBQTBCLFlBQVksT0FBTyxlQUFlLE9BQU87QUFDakcsOEJBQThCLHlCQUF5QixjQUFjLE9BQU8saUJBQWlCLE9BQU8sa0JBQWtCLE9BQU8sa0JBQWtCLE9BQU8sa0JBQWtCLE9BQU8sa0JBQWtCLE9BQU8sa0JBQWtCLE9BQU87QUFDak87QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBLDhCQUE4Qix5QkFBeUI7QUFDdkQsOEJBQThCLDBCQUEwQjtBQUN4RCxlQUFlLE9BQU87QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBLDhCQUE4QiwwQkFBMEIsZ0JBQWdCLFdBQVc7QUFDbkYsOEJBQThCLHlCQUF5QixtQkFBbUIsV0FBVyxxQkFBcUIsV0FBVyxzQkFBc0IsV0FBVyxzQkFBc0IsV0FBVyxzQkFBc0IsV0FBVyxzQkFBc0IsV0FBVyxzQkFBc0IsV0FBVztBQUMxUiw4QkFBOEIsMEJBQTBCO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQSw4QkFBOEIsMEJBQTBCLGtCQUFrQixXQUFXO0FBQ3JGLDhCQUE4Qix5QkFBeUIsbUJBQW1CLFdBQVcscUJBQXFCLFdBQVcsc0JBQXNCLFdBQVcsc0JBQXNCLFdBQVcsc0JBQXNCLFdBQVcsc0JBQXNCLFdBQVcsc0JBQXNCLFdBQVc7QUFDMVI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxVQUFVLDJDQUEyQztBQUNyRCxVQUFVLFdBQVcsdUJBQXVCLG9CQUFvQjtBQUNoRTtBQUNBLFVBQVUsaUNBQWlDO0FBQzNDO0FBQ0E7QUFDQSxxQkFBcUIsY0FBYztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHFCQUFxQjtBQUNqQyxXQUFXLDhEQUFlO0FBQzFCO0FBQ0E7QUFDQSxZQUFZLDJCQUEyQjtBQUN2Qyx5QkFBeUIsOERBQWU7QUFDeEMsV0FBVyw4REFBZTtBQUMxQjtBQUNBO0FBQ0EsWUFBWSxxQkFBcUI7QUFDakM7QUFDQTtBQUNBLHVCQUF1Qix5REFBVTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxxQkFBcUI7QUFDL0I7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxZQUFZLDJCQUEyQjtBQUN2QyxrQkFBa0IsOERBQWU7QUFDakMsTUFBTSx5REFBVTtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwRkFBMEYseURBQVU7QUFDcEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsU0FBUyxJQUFJLFdBQVcsSUFBSSxVQUFVO0FBQzVEO0FBQ0E7QUFDQSx1QkFBdUIsU0FBUyxJQUFJLFdBQVcsSUFBSSxVQUFVLElBQUksV0FBVztBQUM1RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sNERBQWE7QUFDbkIsTUFBTSw0REFBYTtBQUNuQixNQUFNLDREQUFhO0FBQ25CLE1BQU0sNERBQWE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSw0REFBYTtBQUNuQixNQUFNLDREQUFhO0FBQ25CLE1BQU0sNERBQWE7QUFDbkIsTUFBTSw0REFBYTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixrREFBRyxVQUFVLHlEQUFVLGFBQWEseURBQVUsYUFBYSx5REFBVTtBQUNoRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsU0FBUyxJQUFJLDREQUFhLHFCQUFxQixLQUFLLDREQUFhLG9CQUFvQjtBQUMzRztBQUNBO0FBQ0EsdUJBQXVCLFNBQVMsSUFBSSw0REFBYSxxQkFBcUIsS0FBSyw0REFBYSxvQkFBb0IsS0FBSyxXQUFXO0FBQzVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSw0REFBYTtBQUNuQixNQUFNLDREQUFhO0FBQ25CLE1BQU0sNERBQWE7QUFDbkIsTUFBTSw0REFBYTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSw0REFBYTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsa0RBQUcsVUFBVSx5REFBVSxhQUFhLHlEQUFVLGFBQWEseURBQVU7QUFDaEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixTQUFTLElBQUksNERBQWEscUJBQXFCLEtBQUssNERBQWEscUJBQXFCO0FBQzVHO0FBQ0EsdUJBQXVCLFNBQVMsSUFBSSw0REFBYSxxQkFBcUIsS0FBSyw0REFBYSxxQkFBcUIsS0FBSyxXQUFXO0FBQzdIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSw0REFBYTtBQUNuQixNQUFNLDREQUFhO0FBQ25CLE1BQU0sNERBQWE7QUFDbkIsTUFBTSw0REFBYTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sNERBQWE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGlCQUFpQjtBQUNuQztBQUNBLHFCQUFxQixJQUFJO0FBQ3pCLHVFQUF1RSxJQUFJO0FBQzNFO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVtRSIsInNvdXJjZXMiOlsiL1VzZXJzL3BoaWxpYWhhbW1vbmQvRGVza3RvcC9sZWFybmVyLWFwcC1zeXN0ZW0vbm9kZV9tb2R1bGVzL0B6YWctanMvY29sb3ItdXRpbHMvZGlzdC9pbmRleC5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0VmFsdWVQZXJjZW50LCBnZXRQZXJjZW50VmFsdWUsIHNuYXBWYWx1ZVRvU3RlcCwgY2xhbXBWYWx1ZSwgdG9GaXhlZE51bWJlciwgbW9kIH0gZnJvbSAnQHphZy1qcy91dGlscyc7XG5cbnZhciBfX2RlZlByb3AgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgX19kZWZOb3JtYWxQcm9wID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4ga2V5IGluIG9iaiA/IF9fZGVmUHJvcChvYmosIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlLCB2YWx1ZSB9KSA6IG9ialtrZXldID0gdmFsdWU7XG52YXIgX19wdWJsaWNGaWVsZCA9IChvYmosIGtleSwgdmFsdWUpID0+IF9fZGVmTm9ybWFsUHJvcChvYmosIGtleSArIFwiXCIgLCB2YWx1ZSk7XG5cbi8vIHNyYy9jb2xvci1mb3JtYXQtZ3JhZGllbnQudHNcbnZhciBnZW5lcmF0ZVJHQl9SID0gKG9yaWVudGF0aW9uLCBkaXIsIHpWYWx1ZSkgPT4ge1xuICBjb25zdCBtYXNrSW1hZ2UgPSBgbGluZWFyLWdyYWRpZW50KHRvICR7b3JpZW50YXRpb25bTnVtYmVyKCFkaXIpXX0sIHRyYW5zcGFyZW50LCAjMDAwKWA7XG4gIGNvbnN0IHJlc3VsdCA9IHtcbiAgICBhcmVhU3R5bGVzOiB7XG4gICAgICBiYWNrZ3JvdW5kSW1hZ2U6IGBsaW5lYXItZ3JhZGllbnQodG8gJHtvcmllbnRhdGlvbltOdW1iZXIoZGlyKV19LHJnYigke3pWYWx1ZX0sMCwwKSxyZ2IoJHt6VmFsdWV9LDI1NSwwKSlgXG4gICAgfSxcbiAgICBhcmVhR3JhZGllbnRTdHlsZXM6IHtcbiAgICAgIGJhY2tncm91bmRJbWFnZTogYGxpbmVhci1ncmFkaWVudCh0byAke29yaWVudGF0aW9uW051bWJlcihkaXIpXX0scmdiKCR7elZhbHVlfSwwLDI1NSkscmdiKCR7elZhbHVlfSwyNTUsMjU1KSlgLFxuICAgICAgV2Via2l0TWFza0ltYWdlOiBtYXNrSW1hZ2UsXG4gICAgICBtYXNrSW1hZ2VcbiAgICB9XG4gIH07XG4gIHJldHVybiByZXN1bHQ7XG59O1xudmFyIGdlbmVyYXRlUkdCX0cgPSAob3JpZW50YXRpb24sIGRpciwgelZhbHVlKSA9PiB7XG4gIGNvbnN0IG1hc2tJbWFnZSA9IGBsaW5lYXItZ3JhZGllbnQodG8gJHtvcmllbnRhdGlvbltOdW1iZXIoIWRpcildfSwgdHJhbnNwYXJlbnQsICMwMDApYDtcbiAgY29uc3QgcmVzdWx0ID0ge1xuICAgIGFyZWFTdHlsZXM6IHtcbiAgICAgIGJhY2tncm91bmRJbWFnZTogYGxpbmVhci1ncmFkaWVudCh0byAke29yaWVudGF0aW9uW051bWJlcihkaXIpXX0scmdiKDAsJHt6VmFsdWV9LDApLHJnYigyNTUsJHt6VmFsdWV9LDApKWBcbiAgICB9LFxuICAgIGFyZWFHcmFkaWVudFN0eWxlczoge1xuICAgICAgYmFja2dyb3VuZEltYWdlOiBgbGluZWFyLWdyYWRpZW50KHRvICR7b3JpZW50YXRpb25bTnVtYmVyKGRpcildfSxyZ2IoMCwke3pWYWx1ZX0sMjU1KSxyZ2IoMjU1LCR7elZhbHVlfSwyNTUpKWAsXG4gICAgICBXZWJraXRNYXNrSW1hZ2U6IG1hc2tJbWFnZSxcbiAgICAgIG1hc2tJbWFnZVxuICAgIH1cbiAgfTtcbiAgcmV0dXJuIHJlc3VsdDtcbn07XG52YXIgZ2VuZXJhdGVSR0JfQiA9IChvcmllbnRhdGlvbiwgZGlyLCB6VmFsdWUpID0+IHtcbiAgY29uc3QgbWFza0ltYWdlID0gYGxpbmVhci1ncmFkaWVudCh0byAke29yaWVudGF0aW9uW051bWJlcighZGlyKV19LCB0cmFuc3BhcmVudCwgIzAwMClgO1xuICBjb25zdCByZXN1bHQgPSB7XG4gICAgYXJlYVN0eWxlczoge1xuICAgICAgYmFja2dyb3VuZEltYWdlOiBgbGluZWFyLWdyYWRpZW50KHRvICR7b3JpZW50YXRpb25bTnVtYmVyKGRpcildfSxyZ2IoMCwwLCR7elZhbHVlfSkscmdiKDI1NSwwLCR7elZhbHVlfSkpYFxuICAgIH0sXG4gICAgYXJlYUdyYWRpZW50U3R5bGVzOiB7XG4gICAgICBiYWNrZ3JvdW5kSW1hZ2U6IGBsaW5lYXItZ3JhZGllbnQodG8gJHtvcmllbnRhdGlvbltOdW1iZXIoZGlyKV19LHJnYigwLDI1NSwke3pWYWx1ZX0pLHJnYigyNTUsMjU1LCR7elZhbHVlfSkpYCxcbiAgICAgIFdlYmtpdE1hc2tJbWFnZTogbWFza0ltYWdlLFxuICAgICAgbWFza0ltYWdlXG4gICAgfVxuICB9O1xuICByZXR1cm4gcmVzdWx0O1xufTtcbnZhciBnZW5lcmF0ZUhTTF9IID0gKG9yaWVudGF0aW9uLCBkaXIsIHpWYWx1ZSkgPT4ge1xuICBjb25zdCByZXN1bHQgPSB7XG4gICAgYXJlYVN0eWxlczoge30sXG4gICAgYXJlYUdyYWRpZW50U3R5bGVzOiB7XG4gICAgICBiYWNrZ3JvdW5kOiBbXG4gICAgICAgIGBsaW5lYXItZ3JhZGllbnQodG8gJHtvcmllbnRhdGlvbltOdW1iZXIoZGlyKV19LCBoc2xhKDAsMCUsMCUsMSkgMCUsIGhzbGEoMCwwJSwwJSwwKSA1MCUsIGhzbGEoMCwwJSwxMDAlLDApIDUwJSwgaHNsYSgwLDAlLDEwMCUsMSkgMTAwJSlgLFxuICAgICAgICBgbGluZWFyLWdyYWRpZW50KHRvICR7b3JpZW50YXRpb25bTnVtYmVyKCFkaXIpXX0saHNsKDAsMCUsNTAlKSxoc2xhKDAsMCUsNTAlLDApKWAsXG4gICAgICAgIGBoc2woJHt6VmFsdWV9LCAxMDAlLCA1MCUpYFxuICAgICAgXS5qb2luKFwiLFwiKVxuICAgIH1cbiAgfTtcbiAgcmV0dXJuIHJlc3VsdDtcbn07XG52YXIgZ2VuZXJhdGVIU0xfUyA9IChvcmllbnRhdGlvbiwgZGlyLCBhbHBoYVZhbHVlKSA9PiB7XG4gIGNvbnN0IHJlc3VsdCA9IHtcbiAgICBhcmVhU3R5bGVzOiB7fSxcbiAgICBhcmVhR3JhZGllbnRTdHlsZXM6IHtcbiAgICAgIGJhY2tncm91bmQ6IFtcbiAgICAgICAgYGxpbmVhci1ncmFkaWVudCh0byAke29yaWVudGF0aW9uW051bWJlcighZGlyKV19LCBoc2xhKDAsMCUsMCUsJHthbHBoYVZhbHVlfSkgMCUsIGhzbGEoMCwwJSwwJSwwKSA1MCUsIGhzbGEoMCwwJSwxMDAlLDApIDUwJSwgaHNsYSgwLDAlLDEwMCUsJHthbHBoYVZhbHVlfSkgMTAwJSlgLFxuICAgICAgICBgbGluZWFyLWdyYWRpZW50KHRvICR7b3JpZW50YXRpb25bTnVtYmVyKGRpcildfSxoc2xhKDAsMTAwJSw1MCUsJHthbHBoYVZhbHVlfSksaHNsYSg2MCwxMDAlLDUwJSwke2FscGhhVmFsdWV9KSxoc2xhKDEyMCwxMDAlLDUwJSwke2FscGhhVmFsdWV9KSxoc2xhKDE4MCwxMDAlLDUwJSwke2FscGhhVmFsdWV9KSxoc2xhKDI0MCwxMDAlLDUwJSwke2FscGhhVmFsdWV9KSxoc2xhKDMwMCwxMDAlLDUwJSwke2FscGhhVmFsdWV9KSxoc2xhKDM1OSwxMDAlLDUwJSwke2FscGhhVmFsdWV9KSlgLFxuICAgICAgICBcImhzbCgwLCAwJSwgNTAlKVwiXG4gICAgICBdLmpvaW4oXCIsXCIpXG4gICAgfVxuICB9O1xuICByZXR1cm4gcmVzdWx0O1xufTtcbnZhciBnZW5lcmF0ZUhTTF9MID0gKG9yaWVudGF0aW9uLCBkaXIsIHpWYWx1ZSkgPT4ge1xuICBjb25zdCByZXN1bHQgPSB7XG4gICAgYXJlYVN0eWxlczoge30sXG4gICAgYXJlYUdyYWRpZW50U3R5bGVzOiB7XG4gICAgICBiYWNrZ3JvdW5kSW1hZ2U6IFtcbiAgICAgICAgYGxpbmVhci1ncmFkaWVudCh0byAke29yaWVudGF0aW9uW051bWJlcighZGlyKV19LGhzbCgwLDAlLCR7elZhbHVlfSUpLGhzbGEoMCwwJSwke3pWYWx1ZX0lLDApKWAsXG4gICAgICAgIGBsaW5lYXItZ3JhZGllbnQodG8gJHtvcmllbnRhdGlvbltOdW1iZXIoZGlyKV19LGhzbCgwLDEwMCUsJHt6VmFsdWV9JSksaHNsKDYwLDEwMCUsJHt6VmFsdWV9JSksaHNsKDEyMCwxMDAlLCR7elZhbHVlfSUpLGhzbCgxODAsMTAwJSwke3pWYWx1ZX0lKSxoc2woMjQwLDEwMCUsJHt6VmFsdWV9JSksaHNsKDMwMCwxMDAlLCR7elZhbHVlfSUpLGhzbCgzNjAsMTAwJSwke3pWYWx1ZX0lKSlgXG4gICAgICBdLmpvaW4oXCIsXCIpXG4gICAgfVxuICB9O1xuICByZXR1cm4gcmVzdWx0O1xufTtcbnZhciBnZW5lcmF0ZUhTQl9IID0gKG9yaWVudGF0aW9uLCBkaXIsIHpWYWx1ZSkgPT4ge1xuICBjb25zdCByZXN1bHQgPSB7XG4gICAgYXJlYVN0eWxlczoge30sXG4gICAgYXJlYUdyYWRpZW50U3R5bGVzOiB7XG4gICAgICBiYWNrZ3JvdW5kOiBbXG4gICAgICAgIGBsaW5lYXItZ3JhZGllbnQodG8gJHtvcmllbnRhdGlvbltOdW1iZXIoZGlyKV19LGhzbCgwLDAlLDAlKSxoc2xhKDAsMCUsMCUsMCkpYCxcbiAgICAgICAgYGxpbmVhci1ncmFkaWVudCh0byAke29yaWVudGF0aW9uW051bWJlcighZGlyKV19LGhzbCgwLDAlLDEwMCUpLGhzbGEoMCwwJSwxMDAlLDApKWAsXG4gICAgICAgIGBoc2woJHt6VmFsdWV9LCAxMDAlLCA1MCUpYFxuICAgICAgXS5qb2luKFwiLFwiKVxuICAgIH1cbiAgfTtcbiAgcmV0dXJuIHJlc3VsdDtcbn07XG52YXIgZ2VuZXJhdGVIU0JfUyA9IChvcmllbnRhdGlvbiwgZGlyLCBhbHBoYVZhbHVlKSA9PiB7XG4gIGNvbnN0IHJlc3VsdCA9IHtcbiAgICBhcmVhU3R5bGVzOiB7fSxcbiAgICBhcmVhR3JhZGllbnRTdHlsZXM6IHtcbiAgICAgIGJhY2tncm91bmQ6IFtcbiAgICAgICAgYGxpbmVhci1ncmFkaWVudCh0byAke29yaWVudGF0aW9uW051bWJlcighZGlyKV19LGhzbGEoMCwwJSwwJSwke2FscGhhVmFsdWV9KSxoc2xhKDAsMCUsMCUsMCkpYCxcbiAgICAgICAgYGxpbmVhci1ncmFkaWVudCh0byAke29yaWVudGF0aW9uW051bWJlcihkaXIpXX0saHNsYSgwLDEwMCUsNTAlLCR7YWxwaGFWYWx1ZX0pLGhzbGEoNjAsMTAwJSw1MCUsJHthbHBoYVZhbHVlfSksaHNsYSgxMjAsMTAwJSw1MCUsJHthbHBoYVZhbHVlfSksaHNsYSgxODAsMTAwJSw1MCUsJHthbHBoYVZhbHVlfSksaHNsYSgyNDAsMTAwJSw1MCUsJHthbHBoYVZhbHVlfSksaHNsYSgzMDAsMTAwJSw1MCUsJHthbHBoYVZhbHVlfSksaHNsYSgzNTksMTAwJSw1MCUsJHthbHBoYVZhbHVlfSkpYCxcbiAgICAgICAgYGxpbmVhci1ncmFkaWVudCh0byAke29yaWVudGF0aW9uW051bWJlcighZGlyKV19LGhzbCgwLDAlLDAlKSxoc2woMCwwJSwxMDAlKSlgXG4gICAgICBdLmpvaW4oXCIsXCIpXG4gICAgfVxuICB9O1xuICByZXR1cm4gcmVzdWx0O1xufTtcbnZhciBnZW5lcmF0ZUhTQl9CID0gKG9yaWVudGF0aW9uLCBkaXIsIGFscGhhVmFsdWUpID0+IHtcbiAgY29uc3QgcmVzdWx0ID0ge1xuICAgIGFyZWFTdHlsZXM6IHt9LFxuICAgIGFyZWFHcmFkaWVudFN0eWxlczoge1xuICAgICAgYmFja2dyb3VuZDogW1xuICAgICAgICBgbGluZWFyLWdyYWRpZW50KHRvICR7b3JpZW50YXRpb25bTnVtYmVyKCFkaXIpXX0saHNsYSgwLDAlLDEwMCUsJHthbHBoYVZhbHVlfSksaHNsYSgwLDAlLDEwMCUsMCkpYCxcbiAgICAgICAgYGxpbmVhci1ncmFkaWVudCh0byAke29yaWVudGF0aW9uW051bWJlcihkaXIpXX0saHNsYSgwLDEwMCUsNTAlLCR7YWxwaGFWYWx1ZX0pLGhzbGEoNjAsMTAwJSw1MCUsJHthbHBoYVZhbHVlfSksaHNsYSgxMjAsMTAwJSw1MCUsJHthbHBoYVZhbHVlfSksaHNsYSgxODAsMTAwJSw1MCUsJHthbHBoYVZhbHVlfSksaHNsYSgyNDAsMTAwJSw1MCUsJHthbHBoYVZhbHVlfSksaHNsYSgzMDAsMTAwJSw1MCUsJHthbHBoYVZhbHVlfSksaHNsYSgzNTksMTAwJSw1MCUsJHthbHBoYVZhbHVlfSkpYCxcbiAgICAgICAgXCIjMDAwXCJcbiAgICAgIF0uam9pbihcIixcIilcbiAgICB9XG4gIH07XG4gIHJldHVybiByZXN1bHQ7XG59O1xuXG4vLyBzcmMvYXJlYS1ncmFkaWVudC50c1xuZnVuY3Rpb24gZ2V0Q29sb3JBcmVhR3JhZGllbnQoY29sb3IsIG9wdGlvbnMpIHtcbiAgY29uc3QgeyB4Q2hhbm5lbCwgeUNoYW5uZWwsIGRpcjogZGlyUHJvcCA9IFwibHRyXCIgfSA9IG9wdGlvbnM7XG4gIGNvbnN0IHsgekNoYW5uZWwgfSA9IGNvbG9yLmdldENvbG9yQXhlcyh7IHhDaGFubmVsLCB5Q2hhbm5lbCB9KTtcbiAgY29uc3QgelZhbHVlID0gY29sb3IuZ2V0Q2hhbm5lbFZhbHVlKHpDaGFubmVsKTtcbiAgY29uc3QgeyBtaW5WYWx1ZTogek1pbiwgbWF4VmFsdWU6IHpNYXggfSA9IGNvbG9yLmdldENoYW5uZWxSYW5nZSh6Q2hhbm5lbCk7XG4gIGNvbnN0IG9yaWVudGF0aW9uID0gW1widG9wXCIsIGRpclByb3AgPT09IFwicnRsXCIgPyBcImxlZnRcIiA6IFwicmlnaHRcIl07XG4gIGxldCBkaXIgPSBmYWxzZTtcbiAgbGV0IGJhY2tncm91bmQgPSB7IGFyZWFTdHlsZXM6IHt9LCBhcmVhR3JhZGllbnRTdHlsZXM6IHt9IH07XG4gIGxldCBhbHBoYVZhbHVlID0gKHpWYWx1ZSAtIHpNaW4pIC8gKHpNYXggLSB6TWluKTtcbiAgbGV0IGlzSFNMID0gY29sb3IuZ2V0Rm9ybWF0KCkgPT09IFwiaHNsYVwiO1xuICBzd2l0Y2ggKHpDaGFubmVsKSB7XG4gICAgY2FzZSBcInJlZFwiOiB7XG4gICAgICBkaXIgPSB4Q2hhbm5lbCA9PT0gXCJncmVlblwiO1xuICAgICAgYmFja2dyb3VuZCA9IGdlbmVyYXRlUkdCX1Iob3JpZW50YXRpb24sIGRpciwgelZhbHVlKTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgICBjYXNlIFwiZ3JlZW5cIjoge1xuICAgICAgZGlyID0geENoYW5uZWwgPT09IFwicmVkXCI7XG4gICAgICBiYWNrZ3JvdW5kID0gZ2VuZXJhdGVSR0JfRyhvcmllbnRhdGlvbiwgZGlyLCB6VmFsdWUpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICAgIGNhc2UgXCJibHVlXCI6IHtcbiAgICAgIGRpciA9IHhDaGFubmVsID09PSBcInJlZFwiO1xuICAgICAgYmFja2dyb3VuZCA9IGdlbmVyYXRlUkdCX0Iob3JpZW50YXRpb24sIGRpciwgelZhbHVlKTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgICBjYXNlIFwiaHVlXCI6IHtcbiAgICAgIGRpciA9IHhDaGFubmVsICE9PSBcInNhdHVyYXRpb25cIjtcbiAgICAgIGlmIChpc0hTTCkge1xuICAgICAgICBiYWNrZ3JvdW5kID0gZ2VuZXJhdGVIU0xfSChvcmllbnRhdGlvbiwgZGlyLCB6VmFsdWUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYmFja2dyb3VuZCA9IGdlbmVyYXRlSFNCX0gob3JpZW50YXRpb24sIGRpciwgelZhbHVlKTtcbiAgICAgIH1cbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgICBjYXNlIFwic2F0dXJhdGlvblwiOiB7XG4gICAgICBkaXIgPSB4Q2hhbm5lbCA9PT0gXCJodWVcIjtcbiAgICAgIGlmIChpc0hTTCkge1xuICAgICAgICBiYWNrZ3JvdW5kID0gZ2VuZXJhdGVIU0xfUyhvcmllbnRhdGlvbiwgZGlyLCBhbHBoYVZhbHVlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGJhY2tncm91bmQgPSBnZW5lcmF0ZUhTQl9TKG9yaWVudGF0aW9uLCBkaXIsIGFscGhhVmFsdWUpO1xuICAgICAgfVxuICAgICAgYnJlYWs7XG4gICAgfVxuICAgIGNhc2UgXCJicmlnaHRuZXNzXCI6IHtcbiAgICAgIGRpciA9IHhDaGFubmVsID09PSBcImh1ZVwiO1xuICAgICAgYmFja2dyb3VuZCA9IGdlbmVyYXRlSFNCX0Iob3JpZW50YXRpb24sIGRpciwgYWxwaGFWYWx1ZSk7XG4gICAgICBicmVhaztcbiAgICB9XG4gICAgY2FzZSBcImxpZ2h0bmVzc1wiOiB7XG4gICAgICBkaXIgPSB4Q2hhbm5lbCA9PT0gXCJodWVcIjtcbiAgICAgIGJhY2tncm91bmQgPSBnZW5lcmF0ZUhTTF9MKG9yaWVudGF0aW9uLCBkaXIsIHpWYWx1ZSk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGJhY2tncm91bmQ7XG59XG52YXIgaXNFcXVhbE9iamVjdCA9IChhLCBiKSA9PiB7XG4gIGlmIChPYmplY3Qua2V5cyhhKS5sZW5ndGggIT09IE9iamVjdC5rZXlzKGIpLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuICBmb3IgKGxldCBrZXkgaW4gYSkgaWYgKGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG4gIHJldHVybiB0cnVlO1xufTtcbnZhciBDb2xvciA9IGNsYXNzIHtcbiAgdG9IZXhJbnQoKSB7XG4gICAgcmV0dXJuIHRoaXMudG9Gb3JtYXQoXCJyZ2JhXCIpLnRvSGV4SW50KCk7XG4gIH1cbiAgZ2V0Q2hhbm5lbFZhbHVlKGNoYW5uZWwpIHtcbiAgICBpZiAoY2hhbm5lbCBpbiB0aGlzKSByZXR1cm4gdGhpc1tjaGFubmVsXTtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJVbnN1cHBvcnRlZCBjb2xvciBjaGFubmVsOiBcIiArIGNoYW5uZWwpO1xuICB9XG4gIGdldENoYW5uZWxWYWx1ZVBlcmNlbnQoY2hhbm5lbCwgdmFsdWVUb0NoZWNrKSB7XG4gICAgY29uc3QgdmFsdWUgPSB2YWx1ZVRvQ2hlY2sgPz8gdGhpcy5nZXRDaGFubmVsVmFsdWUoY2hhbm5lbCk7XG4gICAgY29uc3QgeyBtaW5WYWx1ZSwgbWF4VmFsdWUgfSA9IHRoaXMuZ2V0Q2hhbm5lbFJhbmdlKGNoYW5uZWwpO1xuICAgIHJldHVybiBnZXRWYWx1ZVBlcmNlbnQodmFsdWUsIG1pblZhbHVlLCBtYXhWYWx1ZSk7XG4gIH1cbiAgZ2V0Q2hhbm5lbFBlcmNlbnRWYWx1ZShjaGFubmVsLCBwZXJjZW50VG9DaGVjaykge1xuICAgIGNvbnN0IHsgbWluVmFsdWUsIG1heFZhbHVlLCBzdGVwIH0gPSB0aGlzLmdldENoYW5uZWxSYW5nZShjaGFubmVsKTtcbiAgICBjb25zdCBwZXJjZW50VmFsdWUgPSBnZXRQZXJjZW50VmFsdWUocGVyY2VudFRvQ2hlY2ssIG1pblZhbHVlLCBtYXhWYWx1ZSwgc3RlcCk7XG4gICAgcmV0dXJuIHNuYXBWYWx1ZVRvU3RlcChwZXJjZW50VmFsdWUsIG1pblZhbHVlLCBtYXhWYWx1ZSwgc3RlcCk7XG4gIH1cbiAgd2l0aENoYW5uZWxWYWx1ZShjaGFubmVsLCB2YWx1ZSkge1xuICAgIGNvbnN0IHsgbWluVmFsdWUsIG1heFZhbHVlIH0gPSB0aGlzLmdldENoYW5uZWxSYW5nZShjaGFubmVsKTtcbiAgICBpZiAoY2hhbm5lbCBpbiB0aGlzKSB7XG4gICAgICBsZXQgY2xvbmUgPSB0aGlzLmNsb25lKCk7XG4gICAgICBjbG9uZVtjaGFubmVsXSA9IGNsYW1wVmFsdWUodmFsdWUsIG1pblZhbHVlLCBtYXhWYWx1ZSk7XG4gICAgICByZXR1cm4gY2xvbmU7XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcihcIlVuc3VwcG9ydGVkIGNvbG9yIGNoYW5uZWw6IFwiICsgY2hhbm5lbCk7XG4gIH1cbiAgZ2V0Q29sb3JBeGVzKHh5Q2hhbm5lbHMpIHtcbiAgICBsZXQgeyB4Q2hhbm5lbCwgeUNoYW5uZWwgfSA9IHh5Q2hhbm5lbHM7XG4gICAgbGV0IHhDaCA9IHhDaGFubmVsIHx8IHRoaXMuZ2V0Q2hhbm5lbHMoKS5maW5kKChjKSA9PiBjICE9PSB5Q2hhbm5lbCk7XG4gICAgbGV0IHlDaCA9IHlDaGFubmVsIHx8IHRoaXMuZ2V0Q2hhbm5lbHMoKS5maW5kKChjKSA9PiBjICE9PSB4Q2gpO1xuICAgIGxldCB6Q2ggPSB0aGlzLmdldENoYW5uZWxzKCkuZmluZCgoYykgPT4gYyAhPT0geENoICYmIGMgIT09IHlDaCk7XG4gICAgcmV0dXJuIHsgeENoYW5uZWw6IHhDaCwgeUNoYW5uZWw6IHlDaCwgekNoYW5uZWw6IHpDaCB9O1xuICB9XG4gIGluY3JlbWVudENoYW5uZWwoY2hhbm5lbCwgc3RlcFNpemUpIHtcbiAgICBjb25zdCB7IG1pblZhbHVlLCBtYXhWYWx1ZSwgc3RlcCB9ID0gdGhpcy5nZXRDaGFubmVsUmFuZ2UoY2hhbm5lbCk7XG4gICAgY29uc3QgdmFsdWUgPSBzbmFwVmFsdWVUb1N0ZXAoXG4gICAgICBjbGFtcFZhbHVlKHRoaXMuZ2V0Q2hhbm5lbFZhbHVlKGNoYW5uZWwpICsgc3RlcFNpemUsIG1pblZhbHVlLCBtYXhWYWx1ZSksXG4gICAgICBtaW5WYWx1ZSxcbiAgICAgIG1heFZhbHVlLFxuICAgICAgc3RlcFxuICAgICk7XG4gICAgcmV0dXJuIHRoaXMud2l0aENoYW5uZWxWYWx1ZShjaGFubmVsLCB2YWx1ZSk7XG4gIH1cbiAgZGVjcmVtZW50Q2hhbm5lbChjaGFubmVsLCBzdGVwU2l6ZSkge1xuICAgIHJldHVybiB0aGlzLmluY3JlbWVudENoYW5uZWwoY2hhbm5lbCwgLXN0ZXBTaXplKTtcbiAgfVxuICBpc0VxdWFsKGNvbG9yKSB7XG4gICAgY29uc3QgaXNTYW1lID0gaXNFcXVhbE9iamVjdCh0aGlzLnRvSlNPTigpLCBjb2xvci50b0pTT04oKSk7XG4gICAgcmV0dXJuIGlzU2FtZSAmJiB0aGlzLmdldENoYW5uZWxWYWx1ZShcImFscGhhXCIpID09PSBjb2xvci5nZXRDaGFubmVsVmFsdWUoXCJhbHBoYVwiKTtcbiAgfVxufTtcbnZhciBfUkdCQ29sb3IgPSBjbGFzcyBfUkdCQ29sb3IgZXh0ZW5kcyBDb2xvciB7XG4gIGNvbnN0cnVjdG9yKHJlZCwgZ3JlZW4sIGJsdWUsIGFscGhhKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLnJlZCA9IHJlZDtcbiAgICB0aGlzLmdyZWVuID0gZ3JlZW47XG4gICAgdGhpcy5ibHVlID0gYmx1ZTtcbiAgICB0aGlzLmFscGhhID0gYWxwaGE7XG4gIH1cbiAgc3RhdGljIHBhcnNlKHZhbHVlKSB7XG4gICAgbGV0IGNvbG9ycyA9IFtdO1xuICAgIGlmICgvXiNbXFxkYS1mXSskL2kudGVzdCh2YWx1ZSkgJiYgWzQsIDUsIDcsIDldLmluY2x1ZGVzKHZhbHVlLmxlbmd0aCkpIHtcbiAgICAgIGNvbnN0IHZhbHVlcyA9ICh2YWx1ZS5sZW5ndGggPCA2ID8gdmFsdWUucmVwbGFjZSgvW14jXS9naSwgXCIkJiQmXCIpIDogdmFsdWUpLnNsaWNlKDEpLnNwbGl0KFwiXCIpO1xuICAgICAgd2hpbGUgKHZhbHVlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgIGNvbG9ycy5wdXNoKHBhcnNlSW50KHZhbHVlcy5zcGxpY2UoMCwgMikuam9pbihcIlwiKSwgMTYpKTtcbiAgICAgIH1cbiAgICAgIGNvbG9yc1szXSA9IGNvbG9yc1szXSAhPT0gdm9pZCAwID8gY29sb3JzWzNdIC8gMjU1IDogdm9pZCAwO1xuICAgIH1cbiAgICBjb25zdCBtYXRjaCA9IHZhbHVlLm1hdGNoKC9ecmdiYT9cXCgoLiopXFwpJC8pO1xuICAgIGlmIChtYXRjaD8uWzFdKSB7XG4gICAgICBjb2xvcnMgPSBtYXRjaFsxXS5zcGxpdChcIixcIikubWFwKCh2YWx1ZTIpID0+IE51bWJlcih2YWx1ZTIudHJpbSgpKSkubWFwKChudW0sIGkpID0+IGNsYW1wVmFsdWUobnVtLCAwLCBpIDwgMyA/IDI1NSA6IDEpKTtcbiAgICB9XG4gICAgcmV0dXJuIGNvbG9ycy5sZW5ndGggPCAzID8gdm9pZCAwIDogbmV3IF9SR0JDb2xvcihjb2xvcnNbMF0sIGNvbG9yc1sxXSwgY29sb3JzWzJdLCBjb2xvcnNbM10gPz8gMSk7XG4gIH1cbiAgdG9TdHJpbmcoZm9ybWF0KSB7XG4gICAgc3dpdGNoIChmb3JtYXQpIHtcbiAgICAgIGNhc2UgXCJoZXhcIjpcbiAgICAgICAgcmV0dXJuIFwiI1wiICsgKHRoaXMucmVkLnRvU3RyaW5nKDE2KS5wYWRTdGFydCgyLCBcIjBcIikgKyB0aGlzLmdyZWVuLnRvU3RyaW5nKDE2KS5wYWRTdGFydCgyLCBcIjBcIikgKyB0aGlzLmJsdWUudG9TdHJpbmcoMTYpLnBhZFN0YXJ0KDIsIFwiMFwiKSkudG9VcHBlckNhc2UoKTtcbiAgICAgIGNhc2UgXCJoZXhhXCI6XG4gICAgICAgIHJldHVybiBcIiNcIiArICh0aGlzLnJlZC50b1N0cmluZygxNikucGFkU3RhcnQoMiwgXCIwXCIpICsgdGhpcy5ncmVlbi50b1N0cmluZygxNikucGFkU3RhcnQoMiwgXCIwXCIpICsgdGhpcy5ibHVlLnRvU3RyaW5nKDE2KS5wYWRTdGFydCgyLCBcIjBcIikgKyBNYXRoLnJvdW5kKHRoaXMuYWxwaGEgKiAyNTUpLnRvU3RyaW5nKDE2KS5wYWRTdGFydCgyLCBcIjBcIikpLnRvVXBwZXJDYXNlKCk7XG4gICAgICBjYXNlIFwicmdiXCI6XG4gICAgICAgIHJldHVybiBgcmdiKCR7dGhpcy5yZWR9LCAke3RoaXMuZ3JlZW59LCAke3RoaXMuYmx1ZX0pYDtcbiAgICAgIGNhc2UgXCJjc3NcIjpcbiAgICAgIGNhc2UgXCJyZ2JhXCI6XG4gICAgICAgIHJldHVybiBgcmdiYSgke3RoaXMucmVkfSwgJHt0aGlzLmdyZWVufSwgJHt0aGlzLmJsdWV9LCAke3RoaXMuYWxwaGF9KWA7XG4gICAgICBjYXNlIFwiaHNsXCI6XG4gICAgICAgIHJldHVybiB0aGlzLnRvSFNMKCkudG9TdHJpbmcoXCJoc2xcIik7XG4gICAgICBjYXNlIFwiaHNiXCI6XG4gICAgICAgIHJldHVybiB0aGlzLnRvSFNCKCkudG9TdHJpbmcoXCJoc2JcIik7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gdGhpcy50b0Zvcm1hdChmb3JtYXQpLnRvU3RyaW5nKGZvcm1hdCk7XG4gICAgfVxuICB9XG4gIHRvRm9ybWF0KGZvcm1hdCkge1xuICAgIHN3aXRjaCAoZm9ybWF0KSB7XG4gICAgICBjYXNlIFwicmdiYVwiOlxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgIGNhc2UgXCJoc2JhXCI6XG4gICAgICAgIHJldHVybiB0aGlzLnRvSFNCKCk7XG4gICAgICBjYXNlIFwiaHNsYVwiOlxuICAgICAgICByZXR1cm4gdGhpcy50b0hTTCgpO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVW5zdXBwb3J0ZWQgY29sb3IgY29udmVyc2lvbjogcmdiIC0+IFwiICsgZm9ybWF0KTtcbiAgICB9XG4gIH1cbiAgdG9IZXhJbnQoKSB7XG4gICAgcmV0dXJuIHRoaXMucmVkIDw8IDE2IHwgdGhpcy5ncmVlbiA8PCA4IHwgdGhpcy5ibHVlO1xuICB9XG4gIC8qKlxuICAgKiBDb252ZXJ0cyBhbiBSR0IgY29sb3IgdmFsdWUgdG8gSFNCLlxuICAgKiBDb252ZXJzaW9uIGZvcm11bGEgYWRhcHRlZCBmcm9tIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0hTTF9hbmRfSFNWI0Zyb21fUkdCLlxuICAgKiBAcmV0dXJucyBBbiBIU0JDb2xvciBvYmplY3QuXG4gICAqL1xuICB0b0hTQigpIHtcbiAgICBjb25zdCByZWQgPSB0aGlzLnJlZCAvIDI1NTtcbiAgICBjb25zdCBncmVlbiA9IHRoaXMuZ3JlZW4gLyAyNTU7XG4gICAgY29uc3QgYmx1ZSA9IHRoaXMuYmx1ZSAvIDI1NTtcbiAgICBjb25zdCBtaW4gPSBNYXRoLm1pbihyZWQsIGdyZWVuLCBibHVlKTtcbiAgICBjb25zdCBicmlnaHRuZXNzID0gTWF0aC5tYXgocmVkLCBncmVlbiwgYmx1ZSk7XG4gICAgY29uc3QgY2hyb21hID0gYnJpZ2h0bmVzcyAtIG1pbjtcbiAgICBjb25zdCBzYXR1cmF0aW9uID0gYnJpZ2h0bmVzcyA9PT0gMCA/IDAgOiBjaHJvbWEgLyBicmlnaHRuZXNzO1xuICAgIGxldCBodWUgPSAwO1xuICAgIGlmIChjaHJvbWEgIT09IDApIHtcbiAgICAgIHN3aXRjaCAoYnJpZ2h0bmVzcykge1xuICAgICAgICBjYXNlIHJlZDpcbiAgICAgICAgICBodWUgPSAoZ3JlZW4gLSBibHVlKSAvIGNocm9tYSArIChncmVlbiA8IGJsdWUgPyA2IDogMCk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgZ3JlZW46XG4gICAgICAgICAgaHVlID0gKGJsdWUgLSByZWQpIC8gY2hyb21hICsgMjtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBibHVlOlxuICAgICAgICAgIGh1ZSA9IChyZWQgLSBncmVlbikgLyBjaHJvbWEgKyA0O1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgaHVlIC89IDY7XG4gICAgfVxuICAgIHJldHVybiBuZXcgSFNCQ29sb3IoXG4gICAgICB0b0ZpeGVkTnVtYmVyKGh1ZSAqIDM2MCwgMiksXG4gICAgICB0b0ZpeGVkTnVtYmVyKHNhdHVyYXRpb24gKiAxMDAsIDIpLFxuICAgICAgdG9GaXhlZE51bWJlcihicmlnaHRuZXNzICogMTAwLCAyKSxcbiAgICAgIHRvRml4ZWROdW1iZXIodGhpcy5hbHBoYSwgMilcbiAgICApO1xuICB9XG4gIC8qKlxuICAgKiBDb252ZXJ0cyBhbiBSR0IgY29sb3IgdmFsdWUgdG8gSFNMLlxuICAgKiBDb252ZXJzaW9uIGZvcm11bGEgYWRhcHRlZCBmcm9tIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0hTTF9hbmRfSFNWI0Zyb21fUkdCLlxuICAgKiBAcmV0dXJucyBBbiBIU0xDb2xvciBvYmplY3QuXG4gICAqL1xuICB0b0hTTCgpIHtcbiAgICBjb25zdCByZWQgPSB0aGlzLnJlZCAvIDI1NTtcbiAgICBjb25zdCBncmVlbiA9IHRoaXMuZ3JlZW4gLyAyNTU7XG4gICAgY29uc3QgYmx1ZSA9IHRoaXMuYmx1ZSAvIDI1NTtcbiAgICBjb25zdCBtaW4gPSBNYXRoLm1pbihyZWQsIGdyZWVuLCBibHVlKTtcbiAgICBjb25zdCBtYXggPSBNYXRoLm1heChyZWQsIGdyZWVuLCBibHVlKTtcbiAgICBjb25zdCBsaWdodG5lc3MgPSAobWF4ICsgbWluKSAvIDI7XG4gICAgY29uc3QgY2hyb21hID0gbWF4IC0gbWluO1xuICAgIGxldCBodWUgPSAtMTtcbiAgICBsZXQgc2F0dXJhdGlvbiA9IC0xO1xuICAgIGlmIChjaHJvbWEgPT09IDApIHtcbiAgICAgIGh1ZSA9IHNhdHVyYXRpb24gPSAwO1xuICAgIH0gZWxzZSB7XG4gICAgICBzYXR1cmF0aW9uID0gY2hyb21hIC8gKGxpZ2h0bmVzcyA8IDAuNSA/IG1heCArIG1pbiA6IDIgLSBtYXggLSBtaW4pO1xuICAgICAgc3dpdGNoIChtYXgpIHtcbiAgICAgICAgY2FzZSByZWQ6XG4gICAgICAgICAgaHVlID0gKGdyZWVuIC0gYmx1ZSkgLyBjaHJvbWEgKyAoZ3JlZW4gPCBibHVlID8gNiA6IDApO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIGdyZWVuOlxuICAgICAgICAgIGh1ZSA9IChibHVlIC0gcmVkKSAvIGNocm9tYSArIDI7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgYmx1ZTpcbiAgICAgICAgICBodWUgPSAocmVkIC0gZ3JlZW4pIC8gY2hyb21hICsgNDtcbiAgICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGh1ZSAvPSA2O1xuICAgIH1cbiAgICByZXR1cm4gbmV3IEhTTENvbG9yKFxuICAgICAgdG9GaXhlZE51bWJlcihodWUgKiAzNjAsIDIpLFxuICAgICAgdG9GaXhlZE51bWJlcihzYXR1cmF0aW9uICogMTAwLCAyKSxcbiAgICAgIHRvRml4ZWROdW1iZXIobGlnaHRuZXNzICogMTAwLCAyKSxcbiAgICAgIHRvRml4ZWROdW1iZXIodGhpcy5hbHBoYSwgMilcbiAgICApO1xuICB9XG4gIGNsb25lKCkge1xuICAgIHJldHVybiBuZXcgX1JHQkNvbG9yKHRoaXMucmVkLCB0aGlzLmdyZWVuLCB0aGlzLmJsdWUsIHRoaXMuYWxwaGEpO1xuICB9XG4gIGdldENoYW5uZWxGb3JtYXRPcHRpb25zKGNoYW5uZWwpIHtcbiAgICBzd2l0Y2ggKGNoYW5uZWwpIHtcbiAgICAgIGNhc2UgXCJyZWRcIjpcbiAgICAgIGNhc2UgXCJncmVlblwiOlxuICAgICAgY2FzZSBcImJsdWVcIjpcbiAgICAgICAgcmV0dXJuIHsgc3R5bGU6IFwiZGVjaW1hbFwiIH07XG4gICAgICBjYXNlIFwiYWxwaGFcIjpcbiAgICAgICAgcmV0dXJuIHsgc3R5bGU6IFwicGVyY2VudFwiIH07XG4gICAgICBkZWZhdWx0OlxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJVbmtub3duIGNvbG9yIGNoYW5uZWw6IFwiICsgY2hhbm5lbCk7XG4gICAgfVxuICB9XG4gIGZvcm1hdENoYW5uZWxWYWx1ZShjaGFubmVsLCBsb2NhbGUpIHtcbiAgICBsZXQgb3B0aW9ucyA9IHRoaXMuZ2V0Q2hhbm5lbEZvcm1hdE9wdGlvbnMoY2hhbm5lbCk7XG4gICAgbGV0IHZhbHVlID0gdGhpcy5nZXRDaGFubmVsVmFsdWUoY2hhbm5lbCk7XG4gICAgcmV0dXJuIG5ldyBJbnRsLk51bWJlckZvcm1hdChsb2NhbGUsIG9wdGlvbnMpLmZvcm1hdCh2YWx1ZSk7XG4gIH1cbiAgZ2V0Q2hhbm5lbFJhbmdlKGNoYW5uZWwpIHtcbiAgICBzd2l0Y2ggKGNoYW5uZWwpIHtcbiAgICAgIGNhc2UgXCJyZWRcIjpcbiAgICAgIGNhc2UgXCJncmVlblwiOlxuICAgICAgY2FzZSBcImJsdWVcIjpcbiAgICAgICAgcmV0dXJuIHsgbWluVmFsdWU6IDAsIG1heFZhbHVlOiAyNTUsIHN0ZXA6IDEsIHBhZ2VTaXplOiAxNyB9O1xuICAgICAgY2FzZSBcImFscGhhXCI6XG4gICAgICAgIHJldHVybiB7IG1pblZhbHVlOiAwLCBtYXhWYWx1ZTogMSwgc3RlcDogMC4wMSwgcGFnZVNpemU6IDAuMSB9O1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVW5rbm93biBjb2xvciBjaGFubmVsOiBcIiArIGNoYW5uZWwpO1xuICAgIH1cbiAgfVxuICB0b0pTT04oKSB7XG4gICAgcmV0dXJuIHsgcjogdGhpcy5yZWQsIGc6IHRoaXMuZ3JlZW4sIGI6IHRoaXMuYmx1ZSwgYTogdGhpcy5hbHBoYSB9O1xuICB9XG4gIGdldEZvcm1hdCgpIHtcbiAgICByZXR1cm4gXCJyZ2JhXCI7XG4gIH1cbiAgZ2V0Q2hhbm5lbHMoKSB7XG4gICAgcmV0dXJuIF9SR0JDb2xvci5jb2xvckNoYW5uZWxzO1xuICB9XG59O1xuX19wdWJsaWNGaWVsZChfUkdCQ29sb3IsIFwiY29sb3JDaGFubmVsc1wiLCBbXCJyZWRcIiwgXCJncmVlblwiLCBcImJsdWVcIl0pO1xudmFyIFJHQkNvbG9yID0gX1JHQkNvbG9yO1xuXG4vLyBzcmMvaHNsLWNvbG9yLnRzXG52YXIgSFNMX1JFR0VYID0gL2hzbFxcKChbLStdP1xcZCsoPzouXFxkKyk/XFxzKixcXHMqWy0rXT9cXGQrKD86LlxcZCspPyVcXHMqLFxccypbLStdP1xcZCsoPzouXFxkKyk/JSlcXCl8aHNsYVxcKChbLStdP1xcZCsoPzouXFxkKyk/XFxzKixcXHMqWy0rXT9cXGQrKD86LlxcZCspPyVcXHMqLFxccypbLStdP1xcZCsoPzouXFxkKyk/JVxccyosXFxzKlstK10/XFxkKC5cXGQrKT8pXFwpLztcbnZhciBfSFNMQ29sb3IgPSBjbGFzcyBfSFNMQ29sb3IgZXh0ZW5kcyBDb2xvciB7XG4gIGNvbnN0cnVjdG9yKGh1ZSwgc2F0dXJhdGlvbiwgbGlnaHRuZXNzLCBhbHBoYSkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5odWUgPSBodWU7XG4gICAgdGhpcy5zYXR1cmF0aW9uID0gc2F0dXJhdGlvbjtcbiAgICB0aGlzLmxpZ2h0bmVzcyA9IGxpZ2h0bmVzcztcbiAgICB0aGlzLmFscGhhID0gYWxwaGE7XG4gIH1cbiAgc3RhdGljIHBhcnNlKHZhbHVlKSB7XG4gICAgbGV0IG07XG4gICAgaWYgKG0gPSB2YWx1ZS5tYXRjaChIU0xfUkVHRVgpKSB7XG4gICAgICBjb25zdCBbaCwgcywgbCwgYV0gPSAobVsxXSA/PyBtWzJdKS5zcGxpdChcIixcIikubWFwKChuKSA9PiBOdW1iZXIobi50cmltKCkucmVwbGFjZShcIiVcIiwgXCJcIikpKTtcbiAgICAgIHJldHVybiBuZXcgX0hTTENvbG9yKG1vZChoLCAzNjApLCBjbGFtcFZhbHVlKHMsIDAsIDEwMCksIGNsYW1wVmFsdWUobCwgMCwgMTAwKSwgY2xhbXBWYWx1ZShhID8/IDEsIDAsIDEpKTtcbiAgICB9XG4gIH1cbiAgdG9TdHJpbmcoZm9ybWF0KSB7XG4gICAgc3dpdGNoIChmb3JtYXQpIHtcbiAgICAgIGNhc2UgXCJoZXhcIjpcbiAgICAgICAgcmV0dXJuIHRoaXMudG9SR0IoKS50b1N0cmluZyhcImhleFwiKTtcbiAgICAgIGNhc2UgXCJoZXhhXCI6XG4gICAgICAgIHJldHVybiB0aGlzLnRvUkdCKCkudG9TdHJpbmcoXCJoZXhhXCIpO1xuICAgICAgY2FzZSBcImhzbFwiOlxuICAgICAgICByZXR1cm4gYGhzbCgke3RoaXMuaHVlfSwgJHt0b0ZpeGVkTnVtYmVyKHRoaXMuc2F0dXJhdGlvbiwgMil9JSwgJHt0b0ZpeGVkTnVtYmVyKHRoaXMubGlnaHRuZXNzLCAyKX0lKWA7XG4gICAgICBjYXNlIFwiY3NzXCI6XG4gICAgICBjYXNlIFwiaHNsYVwiOlxuICAgICAgICByZXR1cm4gYGhzbGEoJHt0aGlzLmh1ZX0sICR7dG9GaXhlZE51bWJlcih0aGlzLnNhdHVyYXRpb24sIDIpfSUsICR7dG9GaXhlZE51bWJlcih0aGlzLmxpZ2h0bmVzcywgMil9JSwgJHt0aGlzLmFscGhhfSlgO1xuICAgICAgY2FzZSBcImhzYlwiOlxuICAgICAgICByZXR1cm4gdGhpcy50b0hTQigpLnRvU3RyaW5nKFwiaHNiXCIpO1xuICAgICAgY2FzZSBcInJnYlwiOlxuICAgICAgICByZXR1cm4gdGhpcy50b1JHQigpLnRvU3RyaW5nKFwicmdiXCIpO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIHRoaXMudG9Gb3JtYXQoZm9ybWF0KS50b1N0cmluZyhmb3JtYXQpO1xuICAgIH1cbiAgfVxuICB0b0Zvcm1hdChmb3JtYXQpIHtcbiAgICBzd2l0Y2ggKGZvcm1hdCkge1xuICAgICAgY2FzZSBcImhzbGFcIjpcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICBjYXNlIFwiaHNiYVwiOlxuICAgICAgICByZXR1cm4gdGhpcy50b0hTQigpO1xuICAgICAgY2FzZSBcInJnYmFcIjpcbiAgICAgICAgcmV0dXJuIHRoaXMudG9SR0IoKTtcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlVuc3VwcG9ydGVkIGNvbG9yIGNvbnZlcnNpb246IGhzbCAtPiBcIiArIGZvcm1hdCk7XG4gICAgfVxuICB9XG4gIC8qKlxuICAgKiBDb252ZXJ0cyBhIEhTTCBjb2xvciB0byBIU0IuXG4gICAqIENvbnZlcnNpb24gZm9ybXVsYSBhZGFwdGVkIGZyb20gaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvSFNMX2FuZF9IU1YjSFNMX3RvX0hTVi5cbiAgICogQHJldHVybnMgQW4gSFNCQ29sb3Igb2JqZWN0LlxuICAgKi9cbiAgdG9IU0IoKSB7XG4gICAgbGV0IHNhdHVyYXRpb24gPSB0aGlzLnNhdHVyYXRpb24gLyAxMDA7XG4gICAgbGV0IGxpZ2h0bmVzcyA9IHRoaXMubGlnaHRuZXNzIC8gMTAwO1xuICAgIGxldCBicmlnaHRuZXNzID0gbGlnaHRuZXNzICsgc2F0dXJhdGlvbiAqIE1hdGgubWluKGxpZ2h0bmVzcywgMSAtIGxpZ2h0bmVzcyk7XG4gICAgc2F0dXJhdGlvbiA9IGJyaWdodG5lc3MgPT09IDAgPyAwIDogMiAqICgxIC0gbGlnaHRuZXNzIC8gYnJpZ2h0bmVzcyk7XG4gICAgcmV0dXJuIG5ldyBIU0JDb2xvcihcbiAgICAgIHRvRml4ZWROdW1iZXIodGhpcy5odWUsIDIpLFxuICAgICAgdG9GaXhlZE51bWJlcihzYXR1cmF0aW9uICogMTAwLCAyKSxcbiAgICAgIHRvRml4ZWROdW1iZXIoYnJpZ2h0bmVzcyAqIDEwMCwgMiksXG4gICAgICB0b0ZpeGVkTnVtYmVyKHRoaXMuYWxwaGEsIDIpXG4gICAgKTtcbiAgfVxuICAvKipcbiAgICogQ29udmVydHMgYSBIU0wgY29sb3IgdG8gUkdCLlxuICAgKiBDb252ZXJzaW9uIGZvcm11bGEgYWRhcHRlZCBmcm9tIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0hTTF9hbmRfSFNWI0hTTF90b19SR0JfYWx0ZXJuYXRpdmUuXG4gICAqIEByZXR1cm5zIEFuIFJHQkNvbG9yIG9iamVjdC5cbiAgICovXG4gIHRvUkdCKCkge1xuICAgIGxldCBodWUgPSB0aGlzLmh1ZTtcbiAgICBsZXQgc2F0dXJhdGlvbiA9IHRoaXMuc2F0dXJhdGlvbiAvIDEwMDtcbiAgICBsZXQgbGlnaHRuZXNzID0gdGhpcy5saWdodG5lc3MgLyAxMDA7XG4gICAgbGV0IGEgPSBzYXR1cmF0aW9uICogTWF0aC5taW4obGlnaHRuZXNzLCAxIC0gbGlnaHRuZXNzKTtcbiAgICBsZXQgZm4gPSAobiwgayA9IChuICsgaHVlIC8gMzApICUgMTIpID0+IGxpZ2h0bmVzcyAtIGEgKiBNYXRoLm1heChNYXRoLm1pbihrIC0gMywgOSAtIGssIDEpLCAtMSk7XG4gICAgcmV0dXJuIG5ldyBSR0JDb2xvcihcbiAgICAgIE1hdGgucm91bmQoZm4oMCkgKiAyNTUpLFxuICAgICAgTWF0aC5yb3VuZChmbig4KSAqIDI1NSksXG4gICAgICBNYXRoLnJvdW5kKGZuKDQpICogMjU1KSxcbiAgICAgIHRvRml4ZWROdW1iZXIodGhpcy5hbHBoYSwgMilcbiAgICApO1xuICB9XG4gIGNsb25lKCkge1xuICAgIHJldHVybiBuZXcgX0hTTENvbG9yKHRoaXMuaHVlLCB0aGlzLnNhdHVyYXRpb24sIHRoaXMubGlnaHRuZXNzLCB0aGlzLmFscGhhKTtcbiAgfVxuICBnZXRDaGFubmVsRm9ybWF0T3B0aW9ucyhjaGFubmVsKSB7XG4gICAgc3dpdGNoIChjaGFubmVsKSB7XG4gICAgICBjYXNlIFwiaHVlXCI6XG4gICAgICAgIHJldHVybiB7IHN0eWxlOiBcInVuaXRcIiwgdW5pdDogXCJkZWdyZWVcIiwgdW5pdERpc3BsYXk6IFwibmFycm93XCIgfTtcbiAgICAgIGNhc2UgXCJzYXR1cmF0aW9uXCI6XG4gICAgICBjYXNlIFwibGlnaHRuZXNzXCI6XG4gICAgICBjYXNlIFwiYWxwaGFcIjpcbiAgICAgICAgcmV0dXJuIHsgc3R5bGU6IFwicGVyY2VudFwiIH07XG4gICAgICBkZWZhdWx0OlxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJVbmtub3duIGNvbG9yIGNoYW5uZWw6IFwiICsgY2hhbm5lbCk7XG4gICAgfVxuICB9XG4gIGZvcm1hdENoYW5uZWxWYWx1ZShjaGFubmVsLCBsb2NhbGUpIHtcbiAgICBsZXQgb3B0aW9ucyA9IHRoaXMuZ2V0Q2hhbm5lbEZvcm1hdE9wdGlvbnMoY2hhbm5lbCk7XG4gICAgbGV0IHZhbHVlID0gdGhpcy5nZXRDaGFubmVsVmFsdWUoY2hhbm5lbCk7XG4gICAgaWYgKGNoYW5uZWwgPT09IFwic2F0dXJhdGlvblwiIHx8IGNoYW5uZWwgPT09IFwibGlnaHRuZXNzXCIpIHtcbiAgICAgIHZhbHVlIC89IDEwMDtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBJbnRsLk51bWJlckZvcm1hdChsb2NhbGUsIG9wdGlvbnMpLmZvcm1hdCh2YWx1ZSk7XG4gIH1cbiAgZ2V0Q2hhbm5lbFJhbmdlKGNoYW5uZWwpIHtcbiAgICBzd2l0Y2ggKGNoYW5uZWwpIHtcbiAgICAgIGNhc2UgXCJodWVcIjpcbiAgICAgICAgcmV0dXJuIHsgbWluVmFsdWU6IDAsIG1heFZhbHVlOiAzNjAsIHN0ZXA6IDEsIHBhZ2VTaXplOiAxNSB9O1xuICAgICAgY2FzZSBcInNhdHVyYXRpb25cIjpcbiAgICAgIGNhc2UgXCJsaWdodG5lc3NcIjpcbiAgICAgICAgcmV0dXJuIHsgbWluVmFsdWU6IDAsIG1heFZhbHVlOiAxMDAsIHN0ZXA6IDEsIHBhZ2VTaXplOiAxMCB9O1xuICAgICAgY2FzZSBcImFscGhhXCI6XG4gICAgICAgIHJldHVybiB7IG1pblZhbHVlOiAwLCBtYXhWYWx1ZTogMSwgc3RlcDogMC4wMSwgcGFnZVNpemU6IDAuMSB9O1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVW5rbm93biBjb2xvciBjaGFubmVsOiBcIiArIGNoYW5uZWwpO1xuICAgIH1cbiAgfVxuICB0b0pTT04oKSB7XG4gICAgcmV0dXJuIHsgaDogdGhpcy5odWUsIHM6IHRoaXMuc2F0dXJhdGlvbiwgbDogdGhpcy5saWdodG5lc3MsIGE6IHRoaXMuYWxwaGEgfTtcbiAgfVxuICBnZXRGb3JtYXQoKSB7XG4gICAgcmV0dXJuIFwiaHNsYVwiO1xuICB9XG4gIGdldENoYW5uZWxzKCkge1xuICAgIHJldHVybiBfSFNMQ29sb3IuY29sb3JDaGFubmVscztcbiAgfVxufTtcbl9fcHVibGljRmllbGQoX0hTTENvbG9yLCBcImNvbG9yQ2hhbm5lbHNcIiwgW1wiaHVlXCIsIFwic2F0dXJhdGlvblwiLCBcImxpZ2h0bmVzc1wiXSk7XG52YXIgSFNMQ29sb3IgPSBfSFNMQ29sb3I7XG5cbi8vIHNyYy9oc2ItY29sb3IudHNcbnZhciBIU0JfUkVHRVggPSAvaHNiXFwoKFstK10/XFxkKyg/Oi5cXGQrKT9cXHMqLFxccypbLStdP1xcZCsoPzouXFxkKyk/JVxccyosXFxzKlstK10/XFxkKyg/Oi5cXGQrKT8lKVxcKXxoc2JhXFwoKFstK10/XFxkKyg/Oi5cXGQrKT9cXHMqLFxccypbLStdP1xcZCsoPzouXFxkKyk/JVxccyosXFxzKlstK10/XFxkKyg/Oi5cXGQrKT8lXFxzKixcXHMqWy0rXT9cXGQoLlxcZCspPylcXCkvO1xudmFyIF9IU0JDb2xvciA9IGNsYXNzIF9IU0JDb2xvciBleHRlbmRzIENvbG9yIHtcbiAgY29uc3RydWN0b3IoaHVlLCBzYXR1cmF0aW9uLCBicmlnaHRuZXNzLCBhbHBoYSkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5odWUgPSBodWU7XG4gICAgdGhpcy5zYXR1cmF0aW9uID0gc2F0dXJhdGlvbjtcbiAgICB0aGlzLmJyaWdodG5lc3MgPSBicmlnaHRuZXNzO1xuICAgIHRoaXMuYWxwaGEgPSBhbHBoYTtcbiAgfVxuICBzdGF0aWMgcGFyc2UodmFsdWUpIHtcbiAgICBsZXQgbTtcbiAgICBpZiAobSA9IHZhbHVlLm1hdGNoKEhTQl9SRUdFWCkpIHtcbiAgICAgIGNvbnN0IFtoLCBzLCBiLCBhXSA9IChtWzFdID8/IG1bMl0pLnNwbGl0KFwiLFwiKS5tYXAoKG4pID0+IE51bWJlcihuLnRyaW0oKS5yZXBsYWNlKFwiJVwiLCBcIlwiKSkpO1xuICAgICAgcmV0dXJuIG5ldyBfSFNCQ29sb3IobW9kKGgsIDM2MCksIGNsYW1wVmFsdWUocywgMCwgMTAwKSwgY2xhbXBWYWx1ZShiLCAwLCAxMDApLCBjbGFtcFZhbHVlKGEgPz8gMSwgMCwgMSkpO1xuICAgIH1cbiAgfVxuICB0b1N0cmluZyhmb3JtYXQpIHtcbiAgICBzd2l0Y2ggKGZvcm1hdCkge1xuICAgICAgY2FzZSBcImNzc1wiOlxuICAgICAgICByZXR1cm4gdGhpcy50b0hTTCgpLnRvU3RyaW5nKFwiY3NzXCIpO1xuICAgICAgY2FzZSBcImhleFwiOlxuICAgICAgICByZXR1cm4gdGhpcy50b1JHQigpLnRvU3RyaW5nKFwiaGV4XCIpO1xuICAgICAgY2FzZSBcImhleGFcIjpcbiAgICAgICAgcmV0dXJuIHRoaXMudG9SR0IoKS50b1N0cmluZyhcImhleGFcIik7XG4gICAgICBjYXNlIFwiaHNiXCI6XG4gICAgICAgIHJldHVybiBgaHNiKCR7dGhpcy5odWV9LCAke3RvRml4ZWROdW1iZXIodGhpcy5zYXR1cmF0aW9uLCAyKX0lLCAke3RvRml4ZWROdW1iZXIodGhpcy5icmlnaHRuZXNzLCAyKX0lKWA7XG4gICAgICBjYXNlIFwiaHNiYVwiOlxuICAgICAgICByZXR1cm4gYGhzYmEoJHt0aGlzLmh1ZX0sICR7dG9GaXhlZE51bWJlcih0aGlzLnNhdHVyYXRpb24sIDIpfSUsICR7dG9GaXhlZE51bWJlcih0aGlzLmJyaWdodG5lc3MsIDIpfSUsICR7dGhpcy5hbHBoYX0pYDtcbiAgICAgIGNhc2UgXCJoc2xcIjpcbiAgICAgICAgcmV0dXJuIHRoaXMudG9IU0woKS50b1N0cmluZyhcImhzbFwiKTtcbiAgICAgIGNhc2UgXCJyZ2JcIjpcbiAgICAgICAgcmV0dXJuIHRoaXMudG9SR0IoKS50b1N0cmluZyhcInJnYlwiKTtcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiB0aGlzLnRvRm9ybWF0KGZvcm1hdCkudG9TdHJpbmcoZm9ybWF0KTtcbiAgICB9XG4gIH1cbiAgdG9Gb3JtYXQoZm9ybWF0KSB7XG4gICAgc3dpdGNoIChmb3JtYXQpIHtcbiAgICAgIGNhc2UgXCJoc2JhXCI6XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgY2FzZSBcImhzbGFcIjpcbiAgICAgICAgcmV0dXJuIHRoaXMudG9IU0woKTtcbiAgICAgIGNhc2UgXCJyZ2JhXCI6XG4gICAgICAgIHJldHVybiB0aGlzLnRvUkdCKCk7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJVbnN1cHBvcnRlZCBjb2xvciBjb252ZXJzaW9uOiBoc2IgLT4gXCIgKyBmb3JtYXQpO1xuICAgIH1cbiAgfVxuICAvKipcbiAgICogQ29udmVydHMgYSBIU0IgY29sb3IgdG8gSFNMLlxuICAgKiBDb252ZXJzaW9uIGZvcm11bGEgYWRhcHRlZCBmcm9tIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0hTTF9hbmRfSFNWI0hTVl90b19IU0wuXG4gICAqIEByZXR1cm5zIEFuIEhTTENvbG9yIG9iamVjdC5cbiAgICovXG4gIHRvSFNMKCkge1xuICAgIGxldCBzYXR1cmF0aW9uID0gdGhpcy5zYXR1cmF0aW9uIC8gMTAwO1xuICAgIGxldCBicmlnaHRuZXNzID0gdGhpcy5icmlnaHRuZXNzIC8gMTAwO1xuICAgIGxldCBsaWdodG5lc3MgPSBicmlnaHRuZXNzICogKDEgLSBzYXR1cmF0aW9uIC8gMik7XG4gICAgc2F0dXJhdGlvbiA9IGxpZ2h0bmVzcyA9PT0gMCB8fCBsaWdodG5lc3MgPT09IDEgPyAwIDogKGJyaWdodG5lc3MgLSBsaWdodG5lc3MpIC8gTWF0aC5taW4obGlnaHRuZXNzLCAxIC0gbGlnaHRuZXNzKTtcbiAgICByZXR1cm4gbmV3IEhTTENvbG9yKFxuICAgICAgdG9GaXhlZE51bWJlcih0aGlzLmh1ZSwgMiksXG4gICAgICB0b0ZpeGVkTnVtYmVyKHNhdHVyYXRpb24gKiAxMDAsIDIpLFxuICAgICAgdG9GaXhlZE51bWJlcihsaWdodG5lc3MgKiAxMDAsIDIpLFxuICAgICAgdG9GaXhlZE51bWJlcih0aGlzLmFscGhhLCAyKVxuICAgICk7XG4gIH1cbiAgLyoqXG4gICAqIENvbnZlcnRzIGEgSFNWIGNvbG9yIHZhbHVlIHRvIFJHQi5cbiAgICogQ29udmVyc2lvbiBmb3JtdWxhIGFkYXB0ZWQgZnJvbSBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9IU0xfYW5kX0hTViNIU1ZfdG9fUkdCX2FsdGVybmF0aXZlLlxuICAgKiBAcmV0dXJucyBBbiBSR0JDb2xvciBvYmplY3QuXG4gICAqL1xuICB0b1JHQigpIHtcbiAgICBsZXQgaHVlID0gdGhpcy5odWU7XG4gICAgbGV0IHNhdHVyYXRpb24gPSB0aGlzLnNhdHVyYXRpb24gLyAxMDA7XG4gICAgbGV0IGJyaWdodG5lc3MgPSB0aGlzLmJyaWdodG5lc3MgLyAxMDA7XG4gICAgbGV0IGZuID0gKG4sIGsgPSAobiArIGh1ZSAvIDYwKSAlIDYpID0+IGJyaWdodG5lc3MgLSBzYXR1cmF0aW9uICogYnJpZ2h0bmVzcyAqIE1hdGgubWF4KE1hdGgubWluKGssIDQgLSBrLCAxKSwgMCk7XG4gICAgcmV0dXJuIG5ldyBSR0JDb2xvcihcbiAgICAgIE1hdGgucm91bmQoZm4oNSkgKiAyNTUpLFxuICAgICAgTWF0aC5yb3VuZChmbigzKSAqIDI1NSksXG4gICAgICBNYXRoLnJvdW5kKGZuKDEpICogMjU1KSxcbiAgICAgIHRvRml4ZWROdW1iZXIodGhpcy5hbHBoYSwgMilcbiAgICApO1xuICB9XG4gIGNsb25lKCkge1xuICAgIHJldHVybiBuZXcgX0hTQkNvbG9yKHRoaXMuaHVlLCB0aGlzLnNhdHVyYXRpb24sIHRoaXMuYnJpZ2h0bmVzcywgdGhpcy5hbHBoYSk7XG4gIH1cbiAgZ2V0Q2hhbm5lbEZvcm1hdE9wdGlvbnMoY2hhbm5lbCkge1xuICAgIHN3aXRjaCAoY2hhbm5lbCkge1xuICAgICAgY2FzZSBcImh1ZVwiOlxuICAgICAgICByZXR1cm4geyBzdHlsZTogXCJ1bml0XCIsIHVuaXQ6IFwiZGVncmVlXCIsIHVuaXREaXNwbGF5OiBcIm5hcnJvd1wiIH07XG4gICAgICBjYXNlIFwic2F0dXJhdGlvblwiOlxuICAgICAgY2FzZSBcImJyaWdodG5lc3NcIjpcbiAgICAgIGNhc2UgXCJhbHBoYVwiOlxuICAgICAgICByZXR1cm4geyBzdHlsZTogXCJwZXJjZW50XCIgfTtcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlVua25vd24gY29sb3IgY2hhbm5lbDogXCIgKyBjaGFubmVsKTtcbiAgICB9XG4gIH1cbiAgZm9ybWF0Q2hhbm5lbFZhbHVlKGNoYW5uZWwsIGxvY2FsZSkge1xuICAgIGxldCBvcHRpb25zID0gdGhpcy5nZXRDaGFubmVsRm9ybWF0T3B0aW9ucyhjaGFubmVsKTtcbiAgICBsZXQgdmFsdWUgPSB0aGlzLmdldENoYW5uZWxWYWx1ZShjaGFubmVsKTtcbiAgICBpZiAoY2hhbm5lbCA9PT0gXCJzYXR1cmF0aW9uXCIgfHwgY2hhbm5lbCA9PT0gXCJicmlnaHRuZXNzXCIpIHtcbiAgICAgIHZhbHVlIC89IDEwMDtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBJbnRsLk51bWJlckZvcm1hdChsb2NhbGUsIG9wdGlvbnMpLmZvcm1hdCh2YWx1ZSk7XG4gIH1cbiAgZ2V0Q2hhbm5lbFJhbmdlKGNoYW5uZWwpIHtcbiAgICBzd2l0Y2ggKGNoYW5uZWwpIHtcbiAgICAgIGNhc2UgXCJodWVcIjpcbiAgICAgICAgcmV0dXJuIHsgbWluVmFsdWU6IDAsIG1heFZhbHVlOiAzNjAsIHN0ZXA6IDEsIHBhZ2VTaXplOiAxNSB9O1xuICAgICAgY2FzZSBcInNhdHVyYXRpb25cIjpcbiAgICAgIGNhc2UgXCJicmlnaHRuZXNzXCI6XG4gICAgICAgIHJldHVybiB7IG1pblZhbHVlOiAwLCBtYXhWYWx1ZTogMTAwLCBzdGVwOiAxLCBwYWdlU2l6ZTogMTAgfTtcbiAgICAgIGNhc2UgXCJhbHBoYVwiOlxuICAgICAgICByZXR1cm4geyBtaW5WYWx1ZTogMCwgbWF4VmFsdWU6IDEsIHN0ZXA6IDAuMDEsIHBhZ2VTaXplOiAwLjEgfTtcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlVua25vd24gY29sb3IgY2hhbm5lbDogXCIgKyBjaGFubmVsKTtcbiAgICB9XG4gIH1cbiAgdG9KU09OKCkge1xuICAgIHJldHVybiB7IGg6IHRoaXMuaHVlLCBzOiB0aGlzLnNhdHVyYXRpb24sIGI6IHRoaXMuYnJpZ2h0bmVzcywgYTogdGhpcy5hbHBoYSB9O1xuICB9XG4gIGdldEZvcm1hdCgpIHtcbiAgICByZXR1cm4gXCJoc2JhXCI7XG4gIH1cbiAgZ2V0Q2hhbm5lbHMoKSB7XG4gICAgcmV0dXJuIF9IU0JDb2xvci5jb2xvckNoYW5uZWxzO1xuICB9XG59O1xuX19wdWJsaWNGaWVsZChfSFNCQ29sb3IsIFwiY29sb3JDaGFubmVsc1wiLCBbXCJodWVcIiwgXCJzYXR1cmF0aW9uXCIsIFwiYnJpZ2h0bmVzc1wiXSk7XG52YXIgSFNCQ29sb3IgPSBfSFNCQ29sb3I7XG5cbi8vIHNyYy9uYXRpdmUtY29sb3IudHNcbnZhciBuYXRpdmVDb2xvcnMgPSBcImFsaWNlYmx1ZTpmMGY4ZmYsYW50aXF1ZXdoaXRlOmZhZWJkNyxhcXVhOjAwZmZmZixhcXVhbWFyaW5lOjdmZmZkNCxhenVyZTpmMGZmZmYsYmVpZ2U6ZjVmNWRjLGJpc3F1ZTpmZmU0YzQsYmxhY2s6MDAwMDAwLGJsYW5jaGVkYWxtb25kOmZmZWJjZCxibHVlOjAwMDBmZixibHVldmlvbGV0OjhhMmJlMixicm93bjphNTJhMmEsYnVybHl3b29kOmRlYjg4NyxjYWRldGJsdWU6NWY5ZWEwLGNoYXJ0cmV1c2U6N2ZmZjAwLGNob2NvbGF0ZTpkMjY5MWUsY29yYWw6ZmY3ZjUwLGNvcm5mbG93ZXJibHVlOjY0OTVlZCxjb3Juc2lsazpmZmY4ZGMsY3JpbXNvbjpkYzE0M2MsY3lhbjowMGZmZmYsZGFya2JsdWU6MDAwMDhiLGRhcmtjeWFuOjAwOGI4YixkYXJrZ29sZGVucm9kOmI4ODYwYixkYXJrZ3JheTphOWE5YTksZGFya2dyZWVuOjAwNjQwMCxkYXJra2hha2k6YmRiNzZiLGRhcmttYWdlbnRhOjhiMDA4YixkYXJrb2xpdmVncmVlbjo1NTZiMmYsZGFya29yYW5nZTpmZjhjMDAsZGFya29yY2hpZDo5OTMyY2MsZGFya3JlZDo4YjAwMDAsZGFya3NhbG1vbjplOTk2N2EsZGFya3NlYWdyZWVuOjhmYmM4ZixkYXJrc2xhdGVibHVlOjQ4M2Q4YixkYXJrc2xhdGVncmF5OjJmNGY0ZixkYXJrdHVycXVvaXNlOjAwY2VkMSxkYXJrdmlvbGV0Ojk0MDBkMyxkZWVwcGluazpmZjE0OTMsZGVlcHNreWJsdWU6MDBiZmZmLGRpbWdyYXk6Njk2OTY5LGRvZGdlcmJsdWU6MWU5MGZmLGZpcmVicmljazpiMjIyMjIsZmxvcmFsd2hpdGU6ZmZmYWYwLGZvcmVzdGdyZWVuOjIyOGIyMixmdWNoc2lhOmZmMDBmZixnYWluc2Jvcm86ZGNkY2RjLGdob3N0d2hpdGU6ZjhmOGZmLGdvbGQ6ZmZkNzAwLGdvbGRlbnJvZDpkYWE1MjAsZ3JheTo4MDgwODAsZ3JlZW46MDA4MDAwLGdyZWVueWVsbG93OmFkZmYyZixob25leWRldzpmMGZmZjAsaG90cGluazpmZjY5YjQsaW5kaWFucmVkOmNkNWM1YyxpbmRpZ286NGIwMDgyLGl2b3J5OmZmZmZmMCxraGFraTpmMGU2OGMsbGF2ZW5kZXI6ZTZlNmZhLGxhdmVuZGVyYmx1c2g6ZmZmMGY1LGxhd25ncmVlbjo3Y2ZjMDAsbGVtb25jaGlmZm9uOmZmZmFjZCxsaWdodGJsdWU6YWRkOGU2LGxpZ2h0Y29yYWw6ZjA4MDgwLGxpZ2h0Y3lhbjplMGZmZmYsbGlnaHRnb2xkZW5yb2R5ZWxsb3c6ZmFmYWQyLGxpZ2h0Z3JleTpkM2QzZDMsbGlnaHRncmVlbjo5MGVlOTAsbGlnaHRwaW5rOmZmYjZjMSxsaWdodHNhbG1vbjpmZmEwN2EsbGlnaHRzZWFncmVlbjoyMGIyYWEsbGlnaHRza3libHVlOjg3Y2VmYSxsaWdodHNsYXRlZ3JheTo3Nzg4OTksbGlnaHRzdGVlbGJsdWU6YjBjNGRlLGxpZ2h0eWVsbG93OmZmZmZlMCxsaW1lOjAwZmYwMCxsaW1lZ3JlZW46MzJjZDMyLGxpbmVuOmZhZjBlNixtYWdlbnRhOmZmMDBmZixtYXJvb246ODAwMDAwLG1lZGl1bWFxdWFtYXJpbmU6NjZjZGFhLG1lZGl1bWJsdWU6MDAwMGNkLG1lZGl1bW9yY2hpZDpiYTU1ZDMsbWVkaXVtcHVycGxlOjkzNzBkOCxtZWRpdW1zZWFncmVlbjozY2IzNzEsbWVkaXVtc2xhdGVibHVlOjdiNjhlZSxtZWRpdW1zcHJpbmdncmVlbjowMGZhOWEsbWVkaXVtdHVycXVvaXNlOjQ4ZDFjYyxtZWRpdW12aW9sZXRyZWQ6YzcxNTg1LG1pZG5pZ2h0Ymx1ZToxOTE5NzAsbWludGNyZWFtOmY1ZmZmYSxtaXN0eXJvc2U6ZmZlNGUxLG1vY2Nhc2luOmZmZTRiNSxuYXZham93aGl0ZTpmZmRlYWQsbmF2eTowMDAwODAsb2xkbGFjZTpmZGY1ZTYsb2xpdmU6ODA4MDAwLG9saXZlZHJhYjo2YjhlMjMsb3JhbmdlOmZmYTUwMCxvcmFuZ2VyZWQ6ZmY0NTAwLG9yY2hpZDpkYTcwZDYscGFsZWdvbGRlbnJvZDplZWU4YWEscGFsZWdyZWVuOjk4ZmI5OCxwYWxldHVycXVvaXNlOmFmZWVlZSxwYWxldmlvbGV0cmVkOmQ4NzA5MyxwYXBheWF3aGlwOmZmZWZkNSxwZWFjaHB1ZmY6ZmZkYWI5LHBlcnU6Y2Q4NTNmLHBpbms6ZmZjMGNiLHBsdW06ZGRhMGRkLHBvd2RlcmJsdWU6YjBlMGU2LHB1cnBsZTo4MDAwODAscmViZWNjYXB1cnBsZTo2NjMzOTkscmVkOmZmMDAwMCxyb3N5YnJvd246YmM4ZjhmLHJveWFsYmx1ZTo0MTY5ZTEsc2FkZGxlYnJvd246OGI0NTEzLHNhbG1vbjpmYTgwNzIsc2FuZHlicm93bjpmNGE0NjAsc2VhZ3JlZW46MmU4YjU3LHNlYXNoZWxsOmZmZjVlZSxzaWVubmE6YTA1MjJkLHNpbHZlcjpjMGMwYzAsc2t5Ymx1ZTo4N2NlZWIsc2xhdGVibHVlOjZhNWFjZCxzbGF0ZWdyYXk6NzA4MDkwLHNub3c6ZmZmYWZhLHNwcmluZ2dyZWVuOjAwZmY3ZixzdGVlbGJsdWU6NDY4MmI0LHRhbjpkMmI0OGMsdGVhbDowMDgwODAsdGhpc3RsZTpkOGJmZDgsdG9tYXRvOmZmNjM0Nyx0dXJxdW9pc2U6NDBlMGQwLHZpb2xldDplZTgyZWUsd2hlYXQ6ZjVkZWIzLHdoaXRlOmZmZmZmZix3aGl0ZXNtb2tlOmY1ZjVmNSx5ZWxsb3c6ZmZmZjAwLHllbGxvd2dyZWVuOjlhY2QzMlwiO1xudmFyIG1ha2VNYXAgPSAoc3RyKSA9PiB7XG4gIGNvbnN0IG1hcCA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7XG4gIGNvbnN0IGxpc3QgPSBzdHIuc3BsaXQoXCIsXCIpO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCBba2V5LCB2YWxdID0gbGlzdFtpXS5zcGxpdChcIjpcIik7XG4gICAgbWFwLnNldChrZXksIGAjJHt2YWx9YCk7XG4gICAgaWYgKGtleS5pbmNsdWRlcyhcImdyYXlcIikpIG1hcC5zZXQoa2V5LnJlcGxhY2UoXCJncmF5XCIsIFwiZ3JleVwiKSwgYCMke3ZhbH1gKTtcbiAgfVxuICByZXR1cm4gbWFwO1xufTtcbnZhciBuYXRpdmVDb2xvck1hcCA9IG1ha2VNYXAobmF0aXZlQ29sb3JzKTtcblxuLy8gc3JjL3BhcnNlLWNvbG9yLnRzXG52YXIgcGFyc2VDb2xvciA9ICh2YWx1ZSkgPT4ge1xuICBpZiAobmF0aXZlQ29sb3JNYXAuaGFzKHZhbHVlKSkge1xuICAgIHJldHVybiBwYXJzZUNvbG9yKG5hdGl2ZUNvbG9yTWFwLmdldCh2YWx1ZSkpO1xuICB9XG4gIGNvbnN0IHJlc3VsdCA9IFJHQkNvbG9yLnBhcnNlKHZhbHVlKSB8fCBIU0JDb2xvci5wYXJzZSh2YWx1ZSkgfHwgSFNMQ29sb3IucGFyc2UodmFsdWUpO1xuICBpZiAoIXJlc3VsdCkge1xuICAgIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKFwiSW52YWxpZCBjb2xvciB2YWx1ZTogXCIgKyB2YWx1ZSk7XG4gICAgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2U/LihlcnJvciwgcGFyc2VDb2xvcik7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG52YXIgbm9ybWFsaXplQ29sb3IgPSAodikgPT4ge1xuICByZXR1cm4gdHlwZW9mIHYgPT09IFwic3RyaW5nXCIgPyBwYXJzZUNvbG9yKHYpIDogdjtcbn07XG5cbmV4cG9ydCB7IENvbG9yLCBnZXRDb2xvckFyZWFHcmFkaWVudCwgbm9ybWFsaXplQ29sb3IsIHBhcnNlQ29sb3IgfTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/color-utils/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/core/dist/index.mjs":
/*!**************************************************!*\
  !*** ./node_modules/@zag-js/core/dist/index.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Machine: () => (/* binding */ Machine),\n/* harmony export */   choose: () => (/* binding */ choose),\n/* harmony export */   createMachine: () => (/* binding */ createMachine),\n/* harmony export */   deepMerge: () => (/* binding */ deepMerge),\n/* harmony export */   guards: () => (/* binding */ guards),\n/* harmony export */   isMachine: () => (/* binding */ isMachine),\n/* harmony export */   mergeProps: () => (/* binding */ mergeProps),\n/* harmony export */   proxy: () => (/* reexport safe */ _zag_js_store__WEBPACK_IMPORTED_MODULE_0__.proxy),\n/* harmony export */   ref: () => (/* reexport safe */ _zag_js_store__WEBPACK_IMPORTED_MODULE_0__.ref),\n/* harmony export */   snapshot: () => (/* reexport safe */ _zag_js_store__WEBPACK_IMPORTED_MODULE_0__.snapshot),\n/* harmony export */   subscribe: () => (/* reexport safe */ _zag_js_store__WEBPACK_IMPORTED_MODULE_0__.subscribe)\n/* harmony export */ });\n/* harmony import */ var _zag_js_store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/store */ \"(ssr)/./node_modules/@zag-js/store/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nfunction deepMerge(source, ...objects) {\n  for (const obj of objects) {\n    const target = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.compact)(obj);\n    for (const key in target) {\n      if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isPlainObject)(obj[key])) {\n        if (!source[key]) {\n          source[key] = {};\n        }\n        deepMerge(source[key], obj[key]);\n      } else {\n        source[key] = obj[key];\n      }\n    }\n  }\n  return source;\n}\nfunction toEvent(event) {\n  const obj = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isString)(event) ? { type: event } : event;\n  return obj;\n}\nfunction toArray(value) {\n  if (!value) return [];\n  return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isArray)(value) ? value.slice() : [value];\n}\nfunction isGuardHelper(value) {\n  return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isObject)(value) && value.predicate != null;\n}\n\n// src/guard-utils.ts\nvar Truthy = () => true;\nfunction exec(guardMap, ctx, event, meta) {\n  return (guard) => {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isString)(guard)) {\n      return !!guardMap[guard]?.(ctx, event, meta);\n    }\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isFunction)(guard)) {\n      return guard(ctx, event, meta);\n    }\n    return guard.predicate(guardMap)(ctx, event, meta);\n  };\n}\nfunction or(...conditions) {\n  return {\n    predicate: (guardMap) => (ctx, event, meta) => conditions.map(exec(guardMap, ctx, event, meta)).some(Boolean)\n  };\n}\nfunction and(...conditions) {\n  return {\n    predicate: (guardMap) => (ctx, event, meta) => conditions.map(exec(guardMap, ctx, event, meta)).every(Boolean)\n  };\n}\nfunction not(condition) {\n  return {\n    predicate: (guardMap) => (ctx, event, meta) => {\n      return !exec(guardMap, ctx, event, meta)(condition);\n    }\n  };\n}\nfunction stateIn(...values) {\n  return (_ctx, _evt, meta) => meta.state.matches(...values);\n}\nvar guards = { or, and, not, stateIn };\nfunction choose(actions) {\n  return {\n    predicate: (guardMap) => (ctx, event, meta) => actions.find((def) => {\n      const guard = def.guard ?? Truthy;\n      return exec(guardMap, ctx, event, meta)(guard);\n    })?.actions\n  };\n}\nfunction determineGuardFn(guard, guardMap) {\n  guard = guard ?? Truthy;\n  return (context, event, meta) => {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isString)(guard)) {\n      const value = guardMap[guard];\n      return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isFunction)(value) ? value(context, event, meta) : value;\n    }\n    if (isGuardHelper(guard)) {\n      return guard.predicate(guardMap)(context, event, meta);\n    }\n    return guard?.(context, event, meta);\n  };\n}\nfunction determineActionsFn(values, guardMap) {\n  return (context, event, meta) => {\n    if (isGuardHelper(values)) {\n      return values.predicate(guardMap)(context, event, meta);\n    }\n    return values;\n  };\n}\nfunction createProxy(config) {\n  const computedContext = config.computed ?? (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.cast)({});\n  const initialContext = config.context ?? (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.cast)({});\n  const initialTags = config.initial ? config.states?.[config.initial]?.tags : [];\n  const state = (0,_zag_js_store__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    value: config.initial ?? \"\",\n    previousValue: \"\",\n    event: (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.cast)({}),\n    previousEvent: (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.cast)({}),\n    context: (0,_zag_js_store__WEBPACK_IMPORTED_MODULE_0__.proxyWithComputed)(initialContext, computedContext),\n    done: false,\n    tags: initialTags ?? [],\n    hasTag(tag) {\n      return this.tags.includes(tag);\n    },\n    matches(...value) {\n      return value.includes(this.value);\n    },\n    can(event) {\n      return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.cast)(this).nextEvents.includes(event);\n    },\n    get nextEvents() {\n      const stateEvents = config.states?.[this.value]?.[\"on\"] ?? {};\n      const globalEvents = config?.on ?? {};\n      return Object.keys({ ...stateEvents, ...globalEvents });\n    },\n    get changed() {\n      if (this.event.value === \"machine.init\" /* Init */ || !this.previousValue) return false;\n      return this.value !== this.previousValue;\n    }\n  });\n  return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.cast)(state);\n}\nfunction determineDelayFn(delay, delaysMap) {\n  return (context, event) => {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isNumber)(delay)) return delay;\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isFunction)(delay)) {\n      return delay(context, event);\n    }\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isString)(delay)) {\n      const value = Number.parseFloat(delay);\n      if (!Number.isNaN(value)) {\n        return value;\n      }\n      if (delaysMap) {\n        const valueOrFn = delaysMap?.[delay];\n        (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.invariant)(\n          valueOrFn == null,\n          `[@zag-js/core > determine-delay] Cannot determine delay for \\`${delay}\\`. It doesn't exist in \\`options.delays\\``\n        );\n        return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isFunction)(valueOrFn) ? valueOrFn(context, event) : valueOrFn;\n      }\n    }\n  };\n}\nfunction toTarget(target) {\n  return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isString)(target) ? { target } : target;\n}\nfunction determineTransitionFn(transitions, guardMap) {\n  return (context, event, meta) => {\n    return toArray(transitions).map(toTarget).find((transition) => {\n      const determineGuard = determineGuardFn(transition.guard, guardMap);\n      const guard = determineGuard(context, event, meta);\n      return guard ?? transition.target ?? transition.actions;\n    });\n  };\n}\n\n// src/machine.ts\nvar Machine = class {\n  // Let's get started!\n  constructor(config, options) {\n    __publicField(this, \"status\", \"Not Started\" /* NotStarted */);\n    __publicField(this, \"state\");\n    __publicField(this, \"initialState\");\n    __publicField(this, \"initialContext\");\n    __publicField(this, \"id\");\n    __publicField(this, \"type\", \"machine\" /* Machine */);\n    // Cleanup function map (per state)\n    __publicField(this, \"activityEvents\", /* @__PURE__ */ new Map());\n    __publicField(this, \"delayedEvents\", /* @__PURE__ */ new Map());\n    // state update listeners the user can opt-in for\n    __publicField(this, \"stateListeners\", /* @__PURE__ */ new Set());\n    __publicField(this, \"doneListeners\", /* @__PURE__ */ new Set());\n    __publicField(this, \"contextWatchers\", /* @__PURE__ */ new Set());\n    // Cleanup functions (for `subscribe`)\n    __publicField(this, \"removeStateListener\", _zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.noop);\n    // For Parent <==> Spawned Actor relationship\n    __publicField(this, \"parent\");\n    __publicField(this, \"children\", /* @__PURE__ */ new Map());\n    // A map of guard, action, delay implementations\n    __publicField(this, \"guardMap\");\n    __publicField(this, \"actionMap\");\n    __publicField(this, \"delayMap\");\n    __publicField(this, \"activityMap\");\n    __publicField(this, \"sync\");\n    __publicField(this, \"options\");\n    __publicField(this, \"config\");\n    // created actions\n    __publicField(this, \"_created\", () => {\n      if (!this.config.created) return;\n      const event = toEvent(\"machine.created\" /* Created */);\n      this.executeActions(this.config.created, event);\n    });\n    // Starts the interpreted machine.\n    __publicField(this, \"start\", (init) => {\n      this.state.value = \"\";\n      this.state.tags = [];\n      if (this.status === \"Running\" /* Running */) {\n        return this;\n      }\n      this.status = \"Running\" /* Running */;\n      this.removeStateListener = (0,_zag_js_store__WEBPACK_IMPORTED_MODULE_0__.subscribe)(\n        this.state,\n        () => {\n          this.stateListeners.forEach((listener) => {\n            listener(this.stateSnapshot);\n          });\n        },\n        this.sync\n      );\n      this.setupContextWatchers();\n      this.executeActivities(toEvent(\"machine.start\" /* Start */), toArray(this.config.activities), \"machine.start\" /* Start */);\n      this.executeActions(this.config.entry, toEvent(\"machine.start\" /* Start */));\n      const event = toEvent(\"machine.init\" /* Init */);\n      const target = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isObject)(init) ? init.value : init;\n      const context = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isObject)(init) ? init.context : void 0;\n      if (context) {\n        this.setContext(context);\n      }\n      const transition = {\n        target: target ?? this.config.initial\n      };\n      const next = this.getNextStateInfo(transition, event);\n      this.initialState = next;\n      this.performStateChangeEffects(this.state.value, next, event);\n      return this;\n    });\n    __publicField(this, \"setupContextWatchers\", () => {\n      const { watch } = this.config;\n      if (!watch) return;\n      let prev = (0,_zag_js_store__WEBPACK_IMPORTED_MODULE_0__.snapshot)(this.state.context);\n      const cleanup = (0,_zag_js_store__WEBPACK_IMPORTED_MODULE_0__.subscribe)(this.state.context, () => {\n        const next = (0,_zag_js_store__WEBPACK_IMPORTED_MODULE_0__.snapshot)(this.state.context);\n        for (const [key, fn] of Object.entries(watch)) {\n          const isEqual = this.options.compareFns?.[key] ?? Object.is;\n          if (isEqual(prev[key], next[key])) continue;\n          this.executeActions(fn, this.state.event);\n        }\n        prev = next;\n      });\n      this.contextWatchers.add(cleanup);\n    });\n    // Stops the interpreted machine\n    __publicField(this, \"stop\", () => {\n      if (this.status === \"Stopped\" /* Stopped */) return;\n      this.performExitEffects(this.state.value, toEvent(\"machine.stop\" /* Stop */));\n      this.executeActions(this.config.exit, toEvent(\"machine.stop\" /* Stop */));\n      this.setState(\"\");\n      this.setEvent(\"machine.stop\" /* Stop */);\n      this.stopStateListeners();\n      this.stopChildren();\n      this.stopActivities();\n      this.stopDelayedEvents();\n      this.stopContextWatchers();\n      this.status = \"Stopped\" /* Stopped */;\n      return this;\n    });\n    __publicField(this, \"stopStateListeners\", () => {\n      this.removeStateListener();\n      this.stateListeners.clear();\n    });\n    __publicField(this, \"stopContextWatchers\", () => {\n      this.contextWatchers.forEach((fn) => fn());\n      this.contextWatchers.clear();\n    });\n    __publicField(this, \"stopDelayedEvents\", () => {\n      this.delayedEvents.forEach((state) => {\n        state.forEach((stop) => stop());\n      });\n      this.delayedEvents.clear();\n    });\n    // Cleanup running activities (e.g `setInterval`, invoked callbacks, promises)\n    __publicField(this, \"stopActivities\", (state) => {\n      if (state) {\n        this.activityEvents.get(state)?.forEach((stop) => stop());\n        this.activityEvents.get(state)?.clear();\n        this.activityEvents.delete(state);\n      } else {\n        this.activityEvents.forEach((state2) => {\n          state2.forEach((stop) => stop());\n          state2.clear();\n        });\n        this.activityEvents.clear();\n      }\n    });\n    /**\n     * Function to send event to spawned child machine or actor\n     */\n    __publicField(this, \"sendChild\", (evt, to) => {\n      const event = toEvent(evt);\n      const id = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.runIfFn)(to, this.contextSnapshot);\n      const child = this.children.get(id);\n      if (!child) {\n        (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.invariant)(`[@zag-js/core] Cannot send '${event.type}' event to unknown child`);\n      }\n      child.send(event);\n    });\n    /**\n     * Function to stop a running child machine or actor\n     */\n    __publicField(this, \"stopChild\", (id) => {\n      if (!this.children.has(id)) {\n        (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.invariant)(`[@zag-js/core > stop-child] Cannot stop unknown child ${id}`);\n      }\n      this.children.get(id).stop();\n      this.children.delete(id);\n    });\n    __publicField(this, \"removeChild\", (id) => {\n      this.children.delete(id);\n    });\n    // Stop and delete spawned actors\n    __publicField(this, \"stopChildren\", () => {\n      this.children.forEach((child) => child.stop());\n      this.children.clear();\n    });\n    __publicField(this, \"setParent\", (parent) => {\n      this.parent = parent;\n    });\n    __publicField(this, \"spawn\", (src, id) => {\n      const actor = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.runIfFn)(src);\n      if (id) actor.id = id;\n      actor.type = \"machine.actor\" /* Actor */;\n      actor.setParent(this);\n      this.children.set(actor.id, (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.cast)(actor));\n      actor.onDone(() => {\n        this.removeChild(actor.id);\n      }).start();\n      return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.cast)((0,_zag_js_store__WEBPACK_IMPORTED_MODULE_0__.ref)(actor));\n    });\n    __publicField(this, \"stopActivity\", (key) => {\n      if (!this.state.value) return;\n      const cleanups = this.activityEvents.get(this.state.value);\n      cleanups?.get(key)?.();\n      cleanups?.delete(key);\n    });\n    __publicField(this, \"addActivityCleanup\", (state, key, cleanup) => {\n      if (!state) return;\n      if (!this.activityEvents.has(state)) {\n        this.activityEvents.set(state, /* @__PURE__ */ new Map([[key, cleanup]]));\n      } else {\n        this.activityEvents.get(state)?.set(key, cleanup);\n      }\n    });\n    __publicField(this, \"setState\", (target) => {\n      this.state.previousValue = this.state.value;\n      this.state.value = target;\n      const stateNode = this.getStateNode(target);\n      if (target == null) {\n        (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.clear)(this.state.tags);\n      } else {\n        this.state.tags = toArray(stateNode?.tags);\n      }\n    });\n    /**\n     * To used within side effects for React or Vue to update context\n     */\n    __publicField(this, \"setContext\", (context) => {\n      if (!context) return;\n      deepMerge(this.state.context, (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.compact)(context));\n    });\n    __publicField(this, \"setOptions\", (options) => {\n      const opts = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.compact)(options);\n      this.actionMap = { ...this.actionMap, ...opts.actions };\n      this.delayMap = { ...this.delayMap, ...opts.delays };\n      this.activityMap = { ...this.activityMap, ...opts.activities };\n      this.guardMap = { ...this.guardMap, ...opts.guards };\n    });\n    __publicField(this, \"getStateNode\", (state) => {\n      if (!state) return;\n      return this.config.states?.[state];\n    });\n    __publicField(this, \"getNextStateInfo\", (transitions, event) => {\n      const transition = this.determineTransition(transitions, event);\n      const isTargetless = !transition?.target;\n      const target = transition?.target ?? this.state.value;\n      const changed = this.state.value !== target;\n      const stateNode = this.getStateNode(target);\n      const reenter = !isTargetless && !changed && !transition?.internal;\n      const info = {\n        reenter,\n        transition,\n        stateNode,\n        target,\n        changed\n      };\n      this.log(\"NextState:\", `[${event.type}]`, this.state.value, \"---->\", info.target);\n      return info;\n    });\n    __publicField(this, \"getAfterActions\", (transition, delay) => {\n      let id;\n      const current = this.state.value;\n      return {\n        entry: () => {\n          id = globalThis.setTimeout(() => {\n            const next = this.getNextStateInfo(transition, this.state.event);\n            this.performStateChangeEffects(current, next, this.state.event);\n          }, delay);\n        },\n        exit: () => {\n          globalThis.clearTimeout(id);\n        }\n      };\n    });\n    /**\n     * All `after` events leverage `setTimeout` and `clearTimeout`,\n     * we invoke the `clearTimeout` on exit and `setTimeout` on entry.\n     *\n     * To achieve this, we split the `after` definition into `entry` and `exit`\n     *  functions and append them to the state's `entry` and `exit` actions\n     */\n    __publicField(this, \"getDelayedEventActions\", (state) => {\n      const stateNode = this.getStateNode(state);\n      const event = this.state.event;\n      if (!stateNode || !stateNode.after) return;\n      const entries = [];\n      const exits = [];\n      if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isArray)(stateNode.after)) {\n        const transition = this.determineTransition(stateNode.after, event);\n        if (!transition) return;\n        if (!(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.hasProp)(transition, \"delay\")) {\n          throw new Error(`[@zag-js/core > after] Delay is required for after transition: ${JSON.stringify(transition)}`);\n        }\n        const determineDelay = determineDelayFn(transition.delay, this.delayMap);\n        const __delay = determineDelay(this.contextSnapshot, event);\n        const actions = this.getAfterActions(transition, __delay);\n        entries.push(actions.entry);\n        exits.push(actions.exit);\n        return { entries, exits };\n      }\n      if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isObject)(stateNode.after)) {\n        for (const delay in stateNode.after) {\n          const transition = stateNode.after[delay];\n          const determineDelay = determineDelayFn(delay, this.delayMap);\n          const __delay = determineDelay(this.contextSnapshot, event);\n          const actions = this.getAfterActions(transition, __delay);\n          entries.push(actions.entry);\n          exits.push(actions.exit);\n        }\n      }\n      return { entries, exits };\n    });\n    /**\n     * Function to executes defined actions. It can accept actions as string\n     * (referencing `options.actions`) or actual functions.\n     */\n    __publicField(this, \"executeActions\", (actions, event) => {\n      const pickedActions = determineActionsFn(actions, this.guardMap)(this.contextSnapshot, event, this.guardMeta);\n      for (const action of toArray(pickedActions)) {\n        const fn = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isString)(action) ? this.actionMap?.[action] : action;\n        (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.warn)(\n          (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isString)(action) && !fn,\n          `[@zag-js/core > execute-actions] No implementation found for action: \\`${action}\\``\n        );\n        fn?.(this.state.context, event, this.meta);\n      }\n    });\n    /**\n     * Function to execute running activities and registers\n     * their cleanup function internally (to be called later on when we exit the state)\n     */\n    __publicField(this, \"executeActivities\", (event, activities, state) => {\n      for (const activity of activities) {\n        const fn = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isString)(activity) ? this.activityMap?.[activity] : activity;\n        if (!fn) {\n          (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.warn)(`[@zag-js/core > execute-activity] No implementation found for activity: \\`${activity}\\``);\n          continue;\n        }\n        const cleanup = fn(this.state.context, event, this.meta);\n        if (cleanup) {\n          const key = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isString)(activity) ? activity : activity.name || (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.uuid)();\n          this.addActivityCleanup(state ?? this.state.value, key, cleanup);\n        }\n      }\n    });\n    /**\n     * Normalizes the `every` definition to transition. `every` can be:\n     * - An array of possible actions to run (we need to pick the first match based on guard)\n     * - An object of intervals and actions\n     */\n    __publicField(this, \"createEveryActivities\", (every, callbackfn) => {\n      if (!every) return;\n      if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isArray)(every)) {\n        const picked = toArray(every).find((transition) => {\n          const delayOrFn = transition.delay;\n          const determineDelay2 = determineDelayFn(delayOrFn, this.delayMap);\n          const delay2 = determineDelay2(this.contextSnapshot, this.state.event);\n          const determineGuard = determineGuardFn(transition.guard, this.guardMap);\n          const guard = determineGuard(this.contextSnapshot, this.state.event, this.guardMeta);\n          return guard ?? delay2 != null;\n        });\n        if (!picked) return;\n        const determineDelay = determineDelayFn(picked.delay, this.delayMap);\n        const delay = determineDelay(this.contextSnapshot, this.state.event);\n        const activity = () => {\n          const id = globalThis.setInterval(() => {\n            this.executeActions(picked.actions, this.state.event);\n          }, delay);\n          return () => {\n            globalThis.clearInterval(id);\n          };\n        };\n        callbackfn(activity);\n      } else {\n        for (const interval in every) {\n          const actions = every?.[interval];\n          const determineDelay = determineDelayFn(interval, this.delayMap);\n          const delay = determineDelay(this.contextSnapshot, this.state.event);\n          const activity = () => {\n            const id = globalThis.setInterval(() => {\n              this.executeActions(actions, this.state.event);\n            }, delay);\n            return () => {\n              globalThis.clearInterval(id);\n            };\n          };\n          callbackfn(activity);\n        }\n      }\n    });\n    __publicField(this, \"setEvent\", (event) => {\n      this.state.previousEvent = this.state.event;\n      this.state.event = (0,_zag_js_store__WEBPACK_IMPORTED_MODULE_0__.ref)(toEvent(event));\n    });\n    __publicField(this, \"performExitEffects\", (current, event) => {\n      const currentState = this.state.value;\n      if (currentState === \"\") return;\n      const stateNode = current ? this.getStateNode(current) : void 0;\n      this.stopActivities(currentState);\n      const _exit = determineActionsFn(stateNode?.exit, this.guardMap)(this.contextSnapshot, event, this.guardMeta);\n      const exitActions = toArray(_exit);\n      const afterExitActions = this.delayedEvents.get(currentState);\n      if (afterExitActions) {\n        exitActions.push(...afterExitActions);\n      }\n      this.executeActions(exitActions, event);\n      this.delayedEvents.delete(currentState);\n    });\n    __publicField(this, \"performEntryEffects\", (next, event) => {\n      const stateNode = this.getStateNode(next);\n      const activities = toArray(stateNode?.activities);\n      this.createEveryActivities(stateNode?.every, (activity) => {\n        activities.unshift(activity);\n      });\n      if (activities.length > 0) {\n        this.executeActivities(event, activities);\n      }\n      const pickedActions = determineActionsFn(stateNode?.entry, this.guardMap)(\n        this.contextSnapshot,\n        event,\n        this.guardMeta\n      );\n      const entryActions = toArray(pickedActions);\n      const afterActions = this.getDelayedEventActions(next);\n      if (stateNode?.after && afterActions) {\n        this.delayedEvents.set(next, afterActions?.exits);\n        entryActions.push(...afterActions.entries);\n      }\n      this.executeActions(entryActions, event);\n      if (stateNode?.type === \"final\") {\n        this.state.done = true;\n        this.doneListeners.forEach((listener) => {\n          listener(this.stateSnapshot);\n        });\n        this.stop();\n      }\n    });\n    __publicField(this, \"performTransitionEffects\", (transitions, event) => {\n      const transition = this.determineTransition(transitions, event);\n      this.executeActions(transition?.actions, event);\n    });\n    /**\n     * Performs all the requires side-effects or reactions when\n     * we move from state A => state B.\n     *\n     * The Effect order:\n     * Exit actions (current state) => Transition actions  => Go to state => Entry actions (next state)\n     */\n    __publicField(this, \"performStateChangeEffects\", (current, next, event) => {\n      this.setEvent(event);\n      const changed = next.changed || next.reenter;\n      if (changed) {\n        this.performExitEffects(current, event);\n      }\n      this.performTransitionEffects(next.transition, event);\n      this.setState(next.target);\n      if (changed) {\n        this.performEntryEffects(next.target, event);\n      }\n    });\n    __publicField(this, \"determineTransition\", (transition, event) => {\n      const fn = determineTransitionFn(transition, this.guardMap);\n      return fn?.(this.contextSnapshot, event, this.guardMeta);\n    });\n    /**\n     * Function to send event to parent machine from spawned child\n     */\n    __publicField(this, \"sendParent\", (evt) => {\n      if (!this.parent) {\n        (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.invariant)(\"[@zag-js/core > send-parent] Cannot send event to an unknown parent\");\n      }\n      const event = toEvent(evt);\n      this.parent?.send(event);\n    });\n    __publicField(this, \"log\", (...args) => {\n      if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isDev)() && this.options.debug) {\n        console.log(...args);\n      }\n    });\n    /**\n     * Function to send an event to current machine\n     */\n    __publicField(this, \"send\", (evt) => {\n      const event = toEvent(evt);\n      this.transition(this.state.value, event);\n    });\n    __publicField(this, \"transition\", (state, evt) => {\n      const stateNode = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isString)(state) ? this.getStateNode(state) : state?.stateNode;\n      const event = toEvent(evt);\n      if (!stateNode && !this.config.on) {\n        const msg = this.status === \"Stopped\" /* Stopped */ ? \"[@zag-js/core > transition] Cannot transition a stopped machine\" : `[@zag-js/core > transition] State does not have a definition for \\`state\\`: ${state}, \\`event\\`: ${event.type}`;\n        (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.warn)(msg);\n        return;\n      }\n      const transitions = (\n        // @ts-expect-error - Fix this\n        stateNode?.on?.[event.type] ?? this.config.on?.[event.type]\n      );\n      const next = this.getNextStateInfo(transitions, event);\n      this.performStateChangeEffects(this.state.value, next, event);\n      return next.stateNode;\n    });\n    __publicField(this, \"subscribe\", (listener) => {\n      this.stateListeners.add(listener);\n      if (this.status === \"Running\" /* Running */) {\n        listener(this.stateSnapshot);\n      }\n      return () => {\n        this.stateListeners.delete(listener);\n      };\n    });\n    __publicField(this, \"onDone\", (listener) => {\n      this.doneListeners.add(listener);\n      return this;\n    });\n    __publicField(this, \"onTransition\", (listener) => {\n      this.stateListeners.add(listener);\n      if (this.status === \"Running\" /* Running */) {\n        listener(this.stateSnapshot);\n      }\n      return this;\n    });\n    this.config = (0,_zag_js_store__WEBPACK_IMPORTED_MODULE_0__.clone)(config);\n    this.options = (0,_zag_js_store__WEBPACK_IMPORTED_MODULE_0__.clone)(options ?? {});\n    this.id = this.config.id ?? `machine-${(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.uuid)()}`;\n    this.guardMap = this.options?.guards ?? {};\n    this.actionMap = this.options?.actions ?? {};\n    this.delayMap = this.options?.delays ?? {};\n    this.activityMap = this.options?.activities ?? {};\n    this.sync = this.options?.sync ?? false;\n    this.state = createProxy(this.config);\n    this.initialContext = (0,_zag_js_store__WEBPACK_IMPORTED_MODULE_0__.snapshot)(this.state.context);\n  }\n  // immutable state value\n  get stateSnapshot() {\n    return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.cast)((0,_zag_js_store__WEBPACK_IMPORTED_MODULE_0__.snapshot)(this.state));\n  }\n  getState() {\n    return this.stateSnapshot;\n  }\n  // immutable context value\n  get contextSnapshot() {\n    return this.stateSnapshot.context;\n  }\n  /**\n   * A reference to the instance methods of the machine.\n   * Useful when spawning child machines and managing the communication between them.\n   */\n  get self() {\n    const self = this;\n    return {\n      id: this.id,\n      send: this.send.bind(this),\n      sendParent: this.sendParent.bind(this),\n      sendChild: this.sendChild.bind(this),\n      stop: this.stop.bind(this),\n      stopChild: this.stopChild.bind(this),\n      spawn: this.spawn.bind(this),\n      stopActivity: this.stopActivity.bind(this),\n      get state() {\n        return self.stateSnapshot;\n      },\n      get initialContext() {\n        return self.initialContext;\n      },\n      get initialState() {\n        return self.initialState?.target ?? \"\";\n      }\n    };\n  }\n  get meta() {\n    return {\n      state: this.stateSnapshot,\n      guards: this.guardMap,\n      send: this.send.bind(this),\n      self: this.self,\n      initialContext: this.initialContext,\n      initialState: this.initialState?.target ?? \"\",\n      getState: () => this.stateSnapshot,\n      getAction: (key) => this.actionMap[key],\n      getGuard: (key) => this.guardMap[key]\n    };\n  }\n  get guardMeta() {\n    return {\n      state: this.stateSnapshot\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return \"Machine\";\n  }\n  getHydrationState() {\n    const state = this.getState();\n    return {\n      value: state.value,\n      tags: state.tags\n    };\n  }\n};\nvar createMachine = (config, options) => new Machine(config, options);\nvar isMachine = (value) => {\n  return value instanceof Machine || value?.type === \"machine\" /* Machine */;\n};\nvar clsx = (...args) => args.map((str) => str?.trim?.()).filter(Boolean).join(\" \");\nvar CSS_REGEX = /((?:--)?(?:\\w+-?)+)\\s*:\\s*([^;]*)/g;\nvar serialize = (style) => {\n  const res = {};\n  let match;\n  while (match = CSS_REGEX.exec(style)) {\n    res[match[1]] = match[2];\n  }\n  return res;\n};\nvar css = (a, b) => {\n  if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isString)(a)) {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isString)(b)) return `${a};${b}`;\n    a = serialize(a);\n  } else if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isString)(b)) {\n    b = serialize(b);\n  }\n  return Object.assign({}, a ?? {}, b ?? {});\n};\nfunction mergeProps(...args) {\n  let result = {};\n  for (let props of args) {\n    for (let key in result) {\n      if (key.startsWith(\"on\") && typeof result[key] === \"function\" && typeof props[key] === \"function\") {\n        result[key] = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.callAll)(props[key], result[key]);\n        continue;\n      }\n      if (key === \"className\" || key === \"class\") {\n        result[key] = clsx(result[key], props[key]);\n        continue;\n      }\n      if (key === \"style\") {\n        result[key] = css(result[key], props[key]);\n        continue;\n      }\n      result[key] = props[key] !== void 0 ? props[key] : result[key];\n    }\n    for (let key in props) {\n      if (result[key] === void 0) {\n        result[key] = props[key];\n      }\n    }\n  }\n  return result;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9jb3JlL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBMEY7QUFDMUI7QUFDc0g7O0FBRXRMO0FBQ0EsOEVBQThFLDZEQUE2RDtBQUMzSTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsc0RBQU87QUFDMUI7QUFDQSxVQUFVLDREQUFhO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyx1REFBUSxZQUFZLGNBQWM7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLHNEQUFPO0FBQ2hCO0FBQ0E7QUFDQSxTQUFTLHVEQUFRO0FBQ2pCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1REFBUTtBQUNoQjtBQUNBO0FBQ0EsUUFBUSx5REFBVTtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHVEQUFRO0FBQ2hCO0FBQ0EsYUFBYSx5REFBVTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QyxtREFBSSxHQUFHO0FBQ3BELDJDQUEyQyxtREFBSSxHQUFHO0FBQ2xEO0FBQ0EsZ0JBQWdCLG9EQUFLO0FBQ3JCO0FBQ0E7QUFDQSxXQUFXLG1EQUFJLEdBQUc7QUFDbEIsbUJBQW1CLG1EQUFJLEdBQUc7QUFDMUIsYUFBYSxnRUFBaUI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGFBQWEsbURBQUk7QUFDakIsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixpQ0FBaUM7QUFDNUQsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILFNBQVMsbURBQUk7QUFDYjtBQUNBO0FBQ0E7QUFDQSxRQUFRLHVEQUFRO0FBQ2hCLFFBQVEseURBQVU7QUFDbEI7QUFDQTtBQUNBLFFBQVEsdURBQVE7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSx3REFBUztBQUNqQjtBQUNBLDJFQUEyRSxNQUFNO0FBQ2pGO0FBQ0EsZUFBZSx5REFBVTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyx1REFBUSxhQUFhLFNBQVM7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MsK0NBQUk7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyx3REFBUztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWCxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHVEQUFRO0FBQzdCLHNCQUFzQix1REFBUTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGNBQWMsUUFBUTtBQUN0QjtBQUNBLGlCQUFpQix1REFBUTtBQUN6QixzQkFBc0Isd0RBQVM7QUFDL0IscUJBQXFCLHVEQUFRO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHNEQUFPO0FBQ3hCO0FBQ0E7QUFDQSxRQUFRLHdEQUFTLGdDQUFnQyxXQUFXO0FBQzVEO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsd0RBQVMsMERBQTBELEdBQUc7QUFDOUU7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLG9CQUFvQixzREFBTztBQUMzQjtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsbURBQUk7QUFDdEM7QUFDQTtBQUNBLE9BQU87QUFDUCxhQUFhLG1EQUFJLENBQUMsa0RBQUc7QUFDckIsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxvREFBSztBQUNiLFFBQVE7QUFDUjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0Msc0RBQU87QUFDM0MsS0FBSztBQUNMO0FBQ0EsbUJBQW1CLHNEQUFPO0FBQzFCLHlCQUF5QjtBQUN6Qix3QkFBd0I7QUFDeEIsMkJBQTJCO0FBQzNCLHdCQUF3QjtBQUN4QixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsV0FBVztBQUM1QztBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsc0RBQU87QUFDakI7QUFDQTtBQUNBLGFBQWEsc0RBQU87QUFDcEIsNEZBQTRGLDJCQUEyQjtBQUN2SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxVQUFVLHVEQUFRO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsdURBQVE7QUFDM0IsUUFBUSxtREFBSTtBQUNaLFVBQVUsdURBQVE7QUFDbEIsb0ZBQW9GLE9BQU87QUFDM0Y7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQix1REFBUTtBQUMzQjtBQUNBLFVBQVUsbURBQUksOEVBQThFLFNBQVM7QUFDckc7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsdURBQVEseUNBQXlDLG1EQUFJO0FBQzNFO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsc0RBQU87QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLHlCQUF5QixrREFBRztBQUM1QixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHdEQUFTO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLFVBQVUsb0RBQUs7QUFDZjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLHdCQUF3Qix1REFBUTtBQUNoQztBQUNBO0FBQ0EsaU5BQWlOLE1BQU0sZUFBZSxXQUFXO0FBQ2pQLFFBQVEsbURBQUk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLGtCQUFrQixvREFBSztBQUN2QixtQkFBbUIsb0RBQUssY0FBYztBQUN0QywyQ0FBMkMsbURBQUksR0FBRztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsdURBQVE7QUFDbEM7QUFDQTtBQUNBO0FBQ0EsV0FBVyxtREFBSSxDQUFDLHVEQUFRO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sdURBQVE7QUFDZCxRQUFRLHVEQUFRLGVBQWUsR0FBRyxFQUFFLEVBQUU7QUFDdEM7QUFDQSxJQUFJLFNBQVMsdURBQVE7QUFDckI7QUFDQTtBQUNBLHlCQUF5QixTQUFTLFNBQVM7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHNEQUFPO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRW9GIiwic291cmNlcyI6WyIvVXNlcnMvcGhpbGlhaGFtbW9uZC9EZXNrdG9wL2xlYXJuZXItYXBwLXN5c3RlbS9ub2RlX21vZHVsZXMvQHphZy1qcy9jb3JlL2Rpc3QvaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNsb25lLCBzbmFwc2hvdCwgcHJveHksIHByb3h5V2l0aENvbXB1dGVkLCBzdWJzY3JpYmUsIHJlZiB9IGZyb20gJ0B6YWctanMvc3RvcmUnO1xuZXhwb3J0IHsgcHJveHksIHJlZiwgc25hcHNob3QsIHN1YnNjcmliZSB9IGZyb20gJ0B6YWctanMvc3RvcmUnO1xuaW1wb3J0IHsgY29tcGFjdCwgaXNQbGFpbk9iamVjdCwgdXVpZCwgY2FzdCwgY2FsbEFsbCwgaXNTdHJpbmcsIGlzRnVuY3Rpb24sIG5vb3AsIGlzT2JqZWN0LCBydW5JZkZuLCBpbnZhcmlhbnQsIGNsZWFyLCBpc0FycmF5LCBoYXNQcm9wLCB3YXJuLCBpc0RldiwgaXNOdW1iZXIgfSBmcm9tICdAemFnLWpzL3V0aWxzJztcblxudmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBfX2RlZk5vcm1hbFByb3AgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBrZXkgaW4gb2JqID8gX19kZWZQcm9wKG9iaiwga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUsIHZhbHVlIH0pIDogb2JqW2tleV0gPSB2YWx1ZTtcbnZhciBfX3B1YmxpY0ZpZWxkID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4gX19kZWZOb3JtYWxQcm9wKG9iaiwgdHlwZW9mIGtleSAhPT0gXCJzeW1ib2xcIiA/IGtleSArIFwiXCIgOiBrZXksIHZhbHVlKTtcbmZ1bmN0aW9uIGRlZXBNZXJnZShzb3VyY2UsIC4uLm9iamVjdHMpIHtcbiAgZm9yIChjb25zdCBvYmogb2Ygb2JqZWN0cykge1xuICAgIGNvbnN0IHRhcmdldCA9IGNvbXBhY3Qob2JqKTtcbiAgICBmb3IgKGNvbnN0IGtleSBpbiB0YXJnZXQpIHtcbiAgICAgIGlmIChpc1BsYWluT2JqZWN0KG9ialtrZXldKSkge1xuICAgICAgICBpZiAoIXNvdXJjZVtrZXldKSB7XG4gICAgICAgICAgc291cmNlW2tleV0gPSB7fTtcbiAgICAgICAgfVxuICAgICAgICBkZWVwTWVyZ2Uoc291cmNlW2tleV0sIG9ialtrZXldKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNvdXJjZVtrZXldID0gb2JqW2tleV07XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHJldHVybiBzb3VyY2U7XG59XG5mdW5jdGlvbiB0b0V2ZW50KGV2ZW50KSB7XG4gIGNvbnN0IG9iaiA9IGlzU3RyaW5nKGV2ZW50KSA/IHsgdHlwZTogZXZlbnQgfSA6IGV2ZW50O1xuICByZXR1cm4gb2JqO1xufVxuZnVuY3Rpb24gdG9BcnJheSh2YWx1ZSkge1xuICBpZiAoIXZhbHVlKSByZXR1cm4gW107XG4gIHJldHVybiBpc0FycmF5KHZhbHVlKSA/IHZhbHVlLnNsaWNlKCkgOiBbdmFsdWVdO1xufVxuZnVuY3Rpb24gaXNHdWFyZEhlbHBlcih2YWx1ZSkge1xuICByZXR1cm4gaXNPYmplY3QodmFsdWUpICYmIHZhbHVlLnByZWRpY2F0ZSAhPSBudWxsO1xufVxuXG4vLyBzcmMvZ3VhcmQtdXRpbHMudHNcbnZhciBUcnV0aHkgPSAoKSA9PiB0cnVlO1xuZnVuY3Rpb24gZXhlYyhndWFyZE1hcCwgY3R4LCBldmVudCwgbWV0YSkge1xuICByZXR1cm4gKGd1YXJkKSA9PiB7XG4gICAgaWYgKGlzU3RyaW5nKGd1YXJkKSkge1xuICAgICAgcmV0dXJuICEhZ3VhcmRNYXBbZ3VhcmRdPy4oY3R4LCBldmVudCwgbWV0YSk7XG4gICAgfVxuICAgIGlmIChpc0Z1bmN0aW9uKGd1YXJkKSkge1xuICAgICAgcmV0dXJuIGd1YXJkKGN0eCwgZXZlbnQsIG1ldGEpO1xuICAgIH1cbiAgICByZXR1cm4gZ3VhcmQucHJlZGljYXRlKGd1YXJkTWFwKShjdHgsIGV2ZW50LCBtZXRhKTtcbiAgfTtcbn1cbmZ1bmN0aW9uIG9yKC4uLmNvbmRpdGlvbnMpIHtcbiAgcmV0dXJuIHtcbiAgICBwcmVkaWNhdGU6IChndWFyZE1hcCkgPT4gKGN0eCwgZXZlbnQsIG1ldGEpID0+IGNvbmRpdGlvbnMubWFwKGV4ZWMoZ3VhcmRNYXAsIGN0eCwgZXZlbnQsIG1ldGEpKS5zb21lKEJvb2xlYW4pXG4gIH07XG59XG5mdW5jdGlvbiBhbmQoLi4uY29uZGl0aW9ucykge1xuICByZXR1cm4ge1xuICAgIHByZWRpY2F0ZTogKGd1YXJkTWFwKSA9PiAoY3R4LCBldmVudCwgbWV0YSkgPT4gY29uZGl0aW9ucy5tYXAoZXhlYyhndWFyZE1hcCwgY3R4LCBldmVudCwgbWV0YSkpLmV2ZXJ5KEJvb2xlYW4pXG4gIH07XG59XG5mdW5jdGlvbiBub3QoY29uZGl0aW9uKSB7XG4gIHJldHVybiB7XG4gICAgcHJlZGljYXRlOiAoZ3VhcmRNYXApID0+IChjdHgsIGV2ZW50LCBtZXRhKSA9PiB7XG4gICAgICByZXR1cm4gIWV4ZWMoZ3VhcmRNYXAsIGN0eCwgZXZlbnQsIG1ldGEpKGNvbmRpdGlvbik7XG4gICAgfVxuICB9O1xufVxuZnVuY3Rpb24gc3RhdGVJbiguLi52YWx1ZXMpIHtcbiAgcmV0dXJuIChfY3R4LCBfZXZ0LCBtZXRhKSA9PiBtZXRhLnN0YXRlLm1hdGNoZXMoLi4udmFsdWVzKTtcbn1cbnZhciBndWFyZHMgPSB7IG9yLCBhbmQsIG5vdCwgc3RhdGVJbiB9O1xuZnVuY3Rpb24gY2hvb3NlKGFjdGlvbnMpIHtcbiAgcmV0dXJuIHtcbiAgICBwcmVkaWNhdGU6IChndWFyZE1hcCkgPT4gKGN0eCwgZXZlbnQsIG1ldGEpID0+IGFjdGlvbnMuZmluZCgoZGVmKSA9PiB7XG4gICAgICBjb25zdCBndWFyZCA9IGRlZi5ndWFyZCA/PyBUcnV0aHk7XG4gICAgICByZXR1cm4gZXhlYyhndWFyZE1hcCwgY3R4LCBldmVudCwgbWV0YSkoZ3VhcmQpO1xuICAgIH0pPy5hY3Rpb25zXG4gIH07XG59XG5mdW5jdGlvbiBkZXRlcm1pbmVHdWFyZEZuKGd1YXJkLCBndWFyZE1hcCkge1xuICBndWFyZCA9IGd1YXJkID8/IFRydXRoeTtcbiAgcmV0dXJuIChjb250ZXh0LCBldmVudCwgbWV0YSkgPT4ge1xuICAgIGlmIChpc1N0cmluZyhndWFyZCkpIHtcbiAgICAgIGNvbnN0IHZhbHVlID0gZ3VhcmRNYXBbZ3VhcmRdO1xuICAgICAgcmV0dXJuIGlzRnVuY3Rpb24odmFsdWUpID8gdmFsdWUoY29udGV4dCwgZXZlbnQsIG1ldGEpIDogdmFsdWU7XG4gICAgfVxuICAgIGlmIChpc0d1YXJkSGVscGVyKGd1YXJkKSkge1xuICAgICAgcmV0dXJuIGd1YXJkLnByZWRpY2F0ZShndWFyZE1hcCkoY29udGV4dCwgZXZlbnQsIG1ldGEpO1xuICAgIH1cbiAgICByZXR1cm4gZ3VhcmQ/Lihjb250ZXh0LCBldmVudCwgbWV0YSk7XG4gIH07XG59XG5mdW5jdGlvbiBkZXRlcm1pbmVBY3Rpb25zRm4odmFsdWVzLCBndWFyZE1hcCkge1xuICByZXR1cm4gKGNvbnRleHQsIGV2ZW50LCBtZXRhKSA9PiB7XG4gICAgaWYgKGlzR3VhcmRIZWxwZXIodmFsdWVzKSkge1xuICAgICAgcmV0dXJuIHZhbHVlcy5wcmVkaWNhdGUoZ3VhcmRNYXApKGNvbnRleHQsIGV2ZW50LCBtZXRhKTtcbiAgICB9XG4gICAgcmV0dXJuIHZhbHVlcztcbiAgfTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZVByb3h5KGNvbmZpZykge1xuICBjb25zdCBjb21wdXRlZENvbnRleHQgPSBjb25maWcuY29tcHV0ZWQgPz8gY2FzdCh7fSk7XG4gIGNvbnN0IGluaXRpYWxDb250ZXh0ID0gY29uZmlnLmNvbnRleHQgPz8gY2FzdCh7fSk7XG4gIGNvbnN0IGluaXRpYWxUYWdzID0gY29uZmlnLmluaXRpYWwgPyBjb25maWcuc3RhdGVzPy5bY29uZmlnLmluaXRpYWxdPy50YWdzIDogW107XG4gIGNvbnN0IHN0YXRlID0gcHJveHkoe1xuICAgIHZhbHVlOiBjb25maWcuaW5pdGlhbCA/PyBcIlwiLFxuICAgIHByZXZpb3VzVmFsdWU6IFwiXCIsXG4gICAgZXZlbnQ6IGNhc3Qoe30pLFxuICAgIHByZXZpb3VzRXZlbnQ6IGNhc3Qoe30pLFxuICAgIGNvbnRleHQ6IHByb3h5V2l0aENvbXB1dGVkKGluaXRpYWxDb250ZXh0LCBjb21wdXRlZENvbnRleHQpLFxuICAgIGRvbmU6IGZhbHNlLFxuICAgIHRhZ3M6IGluaXRpYWxUYWdzID8/IFtdLFxuICAgIGhhc1RhZyh0YWcpIHtcbiAgICAgIHJldHVybiB0aGlzLnRhZ3MuaW5jbHVkZXModGFnKTtcbiAgICB9LFxuICAgIG1hdGNoZXMoLi4udmFsdWUpIHtcbiAgICAgIHJldHVybiB2YWx1ZS5pbmNsdWRlcyh0aGlzLnZhbHVlKTtcbiAgICB9LFxuICAgIGNhbihldmVudCkge1xuICAgICAgcmV0dXJuIGNhc3QodGhpcykubmV4dEV2ZW50cy5pbmNsdWRlcyhldmVudCk7XG4gICAgfSxcbiAgICBnZXQgbmV4dEV2ZW50cygpIHtcbiAgICAgIGNvbnN0IHN0YXRlRXZlbnRzID0gY29uZmlnLnN0YXRlcz8uW3RoaXMudmFsdWVdPy5bXCJvblwiXSA/PyB7fTtcbiAgICAgIGNvbnN0IGdsb2JhbEV2ZW50cyA9IGNvbmZpZz8ub24gPz8ge307XG4gICAgICByZXR1cm4gT2JqZWN0LmtleXMoeyAuLi5zdGF0ZUV2ZW50cywgLi4uZ2xvYmFsRXZlbnRzIH0pO1xuICAgIH0sXG4gICAgZ2V0IGNoYW5nZWQoKSB7XG4gICAgICBpZiAodGhpcy5ldmVudC52YWx1ZSA9PT0gXCJtYWNoaW5lLmluaXRcIiAvKiBJbml0ICovIHx8ICF0aGlzLnByZXZpb3VzVmFsdWUpIHJldHVybiBmYWxzZTtcbiAgICAgIHJldHVybiB0aGlzLnZhbHVlICE9PSB0aGlzLnByZXZpb3VzVmFsdWU7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIGNhc3Qoc3RhdGUpO1xufVxuZnVuY3Rpb24gZGV0ZXJtaW5lRGVsYXlGbihkZWxheSwgZGVsYXlzTWFwKSB7XG4gIHJldHVybiAoY29udGV4dCwgZXZlbnQpID0+IHtcbiAgICBpZiAoaXNOdW1iZXIoZGVsYXkpKSByZXR1cm4gZGVsYXk7XG4gICAgaWYgKGlzRnVuY3Rpb24oZGVsYXkpKSB7XG4gICAgICByZXR1cm4gZGVsYXkoY29udGV4dCwgZXZlbnQpO1xuICAgIH1cbiAgICBpZiAoaXNTdHJpbmcoZGVsYXkpKSB7XG4gICAgICBjb25zdCB2YWx1ZSA9IE51bWJlci5wYXJzZUZsb2F0KGRlbGF5KTtcbiAgICAgIGlmICghTnVtYmVyLmlzTmFOKHZhbHVlKSkge1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICB9XG4gICAgICBpZiAoZGVsYXlzTWFwKSB7XG4gICAgICAgIGNvbnN0IHZhbHVlT3JGbiA9IGRlbGF5c01hcD8uW2RlbGF5XTtcbiAgICAgICAgaW52YXJpYW50KFxuICAgICAgICAgIHZhbHVlT3JGbiA9PSBudWxsLFxuICAgICAgICAgIGBbQHphZy1qcy9jb3JlID4gZGV0ZXJtaW5lLWRlbGF5XSBDYW5ub3QgZGV0ZXJtaW5lIGRlbGF5IGZvciBcXGAke2RlbGF5fVxcYC4gSXQgZG9lc24ndCBleGlzdCBpbiBcXGBvcHRpb25zLmRlbGF5c1xcYGBcbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIGlzRnVuY3Rpb24odmFsdWVPckZuKSA/IHZhbHVlT3JGbihjb250ZXh0LCBldmVudCkgOiB2YWx1ZU9yRm47XG4gICAgICB9XG4gICAgfVxuICB9O1xufVxuZnVuY3Rpb24gdG9UYXJnZXQodGFyZ2V0KSB7XG4gIHJldHVybiBpc1N0cmluZyh0YXJnZXQpID8geyB0YXJnZXQgfSA6IHRhcmdldDtcbn1cbmZ1bmN0aW9uIGRldGVybWluZVRyYW5zaXRpb25Gbih0cmFuc2l0aW9ucywgZ3VhcmRNYXApIHtcbiAgcmV0dXJuIChjb250ZXh0LCBldmVudCwgbWV0YSkgPT4ge1xuICAgIHJldHVybiB0b0FycmF5KHRyYW5zaXRpb25zKS5tYXAodG9UYXJnZXQpLmZpbmQoKHRyYW5zaXRpb24pID0+IHtcbiAgICAgIGNvbnN0IGRldGVybWluZUd1YXJkID0gZGV0ZXJtaW5lR3VhcmRGbih0cmFuc2l0aW9uLmd1YXJkLCBndWFyZE1hcCk7XG4gICAgICBjb25zdCBndWFyZCA9IGRldGVybWluZUd1YXJkKGNvbnRleHQsIGV2ZW50LCBtZXRhKTtcbiAgICAgIHJldHVybiBndWFyZCA/PyB0cmFuc2l0aW9uLnRhcmdldCA/PyB0cmFuc2l0aW9uLmFjdGlvbnM7XG4gICAgfSk7XG4gIH07XG59XG5cbi8vIHNyYy9tYWNoaW5lLnRzXG52YXIgTWFjaGluZSA9IGNsYXNzIHtcbiAgLy8gTGV0J3MgZ2V0IHN0YXJ0ZWQhXG4gIGNvbnN0cnVjdG9yKGNvbmZpZywgb3B0aW9ucykge1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJzdGF0dXNcIiwgXCJOb3QgU3RhcnRlZFwiIC8qIE5vdFN0YXJ0ZWQgKi8pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJzdGF0ZVwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiaW5pdGlhbFN0YXRlXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJpbml0aWFsQ29udGV4dFwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiaWRcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInR5cGVcIiwgXCJtYWNoaW5lXCIgLyogTWFjaGluZSAqLyk7XG4gICAgLy8gQ2xlYW51cCBmdW5jdGlvbiBtYXAgKHBlciBzdGF0ZSlcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiYWN0aXZpdHlFdmVudHNcIiwgLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImRlbGF5ZWRFdmVudHNcIiwgLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKSk7XG4gICAgLy8gc3RhdGUgdXBkYXRlIGxpc3RlbmVycyB0aGUgdXNlciBjYW4gb3B0LWluIGZvclxuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJzdGF0ZUxpc3RlbmVyc1wiLCAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZG9uZUxpc3RlbmVyc1wiLCAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiY29udGV4dFdhdGNoZXJzXCIsIC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KCkpO1xuICAgIC8vIENsZWFudXAgZnVuY3Rpb25zIChmb3IgYHN1YnNjcmliZWApXG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInJlbW92ZVN0YXRlTGlzdGVuZXJcIiwgbm9vcCk7XG4gICAgLy8gRm9yIFBhcmVudCA8PT0+IFNwYXduZWQgQWN0b3IgcmVsYXRpb25zaGlwXG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInBhcmVudFwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiY2hpbGRyZW5cIiwgLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKSk7XG4gICAgLy8gQSBtYXAgb2YgZ3VhcmQsIGFjdGlvbiwgZGVsYXkgaW1wbGVtZW50YXRpb25zXG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImd1YXJkTWFwXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJhY3Rpb25NYXBcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImRlbGF5TWFwXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJhY3Rpdml0eU1hcFwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic3luY1wiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwib3B0aW9uc1wiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiY29uZmlnXCIpO1xuICAgIC8vIGNyZWF0ZWQgYWN0aW9uc1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJfY3JlYXRlZFwiLCAoKSA9PiB7XG4gICAgICBpZiAoIXRoaXMuY29uZmlnLmNyZWF0ZWQpIHJldHVybjtcbiAgICAgIGNvbnN0IGV2ZW50ID0gdG9FdmVudChcIm1hY2hpbmUuY3JlYXRlZFwiIC8qIENyZWF0ZWQgKi8pO1xuICAgICAgdGhpcy5leGVjdXRlQWN0aW9ucyh0aGlzLmNvbmZpZy5jcmVhdGVkLCBldmVudCk7XG4gICAgfSk7XG4gICAgLy8gU3RhcnRzIHRoZSBpbnRlcnByZXRlZCBtYWNoaW5lLlxuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJzdGFydFwiLCAoaW5pdCkgPT4ge1xuICAgICAgdGhpcy5zdGF0ZS52YWx1ZSA9IFwiXCI7XG4gICAgICB0aGlzLnN0YXRlLnRhZ3MgPSBbXTtcbiAgICAgIGlmICh0aGlzLnN0YXR1cyA9PT0gXCJSdW5uaW5nXCIgLyogUnVubmluZyAqLykge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgIH1cbiAgICAgIHRoaXMuc3RhdHVzID0gXCJSdW5uaW5nXCIgLyogUnVubmluZyAqLztcbiAgICAgIHRoaXMucmVtb3ZlU3RhdGVMaXN0ZW5lciA9IHN1YnNjcmliZShcbiAgICAgICAgdGhpcy5zdGF0ZSxcbiAgICAgICAgKCkgPT4ge1xuICAgICAgICAgIHRoaXMuc3RhdGVMaXN0ZW5lcnMuZm9yRWFjaCgobGlzdGVuZXIpID0+IHtcbiAgICAgICAgICAgIGxpc3RlbmVyKHRoaXMuc3RhdGVTbmFwc2hvdCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIHRoaXMuc3luY1xuICAgICAgKTtcbiAgICAgIHRoaXMuc2V0dXBDb250ZXh0V2F0Y2hlcnMoKTtcbiAgICAgIHRoaXMuZXhlY3V0ZUFjdGl2aXRpZXModG9FdmVudChcIm1hY2hpbmUuc3RhcnRcIiAvKiBTdGFydCAqLyksIHRvQXJyYXkodGhpcy5jb25maWcuYWN0aXZpdGllcyksIFwibWFjaGluZS5zdGFydFwiIC8qIFN0YXJ0ICovKTtcbiAgICAgIHRoaXMuZXhlY3V0ZUFjdGlvbnModGhpcy5jb25maWcuZW50cnksIHRvRXZlbnQoXCJtYWNoaW5lLnN0YXJ0XCIgLyogU3RhcnQgKi8pKTtcbiAgICAgIGNvbnN0IGV2ZW50ID0gdG9FdmVudChcIm1hY2hpbmUuaW5pdFwiIC8qIEluaXQgKi8pO1xuICAgICAgY29uc3QgdGFyZ2V0ID0gaXNPYmplY3QoaW5pdCkgPyBpbml0LnZhbHVlIDogaW5pdDtcbiAgICAgIGNvbnN0IGNvbnRleHQgPSBpc09iamVjdChpbml0KSA/IGluaXQuY29udGV4dCA6IHZvaWQgMDtcbiAgICAgIGlmIChjb250ZXh0KSB7XG4gICAgICAgIHRoaXMuc2V0Q29udGV4dChjb250ZXh0KTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IHRyYW5zaXRpb24gPSB7XG4gICAgICAgIHRhcmdldDogdGFyZ2V0ID8/IHRoaXMuY29uZmlnLmluaXRpYWxcbiAgICAgIH07XG4gICAgICBjb25zdCBuZXh0ID0gdGhpcy5nZXROZXh0U3RhdGVJbmZvKHRyYW5zaXRpb24sIGV2ZW50KTtcbiAgICAgIHRoaXMuaW5pdGlhbFN0YXRlID0gbmV4dDtcbiAgICAgIHRoaXMucGVyZm9ybVN0YXRlQ2hhbmdlRWZmZWN0cyh0aGlzLnN0YXRlLnZhbHVlLCBuZXh0LCBldmVudCk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic2V0dXBDb250ZXh0V2F0Y2hlcnNcIiwgKCkgPT4ge1xuICAgICAgY29uc3QgeyB3YXRjaCB9ID0gdGhpcy5jb25maWc7XG4gICAgICBpZiAoIXdhdGNoKSByZXR1cm47XG4gICAgICBsZXQgcHJldiA9IHNuYXBzaG90KHRoaXMuc3RhdGUuY29udGV4dCk7XG4gICAgICBjb25zdCBjbGVhbnVwID0gc3Vic2NyaWJlKHRoaXMuc3RhdGUuY29udGV4dCwgKCkgPT4ge1xuICAgICAgICBjb25zdCBuZXh0ID0gc25hcHNob3QodGhpcy5zdGF0ZS5jb250ZXh0KTtcbiAgICAgICAgZm9yIChjb25zdCBba2V5LCBmbl0gb2YgT2JqZWN0LmVudHJpZXMod2F0Y2gpKSB7XG4gICAgICAgICAgY29uc3QgaXNFcXVhbCA9IHRoaXMub3B0aW9ucy5jb21wYXJlRm5zPy5ba2V5XSA/PyBPYmplY3QuaXM7XG4gICAgICAgICAgaWYgKGlzRXF1YWwocHJldltrZXldLCBuZXh0W2tleV0pKSBjb250aW51ZTtcbiAgICAgICAgICB0aGlzLmV4ZWN1dGVBY3Rpb25zKGZuLCB0aGlzLnN0YXRlLmV2ZW50KTtcbiAgICAgICAgfVxuICAgICAgICBwcmV2ID0gbmV4dDtcbiAgICAgIH0pO1xuICAgICAgdGhpcy5jb250ZXh0V2F0Y2hlcnMuYWRkKGNsZWFudXApO1xuICAgIH0pO1xuICAgIC8vIFN0b3BzIHRoZSBpbnRlcnByZXRlZCBtYWNoaW5lXG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInN0b3BcIiwgKCkgPT4ge1xuICAgICAgaWYgKHRoaXMuc3RhdHVzID09PSBcIlN0b3BwZWRcIiAvKiBTdG9wcGVkICovKSByZXR1cm47XG4gICAgICB0aGlzLnBlcmZvcm1FeGl0RWZmZWN0cyh0aGlzLnN0YXRlLnZhbHVlLCB0b0V2ZW50KFwibWFjaGluZS5zdG9wXCIgLyogU3RvcCAqLykpO1xuICAgICAgdGhpcy5leGVjdXRlQWN0aW9ucyh0aGlzLmNvbmZpZy5leGl0LCB0b0V2ZW50KFwibWFjaGluZS5zdG9wXCIgLyogU3RvcCAqLykpO1xuICAgICAgdGhpcy5zZXRTdGF0ZShcIlwiKTtcbiAgICAgIHRoaXMuc2V0RXZlbnQoXCJtYWNoaW5lLnN0b3BcIiAvKiBTdG9wICovKTtcbiAgICAgIHRoaXMuc3RvcFN0YXRlTGlzdGVuZXJzKCk7XG4gICAgICB0aGlzLnN0b3BDaGlsZHJlbigpO1xuICAgICAgdGhpcy5zdG9wQWN0aXZpdGllcygpO1xuICAgICAgdGhpcy5zdG9wRGVsYXllZEV2ZW50cygpO1xuICAgICAgdGhpcy5zdG9wQ29udGV4dFdhdGNoZXJzKCk7XG4gICAgICB0aGlzLnN0YXR1cyA9IFwiU3RvcHBlZFwiIC8qIFN0b3BwZWQgKi87XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic3RvcFN0YXRlTGlzdGVuZXJzXCIsICgpID0+IHtcbiAgICAgIHRoaXMucmVtb3ZlU3RhdGVMaXN0ZW5lcigpO1xuICAgICAgdGhpcy5zdGF0ZUxpc3RlbmVycy5jbGVhcigpO1xuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJzdG9wQ29udGV4dFdhdGNoZXJzXCIsICgpID0+IHtcbiAgICAgIHRoaXMuY29udGV4dFdhdGNoZXJzLmZvckVhY2goKGZuKSA9PiBmbigpKTtcbiAgICAgIHRoaXMuY29udGV4dFdhdGNoZXJzLmNsZWFyKCk7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInN0b3BEZWxheWVkRXZlbnRzXCIsICgpID0+IHtcbiAgICAgIHRoaXMuZGVsYXllZEV2ZW50cy5mb3JFYWNoKChzdGF0ZSkgPT4ge1xuICAgICAgICBzdGF0ZS5mb3JFYWNoKChzdG9wKSA9PiBzdG9wKCkpO1xuICAgICAgfSk7XG4gICAgICB0aGlzLmRlbGF5ZWRFdmVudHMuY2xlYXIoKTtcbiAgICB9KTtcbiAgICAvLyBDbGVhbnVwIHJ1bm5pbmcgYWN0aXZpdGllcyAoZS5nIGBzZXRJbnRlcnZhbGAsIGludm9rZWQgY2FsbGJhY2tzLCBwcm9taXNlcylcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic3RvcEFjdGl2aXRpZXNcIiwgKHN0YXRlKSA9PiB7XG4gICAgICBpZiAoc3RhdGUpIHtcbiAgICAgICAgdGhpcy5hY3Rpdml0eUV2ZW50cy5nZXQoc3RhdGUpPy5mb3JFYWNoKChzdG9wKSA9PiBzdG9wKCkpO1xuICAgICAgICB0aGlzLmFjdGl2aXR5RXZlbnRzLmdldChzdGF0ZSk/LmNsZWFyKCk7XG4gICAgICAgIHRoaXMuYWN0aXZpdHlFdmVudHMuZGVsZXRlKHN0YXRlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuYWN0aXZpdHlFdmVudHMuZm9yRWFjaCgoc3RhdGUyKSA9PiB7XG4gICAgICAgICAgc3RhdGUyLmZvckVhY2goKHN0b3ApID0+IHN0b3AoKSk7XG4gICAgICAgICAgc3RhdGUyLmNsZWFyKCk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmFjdGl2aXR5RXZlbnRzLmNsZWFyKCk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgLyoqXG4gICAgICogRnVuY3Rpb24gdG8gc2VuZCBldmVudCB0byBzcGF3bmVkIGNoaWxkIG1hY2hpbmUgb3IgYWN0b3JcbiAgICAgKi9cbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic2VuZENoaWxkXCIsIChldnQsIHRvKSA9PiB7XG4gICAgICBjb25zdCBldmVudCA9IHRvRXZlbnQoZXZ0KTtcbiAgICAgIGNvbnN0IGlkID0gcnVuSWZGbih0bywgdGhpcy5jb250ZXh0U25hcHNob3QpO1xuICAgICAgY29uc3QgY2hpbGQgPSB0aGlzLmNoaWxkcmVuLmdldChpZCk7XG4gICAgICBpZiAoIWNoaWxkKSB7XG4gICAgICAgIGludmFyaWFudChgW0B6YWctanMvY29yZV0gQ2Fubm90IHNlbmQgJyR7ZXZlbnQudHlwZX0nIGV2ZW50IHRvIHVua25vd24gY2hpbGRgKTtcbiAgICAgIH1cbiAgICAgIGNoaWxkLnNlbmQoZXZlbnQpO1xuICAgIH0pO1xuICAgIC8qKlxuICAgICAqIEZ1bmN0aW9uIHRvIHN0b3AgYSBydW5uaW5nIGNoaWxkIG1hY2hpbmUgb3IgYWN0b3JcbiAgICAgKi9cbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic3RvcENoaWxkXCIsIChpZCkgPT4ge1xuICAgICAgaWYgKCF0aGlzLmNoaWxkcmVuLmhhcyhpZCkpIHtcbiAgICAgICAgaW52YXJpYW50KGBbQHphZy1qcy9jb3JlID4gc3RvcC1jaGlsZF0gQ2Fubm90IHN0b3AgdW5rbm93biBjaGlsZCAke2lkfWApO1xuICAgICAgfVxuICAgICAgdGhpcy5jaGlsZHJlbi5nZXQoaWQpLnN0b3AoKTtcbiAgICAgIHRoaXMuY2hpbGRyZW4uZGVsZXRlKGlkKTtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwicmVtb3ZlQ2hpbGRcIiwgKGlkKSA9PiB7XG4gICAgICB0aGlzLmNoaWxkcmVuLmRlbGV0ZShpZCk7XG4gICAgfSk7XG4gICAgLy8gU3RvcCBhbmQgZGVsZXRlIHNwYXduZWQgYWN0b3JzXG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInN0b3BDaGlsZHJlblwiLCAoKSA9PiB7XG4gICAgICB0aGlzLmNoaWxkcmVuLmZvckVhY2goKGNoaWxkKSA9PiBjaGlsZC5zdG9wKCkpO1xuICAgICAgdGhpcy5jaGlsZHJlbi5jbGVhcigpO1xuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJzZXRQYXJlbnRcIiwgKHBhcmVudCkgPT4ge1xuICAgICAgdGhpcy5wYXJlbnQgPSBwYXJlbnQ7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInNwYXduXCIsIChzcmMsIGlkKSA9PiB7XG4gICAgICBjb25zdCBhY3RvciA9IHJ1bklmRm4oc3JjKTtcbiAgICAgIGlmIChpZCkgYWN0b3IuaWQgPSBpZDtcbiAgICAgIGFjdG9yLnR5cGUgPSBcIm1hY2hpbmUuYWN0b3JcIiAvKiBBY3RvciAqLztcbiAgICAgIGFjdG9yLnNldFBhcmVudCh0aGlzKTtcbiAgICAgIHRoaXMuY2hpbGRyZW4uc2V0KGFjdG9yLmlkLCBjYXN0KGFjdG9yKSk7XG4gICAgICBhY3Rvci5vbkRvbmUoKCkgPT4ge1xuICAgICAgICB0aGlzLnJlbW92ZUNoaWxkKGFjdG9yLmlkKTtcbiAgICAgIH0pLnN0YXJ0KCk7XG4gICAgICByZXR1cm4gY2FzdChyZWYoYWN0b3IpKTtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwic3RvcEFjdGl2aXR5XCIsIChrZXkpID0+IHtcbiAgICAgIGlmICghdGhpcy5zdGF0ZS52YWx1ZSkgcmV0dXJuO1xuICAgICAgY29uc3QgY2xlYW51cHMgPSB0aGlzLmFjdGl2aXR5RXZlbnRzLmdldCh0aGlzLnN0YXRlLnZhbHVlKTtcbiAgICAgIGNsZWFudXBzPy5nZXQoa2V5KT8uKCk7XG4gICAgICBjbGVhbnVwcz8uZGVsZXRlKGtleSk7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImFkZEFjdGl2aXR5Q2xlYW51cFwiLCAoc3RhdGUsIGtleSwgY2xlYW51cCkgPT4ge1xuICAgICAgaWYgKCFzdGF0ZSkgcmV0dXJuO1xuICAgICAgaWYgKCF0aGlzLmFjdGl2aXR5RXZlbnRzLmhhcyhzdGF0ZSkpIHtcbiAgICAgICAgdGhpcy5hY3Rpdml0eUV2ZW50cy5zZXQoc3RhdGUsIC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKFtba2V5LCBjbGVhbnVwXV0pKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuYWN0aXZpdHlFdmVudHMuZ2V0KHN0YXRlKT8uc2V0KGtleSwgY2xlYW51cCk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInNldFN0YXRlXCIsICh0YXJnZXQpID0+IHtcbiAgICAgIHRoaXMuc3RhdGUucHJldmlvdXNWYWx1ZSA9IHRoaXMuc3RhdGUudmFsdWU7XG4gICAgICB0aGlzLnN0YXRlLnZhbHVlID0gdGFyZ2V0O1xuICAgICAgY29uc3Qgc3RhdGVOb2RlID0gdGhpcy5nZXRTdGF0ZU5vZGUodGFyZ2V0KTtcbiAgICAgIGlmICh0YXJnZXQgPT0gbnVsbCkge1xuICAgICAgICBjbGVhcih0aGlzLnN0YXRlLnRhZ3MpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5zdGF0ZS50YWdzID0gdG9BcnJheShzdGF0ZU5vZGU/LnRhZ3MpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIC8qKlxuICAgICAqIFRvIHVzZWQgd2l0aGluIHNpZGUgZWZmZWN0cyBmb3IgUmVhY3Qgb3IgVnVlIHRvIHVwZGF0ZSBjb250ZXh0XG4gICAgICovXG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInNldENvbnRleHRcIiwgKGNvbnRleHQpID0+IHtcbiAgICAgIGlmICghY29udGV4dCkgcmV0dXJuO1xuICAgICAgZGVlcE1lcmdlKHRoaXMuc3RhdGUuY29udGV4dCwgY29tcGFjdChjb250ZXh0KSk7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInNldE9wdGlvbnNcIiwgKG9wdGlvbnMpID0+IHtcbiAgICAgIGNvbnN0IG9wdHMgPSBjb21wYWN0KG9wdGlvbnMpO1xuICAgICAgdGhpcy5hY3Rpb25NYXAgPSB7IC4uLnRoaXMuYWN0aW9uTWFwLCAuLi5vcHRzLmFjdGlvbnMgfTtcbiAgICAgIHRoaXMuZGVsYXlNYXAgPSB7IC4uLnRoaXMuZGVsYXlNYXAsIC4uLm9wdHMuZGVsYXlzIH07XG4gICAgICB0aGlzLmFjdGl2aXR5TWFwID0geyAuLi50aGlzLmFjdGl2aXR5TWFwLCAuLi5vcHRzLmFjdGl2aXRpZXMgfTtcbiAgICAgIHRoaXMuZ3VhcmRNYXAgPSB7IC4uLnRoaXMuZ3VhcmRNYXAsIC4uLm9wdHMuZ3VhcmRzIH07XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImdldFN0YXRlTm9kZVwiLCAoc3RhdGUpID0+IHtcbiAgICAgIGlmICghc3RhdGUpIHJldHVybjtcbiAgICAgIHJldHVybiB0aGlzLmNvbmZpZy5zdGF0ZXM/LltzdGF0ZV07XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImdldE5leHRTdGF0ZUluZm9cIiwgKHRyYW5zaXRpb25zLCBldmVudCkgPT4ge1xuICAgICAgY29uc3QgdHJhbnNpdGlvbiA9IHRoaXMuZGV0ZXJtaW5lVHJhbnNpdGlvbih0cmFuc2l0aW9ucywgZXZlbnQpO1xuICAgICAgY29uc3QgaXNUYXJnZXRsZXNzID0gIXRyYW5zaXRpb24/LnRhcmdldDtcbiAgICAgIGNvbnN0IHRhcmdldCA9IHRyYW5zaXRpb24/LnRhcmdldCA/PyB0aGlzLnN0YXRlLnZhbHVlO1xuICAgICAgY29uc3QgY2hhbmdlZCA9IHRoaXMuc3RhdGUudmFsdWUgIT09IHRhcmdldDtcbiAgICAgIGNvbnN0IHN0YXRlTm9kZSA9IHRoaXMuZ2V0U3RhdGVOb2RlKHRhcmdldCk7XG4gICAgICBjb25zdCByZWVudGVyID0gIWlzVGFyZ2V0bGVzcyAmJiAhY2hhbmdlZCAmJiAhdHJhbnNpdGlvbj8uaW50ZXJuYWw7XG4gICAgICBjb25zdCBpbmZvID0ge1xuICAgICAgICByZWVudGVyLFxuICAgICAgICB0cmFuc2l0aW9uLFxuICAgICAgICBzdGF0ZU5vZGUsXG4gICAgICAgIHRhcmdldCxcbiAgICAgICAgY2hhbmdlZFxuICAgICAgfTtcbiAgICAgIHRoaXMubG9nKFwiTmV4dFN0YXRlOlwiLCBgWyR7ZXZlbnQudHlwZX1dYCwgdGhpcy5zdGF0ZS52YWx1ZSwgXCItLS0tPlwiLCBpbmZvLnRhcmdldCk7XG4gICAgICByZXR1cm4gaW5mbztcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZ2V0QWZ0ZXJBY3Rpb25zXCIsICh0cmFuc2l0aW9uLCBkZWxheSkgPT4ge1xuICAgICAgbGV0IGlkO1xuICAgICAgY29uc3QgY3VycmVudCA9IHRoaXMuc3RhdGUudmFsdWU7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBlbnRyeTogKCkgPT4ge1xuICAgICAgICAgIGlkID0gZ2xvYmFsVGhpcy5zZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IG5leHQgPSB0aGlzLmdldE5leHRTdGF0ZUluZm8odHJhbnNpdGlvbiwgdGhpcy5zdGF0ZS5ldmVudCk7XG4gICAgICAgICAgICB0aGlzLnBlcmZvcm1TdGF0ZUNoYW5nZUVmZmVjdHMoY3VycmVudCwgbmV4dCwgdGhpcy5zdGF0ZS5ldmVudCk7XG4gICAgICAgICAgfSwgZGVsYXkpO1xuICAgICAgICB9LFxuICAgICAgICBleGl0OiAoKSA9PiB7XG4gICAgICAgICAgZ2xvYmFsVGhpcy5jbGVhclRpbWVvdXQoaWQpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH0pO1xuICAgIC8qKlxuICAgICAqIEFsbCBgYWZ0ZXJgIGV2ZW50cyBsZXZlcmFnZSBgc2V0VGltZW91dGAgYW5kIGBjbGVhclRpbWVvdXRgLFxuICAgICAqIHdlIGludm9rZSB0aGUgYGNsZWFyVGltZW91dGAgb24gZXhpdCBhbmQgYHNldFRpbWVvdXRgIG9uIGVudHJ5LlxuICAgICAqXG4gICAgICogVG8gYWNoaWV2ZSB0aGlzLCB3ZSBzcGxpdCB0aGUgYGFmdGVyYCBkZWZpbml0aW9uIGludG8gYGVudHJ5YCBhbmQgYGV4aXRgXG4gICAgICogIGZ1bmN0aW9ucyBhbmQgYXBwZW5kIHRoZW0gdG8gdGhlIHN0YXRlJ3MgYGVudHJ5YCBhbmQgYGV4aXRgIGFjdGlvbnNcbiAgICAgKi9cbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZ2V0RGVsYXllZEV2ZW50QWN0aW9uc1wiLCAoc3RhdGUpID0+IHtcbiAgICAgIGNvbnN0IHN0YXRlTm9kZSA9IHRoaXMuZ2V0U3RhdGVOb2RlKHN0YXRlKTtcbiAgICAgIGNvbnN0IGV2ZW50ID0gdGhpcy5zdGF0ZS5ldmVudDtcbiAgICAgIGlmICghc3RhdGVOb2RlIHx8ICFzdGF0ZU5vZGUuYWZ0ZXIpIHJldHVybjtcbiAgICAgIGNvbnN0IGVudHJpZXMgPSBbXTtcbiAgICAgIGNvbnN0IGV4aXRzID0gW107XG4gICAgICBpZiAoaXNBcnJheShzdGF0ZU5vZGUuYWZ0ZXIpKSB7XG4gICAgICAgIGNvbnN0IHRyYW5zaXRpb24gPSB0aGlzLmRldGVybWluZVRyYW5zaXRpb24oc3RhdGVOb2RlLmFmdGVyLCBldmVudCk7XG4gICAgICAgIGlmICghdHJhbnNpdGlvbikgcmV0dXJuO1xuICAgICAgICBpZiAoIWhhc1Byb3AodHJhbnNpdGlvbiwgXCJkZWxheVwiKSkge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgW0B6YWctanMvY29yZSA+IGFmdGVyXSBEZWxheSBpcyByZXF1aXJlZCBmb3IgYWZ0ZXIgdHJhbnNpdGlvbjogJHtKU09OLnN0cmluZ2lmeSh0cmFuc2l0aW9uKX1gKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBkZXRlcm1pbmVEZWxheSA9IGRldGVybWluZURlbGF5Rm4odHJhbnNpdGlvbi5kZWxheSwgdGhpcy5kZWxheU1hcCk7XG4gICAgICAgIGNvbnN0IF9fZGVsYXkgPSBkZXRlcm1pbmVEZWxheSh0aGlzLmNvbnRleHRTbmFwc2hvdCwgZXZlbnQpO1xuICAgICAgICBjb25zdCBhY3Rpb25zID0gdGhpcy5nZXRBZnRlckFjdGlvbnModHJhbnNpdGlvbiwgX19kZWxheSk7XG4gICAgICAgIGVudHJpZXMucHVzaChhY3Rpb25zLmVudHJ5KTtcbiAgICAgICAgZXhpdHMucHVzaChhY3Rpb25zLmV4aXQpO1xuICAgICAgICByZXR1cm4geyBlbnRyaWVzLCBleGl0cyB9O1xuICAgICAgfVxuICAgICAgaWYgKGlzT2JqZWN0KHN0YXRlTm9kZS5hZnRlcikpIHtcbiAgICAgICAgZm9yIChjb25zdCBkZWxheSBpbiBzdGF0ZU5vZGUuYWZ0ZXIpIHtcbiAgICAgICAgICBjb25zdCB0cmFuc2l0aW9uID0gc3RhdGVOb2RlLmFmdGVyW2RlbGF5XTtcbiAgICAgICAgICBjb25zdCBkZXRlcm1pbmVEZWxheSA9IGRldGVybWluZURlbGF5Rm4oZGVsYXksIHRoaXMuZGVsYXlNYXApO1xuICAgICAgICAgIGNvbnN0IF9fZGVsYXkgPSBkZXRlcm1pbmVEZWxheSh0aGlzLmNvbnRleHRTbmFwc2hvdCwgZXZlbnQpO1xuICAgICAgICAgIGNvbnN0IGFjdGlvbnMgPSB0aGlzLmdldEFmdGVyQWN0aW9ucyh0cmFuc2l0aW9uLCBfX2RlbGF5KTtcbiAgICAgICAgICBlbnRyaWVzLnB1c2goYWN0aW9ucy5lbnRyeSk7XG4gICAgICAgICAgZXhpdHMucHVzaChhY3Rpb25zLmV4aXQpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4geyBlbnRyaWVzLCBleGl0cyB9O1xuICAgIH0pO1xuICAgIC8qKlxuICAgICAqIEZ1bmN0aW9uIHRvIGV4ZWN1dGVzIGRlZmluZWQgYWN0aW9ucy4gSXQgY2FuIGFjY2VwdCBhY3Rpb25zIGFzIHN0cmluZ1xuICAgICAqIChyZWZlcmVuY2luZyBgb3B0aW9ucy5hY3Rpb25zYCkgb3IgYWN0dWFsIGZ1bmN0aW9ucy5cbiAgICAgKi9cbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiZXhlY3V0ZUFjdGlvbnNcIiwgKGFjdGlvbnMsIGV2ZW50KSA9PiB7XG4gICAgICBjb25zdCBwaWNrZWRBY3Rpb25zID0gZGV0ZXJtaW5lQWN0aW9uc0ZuKGFjdGlvbnMsIHRoaXMuZ3VhcmRNYXApKHRoaXMuY29udGV4dFNuYXBzaG90LCBldmVudCwgdGhpcy5ndWFyZE1ldGEpO1xuICAgICAgZm9yIChjb25zdCBhY3Rpb24gb2YgdG9BcnJheShwaWNrZWRBY3Rpb25zKSkge1xuICAgICAgICBjb25zdCBmbiA9IGlzU3RyaW5nKGFjdGlvbikgPyB0aGlzLmFjdGlvbk1hcD8uW2FjdGlvbl0gOiBhY3Rpb247XG4gICAgICAgIHdhcm4oXG4gICAgICAgICAgaXNTdHJpbmcoYWN0aW9uKSAmJiAhZm4sXG4gICAgICAgICAgYFtAemFnLWpzL2NvcmUgPiBleGVjdXRlLWFjdGlvbnNdIE5vIGltcGxlbWVudGF0aW9uIGZvdW5kIGZvciBhY3Rpb246IFxcYCR7YWN0aW9ufVxcYGBcbiAgICAgICAgKTtcbiAgICAgICAgZm4/Lih0aGlzLnN0YXRlLmNvbnRleHQsIGV2ZW50LCB0aGlzLm1ldGEpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIC8qKlxuICAgICAqIEZ1bmN0aW9uIHRvIGV4ZWN1dGUgcnVubmluZyBhY3Rpdml0aWVzIGFuZCByZWdpc3RlcnNcbiAgICAgKiB0aGVpciBjbGVhbnVwIGZ1bmN0aW9uIGludGVybmFsbHkgKHRvIGJlIGNhbGxlZCBsYXRlciBvbiB3aGVuIHdlIGV4aXQgdGhlIHN0YXRlKVxuICAgICAqL1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJleGVjdXRlQWN0aXZpdGllc1wiLCAoZXZlbnQsIGFjdGl2aXRpZXMsIHN0YXRlKSA9PiB7XG4gICAgICBmb3IgKGNvbnN0IGFjdGl2aXR5IG9mIGFjdGl2aXRpZXMpIHtcbiAgICAgICAgY29uc3QgZm4gPSBpc1N0cmluZyhhY3Rpdml0eSkgPyB0aGlzLmFjdGl2aXR5TWFwPy5bYWN0aXZpdHldIDogYWN0aXZpdHk7XG4gICAgICAgIGlmICghZm4pIHtcbiAgICAgICAgICB3YXJuKGBbQHphZy1qcy9jb3JlID4gZXhlY3V0ZS1hY3Rpdml0eV0gTm8gaW1wbGVtZW50YXRpb24gZm91bmQgZm9yIGFjdGl2aXR5OiBcXGAke2FjdGl2aXR5fVxcYGApO1xuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNsZWFudXAgPSBmbih0aGlzLnN0YXRlLmNvbnRleHQsIGV2ZW50LCB0aGlzLm1ldGEpO1xuICAgICAgICBpZiAoY2xlYW51cCkge1xuICAgICAgICAgIGNvbnN0IGtleSA9IGlzU3RyaW5nKGFjdGl2aXR5KSA/IGFjdGl2aXR5IDogYWN0aXZpdHkubmFtZSB8fCB1dWlkKCk7XG4gICAgICAgICAgdGhpcy5hZGRBY3Rpdml0eUNsZWFudXAoc3RhdGUgPz8gdGhpcy5zdGF0ZS52YWx1ZSwga2V5LCBjbGVhbnVwKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICAgIC8qKlxuICAgICAqIE5vcm1hbGl6ZXMgdGhlIGBldmVyeWAgZGVmaW5pdGlvbiB0byB0cmFuc2l0aW9uLiBgZXZlcnlgIGNhbiBiZTpcbiAgICAgKiAtIEFuIGFycmF5IG9mIHBvc3NpYmxlIGFjdGlvbnMgdG8gcnVuICh3ZSBuZWVkIHRvIHBpY2sgdGhlIGZpcnN0IG1hdGNoIGJhc2VkIG9uIGd1YXJkKVxuICAgICAqIC0gQW4gb2JqZWN0IG9mIGludGVydmFscyBhbmQgYWN0aW9uc1xuICAgICAqL1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJjcmVhdGVFdmVyeUFjdGl2aXRpZXNcIiwgKGV2ZXJ5LCBjYWxsYmFja2ZuKSA9PiB7XG4gICAgICBpZiAoIWV2ZXJ5KSByZXR1cm47XG4gICAgICBpZiAoaXNBcnJheShldmVyeSkpIHtcbiAgICAgICAgY29uc3QgcGlja2VkID0gdG9BcnJheShldmVyeSkuZmluZCgodHJhbnNpdGlvbikgPT4ge1xuICAgICAgICAgIGNvbnN0IGRlbGF5T3JGbiA9IHRyYW5zaXRpb24uZGVsYXk7XG4gICAgICAgICAgY29uc3QgZGV0ZXJtaW5lRGVsYXkyID0gZGV0ZXJtaW5lRGVsYXlGbihkZWxheU9yRm4sIHRoaXMuZGVsYXlNYXApO1xuICAgICAgICAgIGNvbnN0IGRlbGF5MiA9IGRldGVybWluZURlbGF5Mih0aGlzLmNvbnRleHRTbmFwc2hvdCwgdGhpcy5zdGF0ZS5ldmVudCk7XG4gICAgICAgICAgY29uc3QgZGV0ZXJtaW5lR3VhcmQgPSBkZXRlcm1pbmVHdWFyZEZuKHRyYW5zaXRpb24uZ3VhcmQsIHRoaXMuZ3VhcmRNYXApO1xuICAgICAgICAgIGNvbnN0IGd1YXJkID0gZGV0ZXJtaW5lR3VhcmQodGhpcy5jb250ZXh0U25hcHNob3QsIHRoaXMuc3RhdGUuZXZlbnQsIHRoaXMuZ3VhcmRNZXRhKTtcbiAgICAgICAgICByZXR1cm4gZ3VhcmQgPz8gZGVsYXkyICE9IG51bGw7XG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoIXBpY2tlZCkgcmV0dXJuO1xuICAgICAgICBjb25zdCBkZXRlcm1pbmVEZWxheSA9IGRldGVybWluZURlbGF5Rm4ocGlja2VkLmRlbGF5LCB0aGlzLmRlbGF5TWFwKTtcbiAgICAgICAgY29uc3QgZGVsYXkgPSBkZXRlcm1pbmVEZWxheSh0aGlzLmNvbnRleHRTbmFwc2hvdCwgdGhpcy5zdGF0ZS5ldmVudCk7XG4gICAgICAgIGNvbnN0IGFjdGl2aXR5ID0gKCkgPT4ge1xuICAgICAgICAgIGNvbnN0IGlkID0gZ2xvYmFsVGhpcy5zZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmV4ZWN1dGVBY3Rpb25zKHBpY2tlZC5hY3Rpb25zLCB0aGlzLnN0YXRlLmV2ZW50KTtcbiAgICAgICAgICB9LCBkZWxheSk7XG4gICAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIGdsb2JhbFRoaXMuY2xlYXJJbnRlcnZhbChpZCk7XG4gICAgICAgICAgfTtcbiAgICAgICAgfTtcbiAgICAgICAgY2FsbGJhY2tmbihhY3Rpdml0eSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBmb3IgKGNvbnN0IGludGVydmFsIGluIGV2ZXJ5KSB7XG4gICAgICAgICAgY29uc3QgYWN0aW9ucyA9IGV2ZXJ5Py5baW50ZXJ2YWxdO1xuICAgICAgICAgIGNvbnN0IGRldGVybWluZURlbGF5ID0gZGV0ZXJtaW5lRGVsYXlGbihpbnRlcnZhbCwgdGhpcy5kZWxheU1hcCk7XG4gICAgICAgICAgY29uc3QgZGVsYXkgPSBkZXRlcm1pbmVEZWxheSh0aGlzLmNvbnRleHRTbmFwc2hvdCwgdGhpcy5zdGF0ZS5ldmVudCk7XG4gICAgICAgICAgY29uc3QgYWN0aXZpdHkgPSAoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBpZCA9IGdsb2JhbFRoaXMuc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgICAgICAgICB0aGlzLmV4ZWN1dGVBY3Rpb25zKGFjdGlvbnMsIHRoaXMuc3RhdGUuZXZlbnQpO1xuICAgICAgICAgICAgfSwgZGVsYXkpO1xuICAgICAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgICAgZ2xvYmFsVGhpcy5jbGVhckludGVydmFsKGlkKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgfTtcbiAgICAgICAgICBjYWxsYmFja2ZuKGFjdGl2aXR5KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJzZXRFdmVudFwiLCAoZXZlbnQpID0+IHtcbiAgICAgIHRoaXMuc3RhdGUucHJldmlvdXNFdmVudCA9IHRoaXMuc3RhdGUuZXZlbnQ7XG4gICAgICB0aGlzLnN0YXRlLmV2ZW50ID0gcmVmKHRvRXZlbnQoZXZlbnQpKTtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwicGVyZm9ybUV4aXRFZmZlY3RzXCIsIChjdXJyZW50LCBldmVudCkgPT4ge1xuICAgICAgY29uc3QgY3VycmVudFN0YXRlID0gdGhpcy5zdGF0ZS52YWx1ZTtcbiAgICAgIGlmIChjdXJyZW50U3RhdGUgPT09IFwiXCIpIHJldHVybjtcbiAgICAgIGNvbnN0IHN0YXRlTm9kZSA9IGN1cnJlbnQgPyB0aGlzLmdldFN0YXRlTm9kZShjdXJyZW50KSA6IHZvaWQgMDtcbiAgICAgIHRoaXMuc3RvcEFjdGl2aXRpZXMoY3VycmVudFN0YXRlKTtcbiAgICAgIGNvbnN0IF9leGl0ID0gZGV0ZXJtaW5lQWN0aW9uc0ZuKHN0YXRlTm9kZT8uZXhpdCwgdGhpcy5ndWFyZE1hcCkodGhpcy5jb250ZXh0U25hcHNob3QsIGV2ZW50LCB0aGlzLmd1YXJkTWV0YSk7XG4gICAgICBjb25zdCBleGl0QWN0aW9ucyA9IHRvQXJyYXkoX2V4aXQpO1xuICAgICAgY29uc3QgYWZ0ZXJFeGl0QWN0aW9ucyA9IHRoaXMuZGVsYXllZEV2ZW50cy5nZXQoY3VycmVudFN0YXRlKTtcbiAgICAgIGlmIChhZnRlckV4aXRBY3Rpb25zKSB7XG4gICAgICAgIGV4aXRBY3Rpb25zLnB1c2goLi4uYWZ0ZXJFeGl0QWN0aW9ucyk7XG4gICAgICB9XG4gICAgICB0aGlzLmV4ZWN1dGVBY3Rpb25zKGV4aXRBY3Rpb25zLCBldmVudCk7XG4gICAgICB0aGlzLmRlbGF5ZWRFdmVudHMuZGVsZXRlKGN1cnJlbnRTdGF0ZSk7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInBlcmZvcm1FbnRyeUVmZmVjdHNcIiwgKG5leHQsIGV2ZW50KSA9PiB7XG4gICAgICBjb25zdCBzdGF0ZU5vZGUgPSB0aGlzLmdldFN0YXRlTm9kZShuZXh0KTtcbiAgICAgIGNvbnN0IGFjdGl2aXRpZXMgPSB0b0FycmF5KHN0YXRlTm9kZT8uYWN0aXZpdGllcyk7XG4gICAgICB0aGlzLmNyZWF0ZUV2ZXJ5QWN0aXZpdGllcyhzdGF0ZU5vZGU/LmV2ZXJ5LCAoYWN0aXZpdHkpID0+IHtcbiAgICAgICAgYWN0aXZpdGllcy51bnNoaWZ0KGFjdGl2aXR5KTtcbiAgICAgIH0pO1xuICAgICAgaWYgKGFjdGl2aXRpZXMubGVuZ3RoID4gMCkge1xuICAgICAgICB0aGlzLmV4ZWN1dGVBY3Rpdml0aWVzKGV2ZW50LCBhY3Rpdml0aWVzKTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IHBpY2tlZEFjdGlvbnMgPSBkZXRlcm1pbmVBY3Rpb25zRm4oc3RhdGVOb2RlPy5lbnRyeSwgdGhpcy5ndWFyZE1hcCkoXG4gICAgICAgIHRoaXMuY29udGV4dFNuYXBzaG90LFxuICAgICAgICBldmVudCxcbiAgICAgICAgdGhpcy5ndWFyZE1ldGFcbiAgICAgICk7XG4gICAgICBjb25zdCBlbnRyeUFjdGlvbnMgPSB0b0FycmF5KHBpY2tlZEFjdGlvbnMpO1xuICAgICAgY29uc3QgYWZ0ZXJBY3Rpb25zID0gdGhpcy5nZXREZWxheWVkRXZlbnRBY3Rpb25zKG5leHQpO1xuICAgICAgaWYgKHN0YXRlTm9kZT8uYWZ0ZXIgJiYgYWZ0ZXJBY3Rpb25zKSB7XG4gICAgICAgIHRoaXMuZGVsYXllZEV2ZW50cy5zZXQobmV4dCwgYWZ0ZXJBY3Rpb25zPy5leGl0cyk7XG4gICAgICAgIGVudHJ5QWN0aW9ucy5wdXNoKC4uLmFmdGVyQWN0aW9ucy5lbnRyaWVzKTtcbiAgICAgIH1cbiAgICAgIHRoaXMuZXhlY3V0ZUFjdGlvbnMoZW50cnlBY3Rpb25zLCBldmVudCk7XG4gICAgICBpZiAoc3RhdGVOb2RlPy50eXBlID09PSBcImZpbmFsXCIpIHtcbiAgICAgICAgdGhpcy5zdGF0ZS5kb25lID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5kb25lTGlzdGVuZXJzLmZvckVhY2goKGxpc3RlbmVyKSA9PiB7XG4gICAgICAgICAgbGlzdGVuZXIodGhpcy5zdGF0ZVNuYXBzaG90KTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuc3RvcCgpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJwZXJmb3JtVHJhbnNpdGlvbkVmZmVjdHNcIiwgKHRyYW5zaXRpb25zLCBldmVudCkgPT4ge1xuICAgICAgY29uc3QgdHJhbnNpdGlvbiA9IHRoaXMuZGV0ZXJtaW5lVHJhbnNpdGlvbih0cmFuc2l0aW9ucywgZXZlbnQpO1xuICAgICAgdGhpcy5leGVjdXRlQWN0aW9ucyh0cmFuc2l0aW9uPy5hY3Rpb25zLCBldmVudCk7XG4gICAgfSk7XG4gICAgLyoqXG4gICAgICogUGVyZm9ybXMgYWxsIHRoZSByZXF1aXJlcyBzaWRlLWVmZmVjdHMgb3IgcmVhY3Rpb25zIHdoZW5cbiAgICAgKiB3ZSBtb3ZlIGZyb20gc3RhdGUgQSA9PiBzdGF0ZSBCLlxuICAgICAqXG4gICAgICogVGhlIEVmZmVjdCBvcmRlcjpcbiAgICAgKiBFeGl0IGFjdGlvbnMgKGN1cnJlbnQgc3RhdGUpID0+IFRyYW5zaXRpb24gYWN0aW9ucyAgPT4gR28gdG8gc3RhdGUgPT4gRW50cnkgYWN0aW9ucyAobmV4dCBzdGF0ZSlcbiAgICAgKi9cbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwicGVyZm9ybVN0YXRlQ2hhbmdlRWZmZWN0c1wiLCAoY3VycmVudCwgbmV4dCwgZXZlbnQpID0+IHtcbiAgICAgIHRoaXMuc2V0RXZlbnQoZXZlbnQpO1xuICAgICAgY29uc3QgY2hhbmdlZCA9IG5leHQuY2hhbmdlZCB8fCBuZXh0LnJlZW50ZXI7XG4gICAgICBpZiAoY2hhbmdlZCkge1xuICAgICAgICB0aGlzLnBlcmZvcm1FeGl0RWZmZWN0cyhjdXJyZW50LCBldmVudCk7XG4gICAgICB9XG4gICAgICB0aGlzLnBlcmZvcm1UcmFuc2l0aW9uRWZmZWN0cyhuZXh0LnRyYW5zaXRpb24sIGV2ZW50KTtcbiAgICAgIHRoaXMuc2V0U3RhdGUobmV4dC50YXJnZXQpO1xuICAgICAgaWYgKGNoYW5nZWQpIHtcbiAgICAgICAgdGhpcy5wZXJmb3JtRW50cnlFZmZlY3RzKG5leHQudGFyZ2V0LCBldmVudCk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImRldGVybWluZVRyYW5zaXRpb25cIiwgKHRyYW5zaXRpb24sIGV2ZW50KSA9PiB7XG4gICAgICBjb25zdCBmbiA9IGRldGVybWluZVRyYW5zaXRpb25Gbih0cmFuc2l0aW9uLCB0aGlzLmd1YXJkTWFwKTtcbiAgICAgIHJldHVybiBmbj8uKHRoaXMuY29udGV4dFNuYXBzaG90LCBldmVudCwgdGhpcy5ndWFyZE1ldGEpO1xuICAgIH0pO1xuICAgIC8qKlxuICAgICAqIEZ1bmN0aW9uIHRvIHNlbmQgZXZlbnQgdG8gcGFyZW50IG1hY2hpbmUgZnJvbSBzcGF3bmVkIGNoaWxkXG4gICAgICovXG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInNlbmRQYXJlbnRcIiwgKGV2dCkgPT4ge1xuICAgICAgaWYgKCF0aGlzLnBhcmVudCkge1xuICAgICAgICBpbnZhcmlhbnQoXCJbQHphZy1qcy9jb3JlID4gc2VuZC1wYXJlbnRdIENhbm5vdCBzZW5kIGV2ZW50IHRvIGFuIHVua25vd24gcGFyZW50XCIpO1xuICAgICAgfVxuICAgICAgY29uc3QgZXZlbnQgPSB0b0V2ZW50KGV2dCk7XG4gICAgICB0aGlzLnBhcmVudD8uc2VuZChldmVudCk7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImxvZ1wiLCAoLi4uYXJncykgPT4ge1xuICAgICAgaWYgKGlzRGV2KCkgJiYgdGhpcy5vcHRpb25zLmRlYnVnKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKC4uLmFyZ3MpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIC8qKlxuICAgICAqIEZ1bmN0aW9uIHRvIHNlbmQgYW4gZXZlbnQgdG8gY3VycmVudCBtYWNoaW5lXG4gICAgICovXG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInNlbmRcIiwgKGV2dCkgPT4ge1xuICAgICAgY29uc3QgZXZlbnQgPSB0b0V2ZW50KGV2dCk7XG4gICAgICB0aGlzLnRyYW5zaXRpb24odGhpcy5zdGF0ZS52YWx1ZSwgZXZlbnQpO1xuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJ0cmFuc2l0aW9uXCIsIChzdGF0ZSwgZXZ0KSA9PiB7XG4gICAgICBjb25zdCBzdGF0ZU5vZGUgPSBpc1N0cmluZyhzdGF0ZSkgPyB0aGlzLmdldFN0YXRlTm9kZShzdGF0ZSkgOiBzdGF0ZT8uc3RhdGVOb2RlO1xuICAgICAgY29uc3QgZXZlbnQgPSB0b0V2ZW50KGV2dCk7XG4gICAgICBpZiAoIXN0YXRlTm9kZSAmJiAhdGhpcy5jb25maWcub24pIHtcbiAgICAgICAgY29uc3QgbXNnID0gdGhpcy5zdGF0dXMgPT09IFwiU3RvcHBlZFwiIC8qIFN0b3BwZWQgKi8gPyBcIltAemFnLWpzL2NvcmUgPiB0cmFuc2l0aW9uXSBDYW5ub3QgdHJhbnNpdGlvbiBhIHN0b3BwZWQgbWFjaGluZVwiIDogYFtAemFnLWpzL2NvcmUgPiB0cmFuc2l0aW9uXSBTdGF0ZSBkb2VzIG5vdCBoYXZlIGEgZGVmaW5pdGlvbiBmb3IgXFxgc3RhdGVcXGA6ICR7c3RhdGV9LCBcXGBldmVudFxcYDogJHtldmVudC50eXBlfWA7XG4gICAgICAgIHdhcm4obXNnKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgY29uc3QgdHJhbnNpdGlvbnMgPSAoXG4gICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgLSBGaXggdGhpc1xuICAgICAgICBzdGF0ZU5vZGU/Lm9uPy5bZXZlbnQudHlwZV0gPz8gdGhpcy5jb25maWcub24/LltldmVudC50eXBlXVxuICAgICAgKTtcbiAgICAgIGNvbnN0IG5leHQgPSB0aGlzLmdldE5leHRTdGF0ZUluZm8odHJhbnNpdGlvbnMsIGV2ZW50KTtcbiAgICAgIHRoaXMucGVyZm9ybVN0YXRlQ2hhbmdlRWZmZWN0cyh0aGlzLnN0YXRlLnZhbHVlLCBuZXh0LCBldmVudCk7XG4gICAgICByZXR1cm4gbmV4dC5zdGF0ZU5vZGU7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInN1YnNjcmliZVwiLCAobGlzdGVuZXIpID0+IHtcbiAgICAgIHRoaXMuc3RhdGVMaXN0ZW5lcnMuYWRkKGxpc3RlbmVyKTtcbiAgICAgIGlmICh0aGlzLnN0YXR1cyA9PT0gXCJSdW5uaW5nXCIgLyogUnVubmluZyAqLykge1xuICAgICAgICBsaXN0ZW5lcih0aGlzLnN0YXRlU25hcHNob3QpO1xuICAgICAgfVxuICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgdGhpcy5zdGF0ZUxpc3RlbmVycy5kZWxldGUobGlzdGVuZXIpO1xuICAgICAgfTtcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwib25Eb25lXCIsIChsaXN0ZW5lcikgPT4ge1xuICAgICAgdGhpcy5kb25lTGlzdGVuZXJzLmFkZChsaXN0ZW5lcik7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9KTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwib25UcmFuc2l0aW9uXCIsIChsaXN0ZW5lcikgPT4ge1xuICAgICAgdGhpcy5zdGF0ZUxpc3RlbmVycy5hZGQobGlzdGVuZXIpO1xuICAgICAgaWYgKHRoaXMuc3RhdHVzID09PSBcIlJ1bm5pbmdcIiAvKiBSdW5uaW5nICovKSB7XG4gICAgICAgIGxpc3RlbmVyKHRoaXMuc3RhdGVTbmFwc2hvdCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9KTtcbiAgICB0aGlzLmNvbmZpZyA9IGNsb25lKGNvbmZpZyk7XG4gICAgdGhpcy5vcHRpb25zID0gY2xvbmUob3B0aW9ucyA/PyB7fSk7XG4gICAgdGhpcy5pZCA9IHRoaXMuY29uZmlnLmlkID8/IGBtYWNoaW5lLSR7dXVpZCgpfWA7XG4gICAgdGhpcy5ndWFyZE1hcCA9IHRoaXMub3B0aW9ucz8uZ3VhcmRzID8/IHt9O1xuICAgIHRoaXMuYWN0aW9uTWFwID0gdGhpcy5vcHRpb25zPy5hY3Rpb25zID8/IHt9O1xuICAgIHRoaXMuZGVsYXlNYXAgPSB0aGlzLm9wdGlvbnM/LmRlbGF5cyA/PyB7fTtcbiAgICB0aGlzLmFjdGl2aXR5TWFwID0gdGhpcy5vcHRpb25zPy5hY3Rpdml0aWVzID8/IHt9O1xuICAgIHRoaXMuc3luYyA9IHRoaXMub3B0aW9ucz8uc3luYyA/PyBmYWxzZTtcbiAgICB0aGlzLnN0YXRlID0gY3JlYXRlUHJveHkodGhpcy5jb25maWcpO1xuICAgIHRoaXMuaW5pdGlhbENvbnRleHQgPSBzbmFwc2hvdCh0aGlzLnN0YXRlLmNvbnRleHQpO1xuICB9XG4gIC8vIGltbXV0YWJsZSBzdGF0ZSB2YWx1ZVxuICBnZXQgc3RhdGVTbmFwc2hvdCgpIHtcbiAgICByZXR1cm4gY2FzdChzbmFwc2hvdCh0aGlzLnN0YXRlKSk7XG4gIH1cbiAgZ2V0U3RhdGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuc3RhdGVTbmFwc2hvdDtcbiAgfVxuICAvLyBpbW11dGFibGUgY29udGV4dCB2YWx1ZVxuICBnZXQgY29udGV4dFNuYXBzaG90KCkge1xuICAgIHJldHVybiB0aGlzLnN0YXRlU25hcHNob3QuY29udGV4dDtcbiAgfVxuICAvKipcbiAgICogQSByZWZlcmVuY2UgdG8gdGhlIGluc3RhbmNlIG1ldGhvZHMgb2YgdGhlIG1hY2hpbmUuXG4gICAqIFVzZWZ1bCB3aGVuIHNwYXduaW5nIGNoaWxkIG1hY2hpbmVzIGFuZCBtYW5hZ2luZyB0aGUgY29tbXVuaWNhdGlvbiBiZXR3ZWVuIHRoZW0uXG4gICAqL1xuICBnZXQgc2VsZigpIHtcbiAgICBjb25zdCBzZWxmID0gdGhpcztcbiAgICByZXR1cm4ge1xuICAgICAgaWQ6IHRoaXMuaWQsXG4gICAgICBzZW5kOiB0aGlzLnNlbmQuYmluZCh0aGlzKSxcbiAgICAgIHNlbmRQYXJlbnQ6IHRoaXMuc2VuZFBhcmVudC5iaW5kKHRoaXMpLFxuICAgICAgc2VuZENoaWxkOiB0aGlzLnNlbmRDaGlsZC5iaW5kKHRoaXMpLFxuICAgICAgc3RvcDogdGhpcy5zdG9wLmJpbmQodGhpcyksXG4gICAgICBzdG9wQ2hpbGQ6IHRoaXMuc3RvcENoaWxkLmJpbmQodGhpcyksXG4gICAgICBzcGF3bjogdGhpcy5zcGF3bi5iaW5kKHRoaXMpLFxuICAgICAgc3RvcEFjdGl2aXR5OiB0aGlzLnN0b3BBY3Rpdml0eS5iaW5kKHRoaXMpLFxuICAgICAgZ2V0IHN0YXRlKCkge1xuICAgICAgICByZXR1cm4gc2VsZi5zdGF0ZVNuYXBzaG90O1xuICAgICAgfSxcbiAgICAgIGdldCBpbml0aWFsQ29udGV4dCgpIHtcbiAgICAgICAgcmV0dXJuIHNlbGYuaW5pdGlhbENvbnRleHQ7XG4gICAgICB9LFxuICAgICAgZ2V0IGluaXRpYWxTdGF0ZSgpIHtcbiAgICAgICAgcmV0dXJuIHNlbGYuaW5pdGlhbFN0YXRlPy50YXJnZXQgPz8gXCJcIjtcbiAgICAgIH1cbiAgICB9O1xuICB9XG4gIGdldCBtZXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBzdGF0ZTogdGhpcy5zdGF0ZVNuYXBzaG90LFxuICAgICAgZ3VhcmRzOiB0aGlzLmd1YXJkTWFwLFxuICAgICAgc2VuZDogdGhpcy5zZW5kLmJpbmQodGhpcyksXG4gICAgICBzZWxmOiB0aGlzLnNlbGYsXG4gICAgICBpbml0aWFsQ29udGV4dDogdGhpcy5pbml0aWFsQ29udGV4dCxcbiAgICAgIGluaXRpYWxTdGF0ZTogdGhpcy5pbml0aWFsU3RhdGU/LnRhcmdldCA/PyBcIlwiLFxuICAgICAgZ2V0U3RhdGU6ICgpID0+IHRoaXMuc3RhdGVTbmFwc2hvdCxcbiAgICAgIGdldEFjdGlvbjogKGtleSkgPT4gdGhpcy5hY3Rpb25NYXBba2V5XSxcbiAgICAgIGdldEd1YXJkOiAoa2V5KSA9PiB0aGlzLmd1YXJkTWFwW2tleV1cbiAgICB9O1xuICB9XG4gIGdldCBndWFyZE1ldGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHN0YXRlOiB0aGlzLnN0YXRlU25hcHNob3RcbiAgICB9O1xuICB9XG4gIGdldCBbU3ltYm9sLnRvU3RyaW5nVGFnXSgpIHtcbiAgICByZXR1cm4gXCJNYWNoaW5lXCI7XG4gIH1cbiAgZ2V0SHlkcmF0aW9uU3RhdGUoKSB7XG4gICAgY29uc3Qgc3RhdGUgPSB0aGlzLmdldFN0YXRlKCk7XG4gICAgcmV0dXJuIHtcbiAgICAgIHZhbHVlOiBzdGF0ZS52YWx1ZSxcbiAgICAgIHRhZ3M6IHN0YXRlLnRhZ3NcbiAgICB9O1xuICB9XG59O1xudmFyIGNyZWF0ZU1hY2hpbmUgPSAoY29uZmlnLCBvcHRpb25zKSA9PiBuZXcgTWFjaGluZShjb25maWcsIG9wdGlvbnMpO1xudmFyIGlzTWFjaGluZSA9ICh2YWx1ZSkgPT4ge1xuICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBNYWNoaW5lIHx8IHZhbHVlPy50eXBlID09PSBcIm1hY2hpbmVcIiAvKiBNYWNoaW5lICovO1xufTtcbnZhciBjbHN4ID0gKC4uLmFyZ3MpID0+IGFyZ3MubWFwKChzdHIpID0+IHN0cj8udHJpbT8uKCkpLmZpbHRlcihCb29sZWFuKS5qb2luKFwiIFwiKTtcbnZhciBDU1NfUkVHRVggPSAvKCg/Oi0tKT8oPzpcXHcrLT8pKylcXHMqOlxccyooW147XSopL2c7XG52YXIgc2VyaWFsaXplID0gKHN0eWxlKSA9PiB7XG4gIGNvbnN0IHJlcyA9IHt9O1xuICBsZXQgbWF0Y2g7XG4gIHdoaWxlIChtYXRjaCA9IENTU19SRUdFWC5leGVjKHN0eWxlKSkge1xuICAgIHJlc1ttYXRjaFsxXV0gPSBtYXRjaFsyXTtcbiAgfVxuICByZXR1cm4gcmVzO1xufTtcbnZhciBjc3MgPSAoYSwgYikgPT4ge1xuICBpZiAoaXNTdHJpbmcoYSkpIHtcbiAgICBpZiAoaXNTdHJpbmcoYikpIHJldHVybiBgJHthfTske2J9YDtcbiAgICBhID0gc2VyaWFsaXplKGEpO1xuICB9IGVsc2UgaWYgKGlzU3RyaW5nKGIpKSB7XG4gICAgYiA9IHNlcmlhbGl6ZShiKTtcbiAgfVxuICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgYSA/PyB7fSwgYiA/PyB7fSk7XG59O1xuZnVuY3Rpb24gbWVyZ2VQcm9wcyguLi5hcmdzKSB7XG4gIGxldCByZXN1bHQgPSB7fTtcbiAgZm9yIChsZXQgcHJvcHMgb2YgYXJncykge1xuICAgIGZvciAobGV0IGtleSBpbiByZXN1bHQpIHtcbiAgICAgIGlmIChrZXkuc3RhcnRzV2l0aChcIm9uXCIpICYmIHR5cGVvZiByZXN1bHRba2V5XSA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBwcm9wc1trZXldID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgcmVzdWx0W2tleV0gPSBjYWxsQWxsKHByb3BzW2tleV0sIHJlc3VsdFtrZXldKTtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAoa2V5ID09PSBcImNsYXNzTmFtZVwiIHx8IGtleSA9PT0gXCJjbGFzc1wiKSB7XG4gICAgICAgIHJlc3VsdFtrZXldID0gY2xzeChyZXN1bHRba2V5XSwgcHJvcHNba2V5XSk7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKGtleSA9PT0gXCJzdHlsZVwiKSB7XG4gICAgICAgIHJlc3VsdFtrZXldID0gY3NzKHJlc3VsdFtrZXldLCBwcm9wc1trZXldKTtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICByZXN1bHRba2V5XSA9IHByb3BzW2tleV0gIT09IHZvaWQgMCA/IHByb3BzW2tleV0gOiByZXN1bHRba2V5XTtcbiAgICB9XG4gICAgZm9yIChsZXQga2V5IGluIHByb3BzKSB7XG4gICAgICBpZiAocmVzdWx0W2tleV0gPT09IHZvaWQgMCkge1xuICAgICAgICByZXN1bHRba2V5XSA9IHByb3BzW2tleV07XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCB7IE1hY2hpbmUsIGNob29zZSwgY3JlYXRlTWFjaGluZSwgZGVlcE1lcmdlLCBndWFyZHMsIGlzTWFjaGluZSwgbWVyZ2VQcm9wcyB9O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/core/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/dialog/dist/index.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@zag-js/dialog/dist/index.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_aria_hidden__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @zag-js/aria-hidden */ \"(ssr)/./node_modules/@zag-js/aria-hidden/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_dismissable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/dismissable */ \"(ssr)/./node_modules/@zag-js/dismissable/dist/index.mjs\");\n/* harmony import */ var _zag_js_focus_trap__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/focus-trap */ \"(ssr)/./node_modules/@zag-js/focus-trap/dist/index.mjs\");\n/* harmony import */ var _zag_js_remove_scroll__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/remove-scroll */ \"(ssr)/./node_modules/@zag-js/remove-scroll/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n\n\n\n// src/dialog.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"dialog\").parts(\n  \"trigger\",\n  \"backdrop\",\n  \"positioner\",\n  \"content\",\n  \"title\",\n  \"description\",\n  \"closeTrigger\"\n);\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getPositionerId: (ctx) => ctx.ids?.positioner ?? `dialog:${ctx.id}:positioner`,\n  getBackdropId: (ctx) => ctx.ids?.backdrop ?? `dialog:${ctx.id}:backdrop`,\n  getContentId: (ctx) => ctx.ids?.content ?? `dialog:${ctx.id}:content`,\n  getTriggerId: (ctx) => ctx.ids?.trigger ?? `dialog:${ctx.id}:trigger`,\n  getTitleId: (ctx) => ctx.ids?.title ?? `dialog:${ctx.id}:title`,\n  getDescriptionId: (ctx) => ctx.ids?.description ?? `dialog:${ctx.id}:description`,\n  getCloseTriggerId: (ctx) => ctx.ids?.closeTrigger ?? `dialog:${ctx.id}:close`,\n  getContentEl: (ctx) => dom.getById(ctx, dom.getContentId(ctx)),\n  getPositionerEl: (ctx) => dom.getById(ctx, dom.getPositionerId(ctx)),\n  getBackdropEl: (ctx) => dom.getById(ctx, dom.getBackdropId(ctx)),\n  getTriggerEl: (ctx) => dom.getById(ctx, dom.getTriggerId(ctx)),\n  getTitleEl: (ctx) => dom.getById(ctx, dom.getTitleId(ctx)),\n  getDescriptionEl: (ctx) => dom.getById(ctx, dom.getDescriptionId(ctx)),\n  getCloseTriggerEl: (ctx) => dom.getById(ctx, dom.getCloseTriggerId(ctx))\n});\n\n// src/dialog.connect.ts\nfunction connect(state, send, normalize) {\n  const ariaLabel = state.context[\"aria-label\"];\n  const open = state.matches(\"open\");\n  const rendered = state.context.renderedElements;\n  return {\n    open,\n    setOpen(nextOpen) {\n      if (nextOpen === open) return;\n      send(nextOpen ? \"OPEN\" : \"CLOSE\");\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        dir: state.context.dir,\n        id: dom.getTriggerId(state.context),\n        \"aria-haspopup\": \"dialog\",\n        type: \"button\",\n        \"aria-expanded\": open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-controls\": dom.getContentId(state.context),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send(\"TOGGLE\");\n        }\n      });\n    },\n    getBackdropProps() {\n      return normalize.element({\n        ...parts.backdrop.attrs,\n        dir: state.context.dir,\n        hidden: !open,\n        id: dom.getBackdropId(state.context),\n        \"data-state\": open ? \"open\" : \"closed\"\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        ...parts.positioner.attrs,\n        dir: state.context.dir,\n        id: dom.getPositionerId(state.context),\n        style: {\n          pointerEvents: open ? void 0 : \"none\"\n        }\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: state.context.dir,\n        role: state.context.role,\n        hidden: !open,\n        id: dom.getContentId(state.context),\n        tabIndex: -1,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-modal\": true,\n        \"aria-label\": ariaLabel || void 0,\n        \"aria-labelledby\": ariaLabel || !rendered.title ? void 0 : dom.getTitleId(state.context),\n        \"aria-describedby\": rendered.description ? dom.getDescriptionId(state.context) : void 0\n      });\n    },\n    getTitleProps() {\n      return normalize.element({\n        ...parts.title.attrs,\n        dir: state.context.dir,\n        id: dom.getTitleId(state.context)\n      });\n    },\n    getDescriptionProps() {\n      return normalize.element({\n        ...parts.description.attrs,\n        dir: state.context.dir,\n        id: dom.getDescriptionId(state.context)\n      });\n    },\n    getCloseTriggerProps() {\n      return normalize.button({\n        ...parts.closeTrigger.attrs,\n        dir: state.context.dir,\n        id: dom.getCloseTriggerId(state.context),\n        type: \"button\",\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          event.stopPropagation();\n          send(\"CLOSE\");\n        }\n      });\n    }\n  };\n}\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)(\n    {\n      id: \"dialog\",\n      initial: ctx.open ? \"open\" : \"closed\",\n      context: {\n        role: \"dialog\",\n        renderedElements: {\n          title: true,\n          description: true\n        },\n        modal: true,\n        trapFocus: true,\n        preventScroll: true,\n        closeOnInteractOutside: true,\n        closeOnEscape: true,\n        restoreFocus: true,\n        ...ctx\n      },\n      created: [\"setAlertDialogProps\"],\n      watch: {\n        open: [\"toggleVisibility\"]\n      },\n      states: {\n        open: {\n          entry: [\"checkRenderedElements\", \"syncZIndex\"],\n          activities: [\"trackDismissableElement\", \"trapFocus\", \"preventScroll\", \"hideContentBelow\"],\n          on: {\n            \"CONTROLLED.CLOSE\": {\n              target: \"closed\"\n            },\n            CLOSE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                target: \"closed\",\n                actions: [\"invokeOnClose\"]\n              }\n            ],\n            TOGGLE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                target: \"closed\",\n                actions: [\"invokeOnClose\"]\n              }\n            ]\n          }\n        },\n        closed: {\n          on: {\n            \"CONTROLLED.OPEN\": {\n              target: \"open\"\n            },\n            OPEN: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\"]\n              }\n            ],\n            TOGGLE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\"]\n              }\n            ]\n          }\n        }\n      }\n    },\n    {\n      guards: {\n        isOpenControlled: (ctx2) => !!ctx2[\"open.controlled\"]\n      },\n      activities: {\n        trackDismissableElement(ctx2, _evt, { send }) {\n          const getContentEl = () => dom.getContentEl(ctx2);\n          return (0,_zag_js_dismissable__WEBPACK_IMPORTED_MODULE_4__.trackDismissableElement)(getContentEl, {\n            defer: true,\n            pointerBlocking: ctx2.modal,\n            exclude: [dom.getTriggerEl(ctx2)],\n            onInteractOutside(event) {\n              ctx2.onInteractOutside?.(event);\n              if (!ctx2.closeOnInteractOutside) {\n                event.preventDefault();\n              }\n            },\n            persistentElements: ctx2.persistentElements,\n            onFocusOutside: ctx2.onFocusOutside,\n            onPointerDownOutside: ctx2.onPointerDownOutside,\n            onEscapeKeyDown(event) {\n              ctx2.onEscapeKeyDown?.(event);\n              if (!ctx2.closeOnEscape) {\n                event.preventDefault();\n              }\n            },\n            onDismiss() {\n              send({ type: \"CLOSE\", src: \"interact-outside\" });\n            }\n          });\n        },\n        preventScroll(ctx2) {\n          if (!ctx2.preventScroll) return;\n          return (0,_zag_js_remove_scroll__WEBPACK_IMPORTED_MODULE_5__.preventBodyScroll)(dom.getDoc(ctx2));\n        },\n        trapFocus(ctx2) {\n          if (!ctx2.trapFocus || !ctx2.modal) return;\n          const contentEl = () => dom.getContentEl(ctx2);\n          return (0,_zag_js_focus_trap__WEBPACK_IMPORTED_MODULE_6__.trapFocus)(contentEl, {\n            preventScroll: true,\n            returnFocusOnDeactivate: !!ctx2.restoreFocus,\n            initialFocus: ctx2.initialFocusEl,\n            setReturnFocus: (el) => ctx2.finalFocusEl?.() ?? el\n          });\n        },\n        hideContentBelow(ctx2) {\n          if (!ctx2.modal) return;\n          const getElements = () => [dom.getContentEl(ctx2)];\n          return (0,_zag_js_aria_hidden__WEBPACK_IMPORTED_MODULE_7__.ariaHidden)(getElements, { defer: true });\n        }\n      },\n      actions: {\n        setAlertDialogProps(ctx2) {\n          if (ctx2.role !== \"alertdialog\") return;\n          ctx2.initialFocusEl || (ctx2.initialFocusEl = () => dom.getCloseTriggerEl(ctx2));\n          ctx2.closeOnInteractOutside = false;\n        },\n        checkRenderedElements(ctx2) {\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            ctx2.renderedElements.title = !!dom.getTitleEl(ctx2);\n            ctx2.renderedElements.description = !!dom.getDescriptionEl(ctx2);\n          });\n        },\n        syncZIndex(ctx2) {\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            const contentEl = dom.getContentEl(ctx2);\n            if (!contentEl) return;\n            const styles = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getComputedStyle)(contentEl);\n            const elems = [dom.getPositionerEl(ctx2), dom.getBackdropEl(ctx2)];\n            elems.forEach((node) => {\n              node?.style.setProperty(\"--z-index\", styles.zIndex);\n            });\n          });\n        },\n        invokeOnClose(ctx2) {\n          ctx2.onOpenChange?.({ open: false });\n        },\n        invokeOnOpen(ctx2) {\n          ctx2.onOpenChange?.({ open: true });\n        },\n        toggleVisibility(ctx2, evt, { send }) {\n          send({ type: ctx2.open ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\", previousEvent: evt });\n        }\n      }\n    }\n  );\n}\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_8__.createProps)()([\n  \"aria-label\",\n  \"closeOnEscape\",\n  \"closeOnInteractOutside\",\n  \"dir\",\n  \"finalFocusEl\",\n  \"getRootNode\",\n  \"getRootNode\",\n  \"id\",\n  \"id\",\n  \"ids\",\n  \"initialFocusEl\",\n  \"modal\",\n  \"onEscapeKeyDown\",\n  \"onFocusOutside\",\n  \"onInteractOutside\",\n  \"onOpenChange\",\n  \"onPointerDownOutside\",\n  \"open.controlled\",\n  \"open\",\n  \"persistentElements\",\n  \"preventScroll\",\n  \"restoreFocus\",\n  \"role\",\n  \"trapFocus\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/dialog/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/dismissable/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@zag-js/dismissable/dist/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   trackDismissableBranch: () => (/* binding */ trackDismissableBranch),\n/* harmony export */   trackDismissableElement: () => (/* binding */ trackDismissableElement)\n/* harmony export */ });\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_interact_outside__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/interact-outside */ \"(ssr)/./node_modules/@zag-js/interact-outside/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n// src/dismissable-layer.ts\nfunction trackEscapeKeydown(node, fn) {\n  const handleKeyDown = (event) => {\n    if (event.key !== \"Escape\") return;\n    if (event.isComposing) return;\n    fn?.(event);\n  };\n  return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getDocument)(node), \"keydown\", handleKeyDown, { capture: true });\n}\nvar layerStack = {\n  layers: [],\n  branches: [],\n  count() {\n    return this.layers.length;\n  },\n  pointerBlockingLayers() {\n    return this.layers.filter((layer) => layer.pointerBlocking);\n  },\n  topMostPointerBlockingLayer() {\n    return [...this.pointerBlockingLayers()].slice(-1)[0];\n  },\n  hasPointerBlockingLayer() {\n    return this.pointerBlockingLayers().length > 0;\n  },\n  isBelowPointerBlockingLayer(node) {\n    const index = this.indexOf(node);\n    const highestBlockingIndex = this.topMostPointerBlockingLayer() ? this.indexOf(this.topMostPointerBlockingLayer()?.node) : -1;\n    return index < highestBlockingIndex;\n  },\n  isTopMost(node) {\n    const layer = this.layers[this.count() - 1];\n    return layer?.node === node;\n  },\n  getNestedLayers(node) {\n    return Array.from(this.layers).slice(this.indexOf(node) + 1);\n  },\n  isInNestedLayer(node, target) {\n    return this.getNestedLayers(node).some((layer) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.contains)(layer.node, target));\n  },\n  isInBranch(target) {\n    return Array.from(this.branches).some((branch) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.contains)(branch, target));\n  },\n  add(layer) {\n    const num = this.layers.push(layer);\n    layer.node.style.setProperty(\"--layer-index\", `${num}`);\n  },\n  addBranch(node) {\n    this.branches.push(node);\n  },\n  remove(node) {\n    const index = this.indexOf(node);\n    if (index < 0) return;\n    if (index < this.count() - 1) {\n      const _layers = this.getNestedLayers(node);\n      _layers.forEach((layer) => layer.dismiss());\n    }\n    this.layers.splice(index, 1);\n    node.style.removeProperty(\"--layer-index\");\n  },\n  removeBranch(node) {\n    const index = this.branches.indexOf(node);\n    if (index >= 0) this.branches.splice(index, 1);\n  },\n  indexOf(node) {\n    return this.layers.findIndex((layer) => layer.node === node);\n  },\n  dismiss(node) {\n    this.layers[this.indexOf(node)]?.dismiss();\n  },\n  clear() {\n    this.remove(this.layers[0].node);\n  }\n};\nvar originalBodyPointerEvents;\nfunction assignPointerEventToLayers() {\n  layerStack.layers.forEach(({ node }) => {\n    node.style.pointerEvents = layerStack.isBelowPointerBlockingLayer(node) ? \"none\" : \"auto\";\n  });\n}\nfunction clearPointerEvent(node) {\n  node.style.pointerEvents = \"\";\n}\nfunction disablePointerEventsOutside(node, persistentElements) {\n  const doc = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getDocument)(node);\n  const cleanups = [];\n  if (layerStack.hasPointerBlockingLayer() && !doc.body.hasAttribute(\"data-inert\")) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    queueMicrotask(() => {\n      doc.body.style.pointerEvents = \"none\";\n      doc.body.setAttribute(\"data-inert\", \"\");\n    });\n  }\n  if (persistentElements) {\n    const persistedCleanup = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.waitForElements)(persistentElements, (el) => {\n      cleanups.push((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.setStyle)(el, { pointerEvents: \"auto\" }));\n    });\n    cleanups.push(persistedCleanup);\n  }\n  return () => {\n    if (layerStack.hasPointerBlockingLayer()) return;\n    queueMicrotask(() => {\n      doc.body.style.pointerEvents = originalBodyPointerEvents;\n      doc.body.removeAttribute(\"data-inert\");\n      if (doc.body.style.length === 0) doc.body.removeAttribute(\"style\");\n    });\n    cleanups.forEach((fn) => fn());\n  };\n}\n\n// src/dismissable-layer.ts\nfunction trackDismissableElementImpl(node, options) {\n  if (!node) {\n    (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.warn)(\"[@zag-js/dismissable] node is `null` or `undefined`\");\n    return;\n  }\n  const { onDismiss, pointerBlocking, exclude: excludeContainers, debug } = options;\n  const layer = { dismiss: onDismiss, node, pointerBlocking };\n  layerStack.add(layer);\n  assignPointerEventToLayers();\n  function onPointerDownOutside(event) {\n    const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(event.detail.originalEvent);\n    if (layerStack.isBelowPointerBlockingLayer(node) || layerStack.isInBranch(target)) return;\n    options.onPointerDownOutside?.(event);\n    options.onInteractOutside?.(event);\n    if (event.defaultPrevented) return;\n    if (debug) {\n      console.log(\"onPointerDownOutside:\", event.detail.originalEvent);\n    }\n    onDismiss?.();\n  }\n  function onFocusOutside(event) {\n    const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(event.detail.originalEvent);\n    if (layerStack.isInBranch(target)) return;\n    options.onFocusOutside?.(event);\n    options.onInteractOutside?.(event);\n    if (event.defaultPrevented) return;\n    if (debug) {\n      console.log(\"onFocusOutside:\", event.detail.originalEvent);\n    }\n    onDismiss?.();\n  }\n  function onEscapeKeyDown(event) {\n    if (!layerStack.isTopMost(node)) return;\n    options.onEscapeKeyDown?.(event);\n    if (!event.defaultPrevented && onDismiss) {\n      event.preventDefault();\n      onDismiss();\n    }\n  }\n  function exclude(target) {\n    if (!node) return false;\n    const containers = typeof excludeContainers === \"function\" ? excludeContainers() : excludeContainers;\n    const _containers = Array.isArray(containers) ? containers : [containers];\n    const persistentElements = options.persistentElements?.map((fn) => fn()).filter(_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement);\n    if (persistentElements) _containers.push(...persistentElements);\n    return _containers.some((node2) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.contains)(node2, target)) || layerStack.isInNestedLayer(node, target);\n  }\n  const cleanups = [\n    pointerBlocking ? disablePointerEventsOutside(node, options.persistentElements) : void 0,\n    trackEscapeKeydown(node, onEscapeKeyDown),\n    (0,_zag_js_interact_outside__WEBPACK_IMPORTED_MODULE_2__.trackInteractOutside)(node, { exclude, onFocusOutside, onPointerDownOutside, defer: options.defer })\n  ];\n  return () => {\n    layerStack.remove(node);\n    assignPointerEventToLayers();\n    clearPointerEvent(node);\n    cleanups.forEach((fn) => fn?.());\n  };\n}\nfunction trackDismissableElement(nodeOrFn, options) {\n  const { defer } = options;\n  const func = defer ? _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.raf : (v) => v();\n  const cleanups = [];\n  cleanups.push(\n    func(() => {\n      const node = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isFunction)(nodeOrFn) ? nodeOrFn() : nodeOrFn;\n      cleanups.push(trackDismissableElementImpl(node, options));\n    })\n  );\n  return () => {\n    func(() => {\n      cleanups.forEach((fn) => fn?.());\n    });\n  };\n}\nfunction trackDismissableBranch(nodeOrFn, options = {}) {\n  const { defer } = options;\n  const func = defer ? _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.raf : (v) => v();\n  const cleanups = [];\n  cleanups.push(\n    func(() => {\n      const node = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isFunction)(nodeOrFn) ? nodeOrFn() : nodeOrFn;\n      if (!node) {\n        (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.warn)(\"[@zag-js/dismissable] branch node is `null` or `undefined`\");\n        return;\n      }\n      layerStack.addBranch(node);\n      cleanups.push(() => {\n        layerStack.removeBranch(node);\n      });\n    })\n  );\n  return () => {\n    func(() => {\n      cleanups.forEach((fn) => fn?.());\n    });\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9kaXNtaXNzYWJsZS9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFzSTtBQUN0RTtBQUNmOztBQUVqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsOERBQVcsQ0FBQyw4REFBVyxvQ0FBb0MsZUFBZTtBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxzREFBc0QsMkRBQVE7QUFDOUQsR0FBRztBQUNIO0FBQ0Esc0RBQXNELDJEQUFRO0FBQzlELEdBQUc7QUFDSDtBQUNBO0FBQ0EscURBQXFELElBQUk7QUFDekQsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLE1BQU07QUFDckM7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsOERBQVc7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSw2QkFBNkIsa0VBQWU7QUFDNUMsb0JBQW9CLDJEQUFRLE9BQU8sdUJBQXVCO0FBQzFELEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLG1EQUFJO0FBQ1I7QUFDQTtBQUNBLFVBQVUsZ0VBQWdFO0FBQzFFLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsaUVBQWM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsaUVBQWM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0ZBQW9GLDREQUFhO0FBQ2pHO0FBQ0EsdUNBQXVDLDJEQUFRO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSw4RUFBb0IsU0FBUyxxRUFBcUU7QUFDdEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxRQUFRO0FBQ2xCLHVCQUF1QixrREFBRztBQUMxQjtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIseURBQVU7QUFDN0I7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLHNEQUFzRDtBQUN0RCxVQUFVLFFBQVE7QUFDbEIsdUJBQXVCLGtEQUFHO0FBQzFCO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQix5REFBVTtBQUM3QjtBQUNBLFFBQVEsbURBQUk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUUyRCIsInNvdXJjZXMiOlsiL1VzZXJzL3BoaWxpYWhhbW1vbmQvRGVza3RvcC9sZWFybmVyLWFwcC1zeXN0ZW0vbm9kZV9tb2R1bGVzL0B6YWctanMvZGlzbWlzc2FibGUvZGlzdC9pbmRleC5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29udGFpbnMsIHJhZiwgYWRkRG9tRXZlbnQsIGdldERvY3VtZW50LCB3YWl0Rm9yRWxlbWVudHMsIHNldFN0eWxlLCBnZXRFdmVudFRhcmdldCwgaXNIVE1MRWxlbWVudCB9IGZyb20gJ0B6YWctanMvZG9tLXF1ZXJ5JztcbmltcG9ydCB7IHRyYWNrSW50ZXJhY3RPdXRzaWRlIH0gZnJvbSAnQHphZy1qcy9pbnRlcmFjdC1vdXRzaWRlJztcbmltcG9ydCB7IGlzRnVuY3Rpb24sIHdhcm4gfSBmcm9tICdAemFnLWpzL3V0aWxzJztcblxuLy8gc3JjL2Rpc21pc3NhYmxlLWxheWVyLnRzXG5mdW5jdGlvbiB0cmFja0VzY2FwZUtleWRvd24obm9kZSwgZm4pIHtcbiAgY29uc3QgaGFuZGxlS2V5RG93biA9IChldmVudCkgPT4ge1xuICAgIGlmIChldmVudC5rZXkgIT09IFwiRXNjYXBlXCIpIHJldHVybjtcbiAgICBpZiAoZXZlbnQuaXNDb21wb3NpbmcpIHJldHVybjtcbiAgICBmbj8uKGV2ZW50KTtcbiAgfTtcbiAgcmV0dXJuIGFkZERvbUV2ZW50KGdldERvY3VtZW50KG5vZGUpLCBcImtleWRvd25cIiwgaGFuZGxlS2V5RG93biwgeyBjYXB0dXJlOiB0cnVlIH0pO1xufVxudmFyIGxheWVyU3RhY2sgPSB7XG4gIGxheWVyczogW10sXG4gIGJyYW5jaGVzOiBbXSxcbiAgY291bnQoKSB7XG4gICAgcmV0dXJuIHRoaXMubGF5ZXJzLmxlbmd0aDtcbiAgfSxcbiAgcG9pbnRlckJsb2NraW5nTGF5ZXJzKCkge1xuICAgIHJldHVybiB0aGlzLmxheWVycy5maWx0ZXIoKGxheWVyKSA9PiBsYXllci5wb2ludGVyQmxvY2tpbmcpO1xuICB9LFxuICB0b3BNb3N0UG9pbnRlckJsb2NraW5nTGF5ZXIoKSB7XG4gICAgcmV0dXJuIFsuLi50aGlzLnBvaW50ZXJCbG9ja2luZ0xheWVycygpXS5zbGljZSgtMSlbMF07XG4gIH0sXG4gIGhhc1BvaW50ZXJCbG9ja2luZ0xheWVyKCkge1xuICAgIHJldHVybiB0aGlzLnBvaW50ZXJCbG9ja2luZ0xheWVycygpLmxlbmd0aCA+IDA7XG4gIH0sXG4gIGlzQmVsb3dQb2ludGVyQmxvY2tpbmdMYXllcihub2RlKSB7XG4gICAgY29uc3QgaW5kZXggPSB0aGlzLmluZGV4T2Yobm9kZSk7XG4gICAgY29uc3QgaGlnaGVzdEJsb2NraW5nSW5kZXggPSB0aGlzLnRvcE1vc3RQb2ludGVyQmxvY2tpbmdMYXllcigpID8gdGhpcy5pbmRleE9mKHRoaXMudG9wTW9zdFBvaW50ZXJCbG9ja2luZ0xheWVyKCk/Lm5vZGUpIDogLTE7XG4gICAgcmV0dXJuIGluZGV4IDwgaGlnaGVzdEJsb2NraW5nSW5kZXg7XG4gIH0sXG4gIGlzVG9wTW9zdChub2RlKSB7XG4gICAgY29uc3QgbGF5ZXIgPSB0aGlzLmxheWVyc1t0aGlzLmNvdW50KCkgLSAxXTtcbiAgICByZXR1cm4gbGF5ZXI/Lm5vZGUgPT09IG5vZGU7XG4gIH0sXG4gIGdldE5lc3RlZExheWVycyhub2RlKSB7XG4gICAgcmV0dXJuIEFycmF5LmZyb20odGhpcy5sYXllcnMpLnNsaWNlKHRoaXMuaW5kZXhPZihub2RlKSArIDEpO1xuICB9LFxuICBpc0luTmVzdGVkTGF5ZXIobm9kZSwgdGFyZ2V0KSB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0TmVzdGVkTGF5ZXJzKG5vZGUpLnNvbWUoKGxheWVyKSA9PiBjb250YWlucyhsYXllci5ub2RlLCB0YXJnZXQpKTtcbiAgfSxcbiAgaXNJbkJyYW5jaCh0YXJnZXQpIHtcbiAgICByZXR1cm4gQXJyYXkuZnJvbSh0aGlzLmJyYW5jaGVzKS5zb21lKChicmFuY2gpID0+IGNvbnRhaW5zKGJyYW5jaCwgdGFyZ2V0KSk7XG4gIH0sXG4gIGFkZChsYXllcikge1xuICAgIGNvbnN0IG51bSA9IHRoaXMubGF5ZXJzLnB1c2gobGF5ZXIpO1xuICAgIGxheWVyLm5vZGUuc3R5bGUuc2V0UHJvcGVydHkoXCItLWxheWVyLWluZGV4XCIsIGAke251bX1gKTtcbiAgfSxcbiAgYWRkQnJhbmNoKG5vZGUpIHtcbiAgICB0aGlzLmJyYW5jaGVzLnB1c2gobm9kZSk7XG4gIH0sXG4gIHJlbW92ZShub2RlKSB7XG4gICAgY29uc3QgaW5kZXggPSB0aGlzLmluZGV4T2Yobm9kZSk7XG4gICAgaWYgKGluZGV4IDwgMCkgcmV0dXJuO1xuICAgIGlmIChpbmRleCA8IHRoaXMuY291bnQoKSAtIDEpIHtcbiAgICAgIGNvbnN0IF9sYXllcnMgPSB0aGlzLmdldE5lc3RlZExheWVycyhub2RlKTtcbiAgICAgIF9sYXllcnMuZm9yRWFjaCgobGF5ZXIpID0+IGxheWVyLmRpc21pc3MoKSk7XG4gICAgfVxuICAgIHRoaXMubGF5ZXJzLnNwbGljZShpbmRleCwgMSk7XG4gICAgbm9kZS5zdHlsZS5yZW1vdmVQcm9wZXJ0eShcIi0tbGF5ZXItaW5kZXhcIik7XG4gIH0sXG4gIHJlbW92ZUJyYW5jaChub2RlKSB7XG4gICAgY29uc3QgaW5kZXggPSB0aGlzLmJyYW5jaGVzLmluZGV4T2Yobm9kZSk7XG4gICAgaWYgKGluZGV4ID49IDApIHRoaXMuYnJhbmNoZXMuc3BsaWNlKGluZGV4LCAxKTtcbiAgfSxcbiAgaW5kZXhPZihub2RlKSB7XG4gICAgcmV0dXJuIHRoaXMubGF5ZXJzLmZpbmRJbmRleCgobGF5ZXIpID0+IGxheWVyLm5vZGUgPT09IG5vZGUpO1xuICB9LFxuICBkaXNtaXNzKG5vZGUpIHtcbiAgICB0aGlzLmxheWVyc1t0aGlzLmluZGV4T2Yobm9kZSldPy5kaXNtaXNzKCk7XG4gIH0sXG4gIGNsZWFyKCkge1xuICAgIHRoaXMucmVtb3ZlKHRoaXMubGF5ZXJzWzBdLm5vZGUpO1xuICB9XG59O1xudmFyIG9yaWdpbmFsQm9keVBvaW50ZXJFdmVudHM7XG5mdW5jdGlvbiBhc3NpZ25Qb2ludGVyRXZlbnRUb0xheWVycygpIHtcbiAgbGF5ZXJTdGFjay5sYXllcnMuZm9yRWFjaCgoeyBub2RlIH0pID0+IHtcbiAgICBub2RlLnN0eWxlLnBvaW50ZXJFdmVudHMgPSBsYXllclN0YWNrLmlzQmVsb3dQb2ludGVyQmxvY2tpbmdMYXllcihub2RlKSA/IFwibm9uZVwiIDogXCJhdXRvXCI7XG4gIH0pO1xufVxuZnVuY3Rpb24gY2xlYXJQb2ludGVyRXZlbnQobm9kZSkge1xuICBub2RlLnN0eWxlLnBvaW50ZXJFdmVudHMgPSBcIlwiO1xufVxuZnVuY3Rpb24gZGlzYWJsZVBvaW50ZXJFdmVudHNPdXRzaWRlKG5vZGUsIHBlcnNpc3RlbnRFbGVtZW50cykge1xuICBjb25zdCBkb2MgPSBnZXREb2N1bWVudChub2RlKTtcbiAgY29uc3QgY2xlYW51cHMgPSBbXTtcbiAgaWYgKGxheWVyU3RhY2suaGFzUG9pbnRlckJsb2NraW5nTGF5ZXIoKSAmJiAhZG9jLmJvZHkuaGFzQXR0cmlidXRlKFwiZGF0YS1pbmVydFwiKSkge1xuICAgIG9yaWdpbmFsQm9keVBvaW50ZXJFdmVudHMgPSBkb2N1bWVudC5ib2R5LnN0eWxlLnBvaW50ZXJFdmVudHM7XG4gICAgcXVldWVNaWNyb3Rhc2soKCkgPT4ge1xuICAgICAgZG9jLmJvZHkuc3R5bGUucG9pbnRlckV2ZW50cyA9IFwibm9uZVwiO1xuICAgICAgZG9jLmJvZHkuc2V0QXR0cmlidXRlKFwiZGF0YS1pbmVydFwiLCBcIlwiKTtcbiAgICB9KTtcbiAgfVxuICBpZiAocGVyc2lzdGVudEVsZW1lbnRzKSB7XG4gICAgY29uc3QgcGVyc2lzdGVkQ2xlYW51cCA9IHdhaXRGb3JFbGVtZW50cyhwZXJzaXN0ZW50RWxlbWVudHMsIChlbCkgPT4ge1xuICAgICAgY2xlYW51cHMucHVzaChzZXRTdHlsZShlbCwgeyBwb2ludGVyRXZlbnRzOiBcImF1dG9cIiB9KSk7XG4gICAgfSk7XG4gICAgY2xlYW51cHMucHVzaChwZXJzaXN0ZWRDbGVhbnVwKTtcbiAgfVxuICByZXR1cm4gKCkgPT4ge1xuICAgIGlmIChsYXllclN0YWNrLmhhc1BvaW50ZXJCbG9ja2luZ0xheWVyKCkpIHJldHVybjtcbiAgICBxdWV1ZU1pY3JvdGFzaygoKSA9PiB7XG4gICAgICBkb2MuYm9keS5zdHlsZS5wb2ludGVyRXZlbnRzID0gb3JpZ2luYWxCb2R5UG9pbnRlckV2ZW50cztcbiAgICAgIGRvYy5ib2R5LnJlbW92ZUF0dHJpYnV0ZShcImRhdGEtaW5lcnRcIik7XG4gICAgICBpZiAoZG9jLmJvZHkuc3R5bGUubGVuZ3RoID09PSAwKSBkb2MuYm9keS5yZW1vdmVBdHRyaWJ1dGUoXCJzdHlsZVwiKTtcbiAgICB9KTtcbiAgICBjbGVhbnVwcy5mb3JFYWNoKChmbikgPT4gZm4oKSk7XG4gIH07XG59XG5cbi8vIHNyYy9kaXNtaXNzYWJsZS1sYXllci50c1xuZnVuY3Rpb24gdHJhY2tEaXNtaXNzYWJsZUVsZW1lbnRJbXBsKG5vZGUsIG9wdGlvbnMpIHtcbiAgaWYgKCFub2RlKSB7XG4gICAgd2FybihcIltAemFnLWpzL2Rpc21pc3NhYmxlXSBub2RlIGlzIGBudWxsYCBvciBgdW5kZWZpbmVkYFwiKTtcbiAgICByZXR1cm47XG4gIH1cbiAgY29uc3QgeyBvbkRpc21pc3MsIHBvaW50ZXJCbG9ja2luZywgZXhjbHVkZTogZXhjbHVkZUNvbnRhaW5lcnMsIGRlYnVnIH0gPSBvcHRpb25zO1xuICBjb25zdCBsYXllciA9IHsgZGlzbWlzczogb25EaXNtaXNzLCBub2RlLCBwb2ludGVyQmxvY2tpbmcgfTtcbiAgbGF5ZXJTdGFjay5hZGQobGF5ZXIpO1xuICBhc3NpZ25Qb2ludGVyRXZlbnRUb0xheWVycygpO1xuICBmdW5jdGlvbiBvblBvaW50ZXJEb3duT3V0c2lkZShldmVudCkge1xuICAgIGNvbnN0IHRhcmdldCA9IGdldEV2ZW50VGFyZ2V0KGV2ZW50LmRldGFpbC5vcmlnaW5hbEV2ZW50KTtcbiAgICBpZiAobGF5ZXJTdGFjay5pc0JlbG93UG9pbnRlckJsb2NraW5nTGF5ZXIobm9kZSkgfHwgbGF5ZXJTdGFjay5pc0luQnJhbmNoKHRhcmdldCkpIHJldHVybjtcbiAgICBvcHRpb25zLm9uUG9pbnRlckRvd25PdXRzaWRlPy4oZXZlbnQpO1xuICAgIG9wdGlvbnMub25JbnRlcmFjdE91dHNpZGU/LihldmVudCk7XG4gICAgaWYgKGV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQpIHJldHVybjtcbiAgICBpZiAoZGVidWcpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwib25Qb2ludGVyRG93bk91dHNpZGU6XCIsIGV2ZW50LmRldGFpbC5vcmlnaW5hbEV2ZW50KTtcbiAgICB9XG4gICAgb25EaXNtaXNzPy4oKTtcbiAgfVxuICBmdW5jdGlvbiBvbkZvY3VzT3V0c2lkZShldmVudCkge1xuICAgIGNvbnN0IHRhcmdldCA9IGdldEV2ZW50VGFyZ2V0KGV2ZW50LmRldGFpbC5vcmlnaW5hbEV2ZW50KTtcbiAgICBpZiAobGF5ZXJTdGFjay5pc0luQnJhbmNoKHRhcmdldCkpIHJldHVybjtcbiAgICBvcHRpb25zLm9uRm9jdXNPdXRzaWRlPy4oZXZlbnQpO1xuICAgIG9wdGlvbnMub25JbnRlcmFjdE91dHNpZGU/LihldmVudCk7XG4gICAgaWYgKGV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQpIHJldHVybjtcbiAgICBpZiAoZGVidWcpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwib25Gb2N1c091dHNpZGU6XCIsIGV2ZW50LmRldGFpbC5vcmlnaW5hbEV2ZW50KTtcbiAgICB9XG4gICAgb25EaXNtaXNzPy4oKTtcbiAgfVxuICBmdW5jdGlvbiBvbkVzY2FwZUtleURvd24oZXZlbnQpIHtcbiAgICBpZiAoIWxheWVyU3RhY2suaXNUb3BNb3N0KG5vZGUpKSByZXR1cm47XG4gICAgb3B0aW9ucy5vbkVzY2FwZUtleURvd24/LihldmVudCk7XG4gICAgaWYgKCFldmVudC5kZWZhdWx0UHJldmVudGVkICYmIG9uRGlzbWlzcykge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIG9uRGlzbWlzcygpO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBleGNsdWRlKHRhcmdldCkge1xuICAgIGlmICghbm9kZSkgcmV0dXJuIGZhbHNlO1xuICAgIGNvbnN0IGNvbnRhaW5lcnMgPSB0eXBlb2YgZXhjbHVkZUNvbnRhaW5lcnMgPT09IFwiZnVuY3Rpb25cIiA/IGV4Y2x1ZGVDb250YWluZXJzKCkgOiBleGNsdWRlQ29udGFpbmVycztcbiAgICBjb25zdCBfY29udGFpbmVycyA9IEFycmF5LmlzQXJyYXkoY29udGFpbmVycykgPyBjb250YWluZXJzIDogW2NvbnRhaW5lcnNdO1xuICAgIGNvbnN0IHBlcnNpc3RlbnRFbGVtZW50cyA9IG9wdGlvbnMucGVyc2lzdGVudEVsZW1lbnRzPy5tYXAoKGZuKSA9PiBmbigpKS5maWx0ZXIoaXNIVE1MRWxlbWVudCk7XG4gICAgaWYgKHBlcnNpc3RlbnRFbGVtZW50cykgX2NvbnRhaW5lcnMucHVzaCguLi5wZXJzaXN0ZW50RWxlbWVudHMpO1xuICAgIHJldHVybiBfY29udGFpbmVycy5zb21lKChub2RlMikgPT4gY29udGFpbnMobm9kZTIsIHRhcmdldCkpIHx8IGxheWVyU3RhY2suaXNJbk5lc3RlZExheWVyKG5vZGUsIHRhcmdldCk7XG4gIH1cbiAgY29uc3QgY2xlYW51cHMgPSBbXG4gICAgcG9pbnRlckJsb2NraW5nID8gZGlzYWJsZVBvaW50ZXJFdmVudHNPdXRzaWRlKG5vZGUsIG9wdGlvbnMucGVyc2lzdGVudEVsZW1lbnRzKSA6IHZvaWQgMCxcbiAgICB0cmFja0VzY2FwZUtleWRvd24obm9kZSwgb25Fc2NhcGVLZXlEb3duKSxcbiAgICB0cmFja0ludGVyYWN0T3V0c2lkZShub2RlLCB7IGV4Y2x1ZGUsIG9uRm9jdXNPdXRzaWRlLCBvblBvaW50ZXJEb3duT3V0c2lkZSwgZGVmZXI6IG9wdGlvbnMuZGVmZXIgfSlcbiAgXTtcbiAgcmV0dXJuICgpID0+IHtcbiAgICBsYXllclN0YWNrLnJlbW92ZShub2RlKTtcbiAgICBhc3NpZ25Qb2ludGVyRXZlbnRUb0xheWVycygpO1xuICAgIGNsZWFyUG9pbnRlckV2ZW50KG5vZGUpO1xuICAgIGNsZWFudXBzLmZvckVhY2goKGZuKSA9PiBmbj8uKCkpO1xuICB9O1xufVxuZnVuY3Rpb24gdHJhY2tEaXNtaXNzYWJsZUVsZW1lbnQobm9kZU9yRm4sIG9wdGlvbnMpIHtcbiAgY29uc3QgeyBkZWZlciB9ID0gb3B0aW9ucztcbiAgY29uc3QgZnVuYyA9IGRlZmVyID8gcmFmIDogKHYpID0+IHYoKTtcbiAgY29uc3QgY2xlYW51cHMgPSBbXTtcbiAgY2xlYW51cHMucHVzaChcbiAgICBmdW5jKCgpID0+IHtcbiAgICAgIGNvbnN0IG5vZGUgPSBpc0Z1bmN0aW9uKG5vZGVPckZuKSA/IG5vZGVPckZuKCkgOiBub2RlT3JGbjtcbiAgICAgIGNsZWFudXBzLnB1c2godHJhY2tEaXNtaXNzYWJsZUVsZW1lbnRJbXBsKG5vZGUsIG9wdGlvbnMpKTtcbiAgICB9KVxuICApO1xuICByZXR1cm4gKCkgPT4ge1xuICAgIGZ1bmMoKCkgPT4ge1xuICAgICAgY2xlYW51cHMuZm9yRWFjaCgoZm4pID0+IGZuPy4oKSk7XG4gICAgfSk7XG4gIH07XG59XG5mdW5jdGlvbiB0cmFja0Rpc21pc3NhYmxlQnJhbmNoKG5vZGVPckZuLCBvcHRpb25zID0ge30pIHtcbiAgY29uc3QgeyBkZWZlciB9ID0gb3B0aW9ucztcbiAgY29uc3QgZnVuYyA9IGRlZmVyID8gcmFmIDogKHYpID0+IHYoKTtcbiAgY29uc3QgY2xlYW51cHMgPSBbXTtcbiAgY2xlYW51cHMucHVzaChcbiAgICBmdW5jKCgpID0+IHtcbiAgICAgIGNvbnN0IG5vZGUgPSBpc0Z1bmN0aW9uKG5vZGVPckZuKSA/IG5vZGVPckZuKCkgOiBub2RlT3JGbjtcbiAgICAgIGlmICghbm9kZSkge1xuICAgICAgICB3YXJuKFwiW0B6YWctanMvZGlzbWlzc2FibGVdIGJyYW5jaCBub2RlIGlzIGBudWxsYCBvciBgdW5kZWZpbmVkYFwiKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgbGF5ZXJTdGFjay5hZGRCcmFuY2gobm9kZSk7XG4gICAgICBjbGVhbnVwcy5wdXNoKCgpID0+IHtcbiAgICAgICAgbGF5ZXJTdGFjay5yZW1vdmVCcmFuY2gobm9kZSk7XG4gICAgICB9KTtcbiAgICB9KVxuICApO1xuICByZXR1cm4gKCkgPT4ge1xuICAgIGZ1bmMoKCkgPT4ge1xuICAgICAgY2xlYW51cHMuZm9yRWFjaCgoZm4pID0+IGZuPy4oKSk7XG4gICAgfSk7XG4gIH07XG59XG5cbmV4cG9ydCB7IHRyYWNrRGlzbWlzc2FibGVCcmFuY2gsIHRyYWNrRGlzbWlzc2FibGVFbGVtZW50IH07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/dismissable/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/@zag-js/dom-query/dist/index.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MAX_Z_INDEX: () => (/* binding */ MAX_Z_INDEX),\n/* harmony export */   addDomEvent: () => (/* binding */ addDomEvent),\n/* harmony export */   ariaAttr: () => (/* binding */ ariaAttr),\n/* harmony export */   clickIfLink: () => (/* binding */ clickIfLink),\n/* harmony export */   contains: () => (/* binding */ contains),\n/* harmony export */   createScope: () => (/* binding */ createScope),\n/* harmony export */   dataAttr: () => (/* binding */ dataAttr),\n/* harmony export */   defaultItemToId: () => (/* binding */ defaultItemToId),\n/* harmony export */   disableTextSelection: () => (/* binding */ disableTextSelection),\n/* harmony export */   dispatchInputCheckedEvent: () => (/* binding */ dispatchInputCheckedEvent),\n/* harmony export */   dispatchInputValueEvent: () => (/* binding */ dispatchInputValueEvent),\n/* harmony export */   getActiveElement: () => (/* binding */ getActiveElement),\n/* harmony export */   getBeforeInputValue: () => (/* binding */ getBeforeInputValue),\n/* harmony export */   getByText: () => (/* binding */ getByText),\n/* harmony export */   getByTypeahead: () => (/* binding */ getByTypeahead),\n/* harmony export */   getComputedStyle: () => (/* binding */ getComputedStyle),\n/* harmony export */   getDataUrl: () => (/* binding */ getDataUrl),\n/* harmony export */   getDocument: () => (/* binding */ getDocument),\n/* harmony export */   getDocumentElement: () => (/* binding */ getDocumentElement),\n/* harmony export */   getEventKey: () => (/* binding */ getEventKey),\n/* harmony export */   getEventPoint: () => (/* binding */ getEventPoint),\n/* harmony export */   getEventStep: () => (/* binding */ getEventStep),\n/* harmony export */   getEventTarget: () => (/* binding */ getEventTarget),\n/* harmony export */   getFirstFocusable: () => (/* binding */ getFirstFocusable),\n/* harmony export */   getFirstTabbable: () => (/* binding */ getFirstTabbable),\n/* harmony export */   getFocusables: () => (/* binding */ getFocusables),\n/* harmony export */   getInitialFocus: () => (/* binding */ getInitialFocus),\n/* harmony export */   getLastTabbable: () => (/* binding */ getLastTabbable),\n/* harmony export */   getNativeEvent: () => (/* binding */ getNativeEvent),\n/* harmony export */   getNearestOverflowAncestor: () => (/* binding */ getNearestOverflowAncestor),\n/* harmony export */   getNextTabbable: () => (/* binding */ getNextTabbable),\n/* harmony export */   getNodeName: () => (/* binding */ getNodeName),\n/* harmony export */   getOverflowAncestors: () => (/* binding */ getOverflowAncestors),\n/* harmony export */   getParentNode: () => (/* binding */ getParentNode),\n/* harmony export */   getPlatform: () => (/* binding */ getPlatform),\n/* harmony export */   getRelativePoint: () => (/* binding */ getRelativePoint),\n/* harmony export */   getScrollPosition: () => (/* binding */ getScrollPosition),\n/* harmony export */   getTabIndex: () => (/* binding */ getTabIndex),\n/* harmony export */   getTabbableEdges: () => (/* binding */ getTabbableEdges),\n/* harmony export */   getTabbables: () => (/* binding */ getTabbables),\n/* harmony export */   getUserAgent: () => (/* binding */ getUserAgent),\n/* harmony export */   getWindow: () => (/* binding */ getWindow),\n/* harmony export */   indexOfId: () => (/* binding */ indexOfId),\n/* harmony export */   isAnchorElement: () => (/* binding */ isAnchorElement),\n/* harmony export */   isAndroid: () => (/* binding */ isAndroid),\n/* harmony export */   isApple: () => (/* binding */ isApple),\n/* harmony export */   isComposingEvent: () => (/* binding */ isComposingEvent),\n/* harmony export */   isContextMenuEvent: () => (/* binding */ isContextMenuEvent),\n/* harmony export */   isDocument: () => (/* binding */ isDocument),\n/* harmony export */   isDom: () => (/* binding */ isDom),\n/* harmony export */   isDownloadingEvent: () => (/* binding */ isDownloadingEvent),\n/* harmony export */   isEditableElement: () => (/* binding */ isEditableElement),\n/* harmony export */   isElementVisible: () => (/* binding */ isElementVisible),\n/* harmony export */   isFirefox: () => (/* binding */ isFirefox),\n/* harmony export */   isFocusable: () => (/* binding */ isFocusable),\n/* harmony export */   isHTMLElement: () => (/* binding */ isHTMLElement),\n/* harmony export */   isInView: () => (/* binding */ isInView),\n/* harmony export */   isInputElement: () => (/* binding */ isInputElement),\n/* harmony export */   isIos: () => (/* binding */ isIos),\n/* harmony export */   isKeyboardClick: () => (/* binding */ isKeyboardClick),\n/* harmony export */   isLeftClick: () => (/* binding */ isLeftClick),\n/* harmony export */   isMac: () => (/* binding */ isMac),\n/* harmony export */   isModifierKey: () => (/* binding */ isModifierKey),\n/* harmony export */   isNode: () => (/* binding */ isNode),\n/* harmony export */   isOpeningInNewTab: () => (/* binding */ isOpeningInNewTab),\n/* harmony export */   isOverflowElement: () => (/* binding */ isOverflowElement),\n/* harmony export */   isPrintableKey: () => (/* binding */ isPrintableKey),\n/* harmony export */   isRootElement: () => (/* binding */ isRootElement),\n/* harmony export */   isSafari: () => (/* binding */ isSafari),\n/* harmony export */   isSelfTarget: () => (/* binding */ isSelfTarget),\n/* harmony export */   isShadowRoot: () => (/* binding */ isShadowRoot),\n/* harmony export */   isTabbable: () => (/* binding */ isTabbable),\n/* harmony export */   isTouchDevice: () => (/* binding */ isTouchDevice),\n/* harmony export */   isTouchEvent: () => (/* binding */ isTouchEvent),\n/* harmony export */   isValidTabEvent: () => (/* binding */ isValidTabEvent),\n/* harmony export */   isVirtualClick: () => (/* binding */ isVirtualClick),\n/* harmony export */   isVirtualPointerEvent: () => (/* binding */ isVirtualPointerEvent),\n/* harmony export */   isVisualViewport: () => (/* binding */ isVisualViewport),\n/* harmony export */   isWebKit: () => (/* binding */ isWebKit),\n/* harmony export */   isWindow: () => (/* binding */ isWindow),\n/* harmony export */   itemById: () => (/* binding */ itemById),\n/* harmony export */   nextById: () => (/* binding */ nextById),\n/* harmony export */   nextTick: () => (/* binding */ nextTick),\n/* harmony export */   observeAttributes: () => (/* binding */ observeAttributes),\n/* harmony export */   observeChildren: () => (/* binding */ observeChildren),\n/* harmony export */   prevById: () => (/* binding */ prevById),\n/* harmony export */   proxyTabFocus: () => (/* binding */ proxyTabFocus),\n/* harmony export */   query: () => (/* binding */ query),\n/* harmony export */   queryAll: () => (/* binding */ queryAll),\n/* harmony export */   queueBeforeEvent: () => (/* binding */ queueBeforeEvent),\n/* harmony export */   raf: () => (/* binding */ raf),\n/* harmony export */   requestPointerLock: () => (/* binding */ requestPointerLock),\n/* harmony export */   restoreTextSelection: () => (/* binding */ restoreTextSelection),\n/* harmony export */   scrollIntoView: () => (/* binding */ scrollIntoView),\n/* harmony export */   setAttribute: () => (/* binding */ setAttribute),\n/* harmony export */   setElementChecked: () => (/* binding */ setElementChecked),\n/* harmony export */   setElementValue: () => (/* binding */ setElementValue),\n/* harmony export */   setProperty: () => (/* binding */ setProperty),\n/* harmony export */   setStyle: () => (/* binding */ setStyle),\n/* harmony export */   setVisuallyHidden: () => (/* binding */ setVisuallyHidden),\n/* harmony export */   trackFormControl: () => (/* binding */ trackFormControl),\n/* harmony export */   trackPointerMove: () => (/* binding */ trackPointerMove),\n/* harmony export */   trackPress: () => (/* binding */ trackPress),\n/* harmony export */   trackVisualViewport: () => (/* binding */ trackVisualViewport),\n/* harmony export */   visuallyHiddenStyle: () => (/* binding */ visuallyHiddenStyle),\n/* harmony export */   waitForElement: () => (/* binding */ waitForElement),\n/* harmony export */   waitForElements: () => (/* binding */ waitForElements)\n/* harmony export */ });\n// src/shared.ts\nvar clamp = (value) => Math.max(0, Math.min(1, value));\nvar wrap = (v, idx) => {\n  return v.map((_, index) => v[(Math.max(idx, 0) + index) % v.length]);\n};\nvar pipe = (...fns) => (arg) => fns.reduce((acc, fn) => fn(acc), arg);\nvar noop = () => void 0;\nvar isObject = (v) => typeof v === \"object\" && v !== null;\nvar MAX_Z_INDEX = 2147483647;\nvar dataAttr = (guard) => guard ? \"\" : void 0;\nvar ariaAttr = (guard) => guard ? \"true\" : void 0;\n\n// src/node.ts\nvar ELEMENT_NODE = 1;\nvar DOCUMENT_NODE = 9;\nvar DOCUMENT_FRAGMENT_NODE = 11;\nvar isHTMLElement = (el) => isObject(el) && el.nodeType === ELEMENT_NODE && typeof el.nodeName === \"string\";\nvar isDocument = (el) => isObject(el) && el.nodeType === DOCUMENT_NODE;\nvar isWindow = (el) => isObject(el) && el === el.window;\nvar isVisualViewport = (el) => isObject(el) && el.constructor.name === \"VisualViewport\";\nvar getNodeName = (node) => {\n  if (isHTMLElement(node)) return node.localName || \"\";\n  return \"#document\";\n};\nfunction isRootElement(node) {\n  return [\"html\", \"body\", \"#document\"].includes(getNodeName(node));\n}\nvar isNode = (el) => isObject(el) && el.nodeType !== void 0;\nvar isShadowRoot = (el) => isNode(el) && el.nodeType === DOCUMENT_FRAGMENT_NODE && \"host\" in el;\nvar isInputElement = (el) => isHTMLElement(el) && el.localName === \"input\";\nvar isAnchorElement = (el) => !!el?.matches(\"a[href]\");\nvar isElementVisible = (el) => {\n  if (!isHTMLElement(el)) return false;\n  return el.offsetWidth > 0 || el.offsetHeight > 0 || el.getClientRects().length > 0;\n};\nvar TEXTAREA_SELECT_REGEX = /(textarea|select)/;\nfunction isEditableElement(el) {\n  if (el == null || !isHTMLElement(el)) return false;\n  try {\n    return isInputElement(el) && el.selectionStart != null || TEXTAREA_SELECT_REGEX.test(el.localName) || el.isContentEditable || el.getAttribute(\"contenteditable\") === \"true\" || el.getAttribute(\"contenteditable\") === \"\";\n  } catch {\n    return false;\n  }\n}\nfunction contains(parent, child) {\n  if (!parent || !child) return false;\n  if (!isHTMLElement(parent) || !isHTMLElement(child)) return false;\n  const rootNode = child.getRootNode?.();\n  if (parent === child) return true;\n  if (parent.contains(child)) return true;\n  if (rootNode && isShadowRoot(rootNode)) {\n    let next = child;\n    while (next) {\n      if (parent === next) return true;\n      next = next.parentNode || next.host;\n    }\n  }\n  return false;\n}\nfunction getDocument(el) {\n  if (isDocument(el)) return el;\n  if (isWindow(el)) return el.document;\n  return el?.ownerDocument ?? document;\n}\nfunction getDocumentElement(el) {\n  return getDocument(el).documentElement;\n}\nfunction getWindow(el) {\n  if (isShadowRoot(el)) return getWindow(el.host);\n  if (isDocument(el)) return el.defaultView ?? window;\n  if (isHTMLElement(el)) return el.ownerDocument?.defaultView ?? window;\n  return window;\n}\nfunction getActiveElement(rootNode) {\n  let activeElement = rootNode.activeElement;\n  while (activeElement?.shadowRoot) {\n    const el = activeElement.shadowRoot.activeElement;\n    if (el === activeElement) break;\n    else activeElement = el;\n  }\n  return activeElement;\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === \"html\") return node;\n  const result = node.assignedSlot || node.parentNode || isShadowRoot(node) && node.host || getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\n\n// src/computed-style.ts\nvar styleCache = /* @__PURE__ */ new WeakMap();\nfunction getComputedStyle(el) {\n  if (!styleCache.has(el)) {\n    styleCache.set(el, getWindow(el).getComputedStyle(el));\n  }\n  return styleCache.get(el);\n}\n\n// src/data-url.ts\nfunction getDataUrl(svg, opts) {\n  const { type, quality = 0.92, background } = opts;\n  if (!svg) throw new Error(\"[zag-js > getDataUrl]: Could not find the svg element\");\n  const win = getWindow(svg);\n  const doc = win.document;\n  const svgBounds = svg.getBoundingClientRect();\n  const svgClone = svg.cloneNode(true);\n  if (!svgClone.hasAttribute(\"viewBox\")) {\n    svgClone.setAttribute(\"viewBox\", `0 0 ${svgBounds.width} ${svgBounds.height}`);\n  }\n  const serializer = new win.XMLSerializer();\n  const source = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + serializer.serializeToString(svgClone);\n  const svgString = \"data:image/svg+xml;charset=utf-8,\" + encodeURIComponent(source);\n  if (type === \"image/svg+xml\") {\n    return Promise.resolve(svgString).then((str) => {\n      svgClone.remove();\n      return str;\n    });\n  }\n  const dpr = win.devicePixelRatio || 1;\n  const canvas = doc.createElement(\"canvas\");\n  const image = new win.Image();\n  image.src = svgString;\n  canvas.width = svgBounds.width * dpr;\n  canvas.height = svgBounds.height * dpr;\n  const context = canvas.getContext(\"2d\");\n  if (type === \"image/jpeg\" || background) {\n    context.fillStyle = background || \"white\";\n    context.fillRect(0, 0, canvas.width, canvas.height);\n  }\n  return new Promise((resolve) => {\n    image.onload = () => {\n      context?.drawImage(image, 0, 0, canvas.width, canvas.height);\n      resolve(canvas.toDataURL(type, quality));\n      svgClone.remove();\n    };\n  });\n}\n\n// src/platform.ts\nvar isDom = () => typeof document !== \"undefined\";\nfunction getPlatform() {\n  const agent = navigator.userAgentData;\n  return agent?.platform ?? navigator.platform;\n}\nfunction getUserAgent() {\n  const ua2 = navigator.userAgentData;\n  if (ua2 && Array.isArray(ua2.brands)) {\n    return ua2.brands.map(({ brand, version }) => `${brand}/${version}`).join(\" \");\n  }\n  return navigator.userAgent;\n}\nvar pt = (v) => isDom() && v.test(getPlatform());\nvar ua = (v) => isDom() && v.test(getUserAgent());\nvar vn = (v) => isDom() && v.test(navigator.vendor);\nvar isTouchDevice = () => isDom() && !!navigator.maxTouchPoints;\nvar isMac = () => pt(/^Mac/);\nvar isSafari = () => isApple() && vn(/apple/i);\nvar isFirefox = () => ua(/firefox\\//i);\nvar isApple = () => pt(/mac|iphone|ipad|ipod/i);\nvar isIos = () => pt(/iP(hone|ad|od)|iOS/);\nvar isWebKit = () => ua(/AppleWebKit/);\nvar isAndroid = () => {\n  const re = /android/i;\n  return pt(re) || ua(re);\n};\n\n// src/event.ts\nfunction getBeforeInputValue(event) {\n  const { selectionStart, selectionEnd, value } = event.currentTarget;\n  return value.slice(0, selectionStart) + event.data + value.slice(selectionEnd);\n}\nfunction getComposedPath(event) {\n  return event.composedPath?.() ?? event.nativeEvent?.composedPath?.();\n}\nfunction getEventTarget(event) {\n  const composedPath = getComposedPath(event);\n  return composedPath?.[0] ?? event.target;\n}\nvar isSelfTarget = (event) => {\n  return contains(event.currentTarget, getEventTarget(event));\n};\nfunction isOpeningInNewTab(event) {\n  const element = event.currentTarget;\n  if (!element) return false;\n  const isAppleDevice = isApple();\n  if (isAppleDevice && !event.metaKey) return false;\n  if (!isAppleDevice && !event.ctrlKey) return false;\n  const localName = element.localName;\n  if (localName === \"a\") return true;\n  if (localName === \"button\" && element.type === \"submit\") return true;\n  if (localName === \"input\" && element.type === \"submit\") return true;\n  return false;\n}\nfunction isDownloadingEvent(event) {\n  const element = event.currentTarget;\n  if (!element) return false;\n  const localName = element.localName;\n  if (!event.altKey) return false;\n  if (localName === \"a\") return true;\n  if (localName === \"button\" && element.type === \"submit\") return true;\n  if (localName === \"input\" && element.type === \"submit\") return true;\n  return false;\n}\nfunction isComposingEvent(event) {\n  return getNativeEvent(event).isComposing;\n}\nfunction isKeyboardClick(e) {\n  return e.detail === 0 || e.clientX === 0 && e.clientY === 0;\n}\nfunction isPrintableKey(e) {\n  return e.key.length === 1 && !e.ctrlKey && !e.metaKey;\n}\nfunction isVirtualPointerEvent(e) {\n  return e.width === 0 && e.height === 0 || e.width === 1 && e.height === 1 && e.pressure === 0 && e.detail === 0 && e.pointerType === \"mouse\";\n}\nfunction isVirtualClick(e) {\n  if (e.mozInputSource === 0 && e.isTrusted) return true;\n  if (isAndroid() && e.pointerType) {\n    return e.type === \"click\" && e.buttons === 1;\n  }\n  return e.detail === 0 && !e.pointerType;\n}\nvar isLeftClick = (e) => e.button === 0;\nvar isContextMenuEvent = (e) => {\n  return e.button === 2 || isMac() && e.ctrlKey && e.button === 0;\n};\nvar isModifierKey = (e) => e.ctrlKey || e.altKey || e.metaKey;\nvar isTouchEvent = (event) => \"touches\" in event && event.touches.length > 0;\nvar keyMap = {\n  Up: \"ArrowUp\",\n  Down: \"ArrowDown\",\n  Esc: \"Escape\",\n  \" \": \"Space\",\n  \",\": \"Comma\",\n  Left: \"ArrowLeft\",\n  Right: \"ArrowRight\"\n};\nvar rtlKeyMap = {\n  ArrowLeft: \"ArrowRight\",\n  ArrowRight: \"ArrowLeft\"\n};\nfunction getEventKey(event, options = {}) {\n  const { dir = \"ltr\", orientation = \"horizontal\" } = options;\n  let key = event.key;\n  key = keyMap[key] ?? key;\n  const isRtl = dir === \"rtl\" && orientation === \"horizontal\";\n  if (isRtl && key in rtlKeyMap) key = rtlKeyMap[key];\n  return key;\n}\nfunction getNativeEvent(event) {\n  return event.nativeEvent ?? event;\n}\nvar pageKeys = /* @__PURE__ */ new Set([\"PageUp\", \"PageDown\"]);\nvar arrowKeys = /* @__PURE__ */ new Set([\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"]);\nfunction getEventStep(event) {\n  if (event.ctrlKey || event.metaKey) {\n    return 0.1;\n  } else {\n    const isPageKey = pageKeys.has(event.key);\n    const isSkipKey = isPageKey || event.shiftKey && arrowKeys.has(event.key);\n    return isSkipKey ? 10 : 1;\n  }\n}\nfunction getEventPoint(event, type = \"client\") {\n  const point = isTouchEvent(event) ? event.touches[0] || event.changedTouches[0] : event;\n  return { x: point[`${type}X`], y: point[`${type}Y`] };\n}\nvar addDomEvent = (target, eventName, handler, options) => {\n  const node = typeof target === \"function\" ? target() : target;\n  node?.addEventListener(eventName, handler, options);\n  return () => {\n    node?.removeEventListener(eventName, handler, options);\n  };\n};\n\n// src/form.ts\nfunction getDescriptor(el, options) {\n  const { type = \"HTMLInputElement\", property = \"value\" } = options;\n  const proto = getWindow(el)[type].prototype;\n  return Object.getOwnPropertyDescriptor(proto, property) ?? {};\n}\nfunction getElementType(el) {\n  if (el.localName === \"input\") return \"HTMLInputElement\";\n  if (el.localName === \"textarea\") return \"HTMLTextAreaElement\";\n  if (el.localName === \"select\") return \"HTMLSelectElement\";\n}\nfunction setElementValue(el, value, property = \"value\") {\n  const type = getElementType(el);\n  if (type) {\n    const descriptor = getDescriptor(el, { type, property });\n    descriptor.set?.call(el, value);\n  }\n  el.setAttribute(property, value);\n}\nfunction setElementChecked(el, checked) {\n  const descriptor = getDescriptor(el, { type: \"HTMLInputElement\", property: \"checked\" });\n  descriptor.set?.call(el, checked);\n  if (checked) el.setAttribute(\"checked\", \"\");\n  else el.removeAttribute(\"checked\");\n}\nfunction dispatchInputValueEvent(el, options) {\n  const { value, bubbles = true } = options;\n  if (!el) return;\n  const win = getWindow(el);\n  if (!(el instanceof win.HTMLInputElement)) return;\n  setElementValue(el, `${value}`);\n  el.dispatchEvent(new win.Event(\"input\", { bubbles }));\n}\nfunction dispatchInputCheckedEvent(el, options) {\n  const { checked, bubbles = true } = options;\n  if (!el) return;\n  const win = getWindow(el);\n  if (!(el instanceof win.HTMLInputElement)) return;\n  setElementChecked(el, checked);\n  el.dispatchEvent(new win.Event(\"click\", { bubbles }));\n}\nfunction getClosestForm(el) {\n  return isFormElement(el) ? el.form : el.closest(\"form\");\n}\nfunction isFormElement(el) {\n  return el.matches(\"textarea, input, select, button\");\n}\nfunction trackFormReset(el, callback) {\n  if (!el) return;\n  const form = getClosestForm(el);\n  const onReset = (e) => {\n    if (e.defaultPrevented) return;\n    callback();\n  };\n  form?.addEventListener(\"reset\", onReset, { passive: true });\n  return () => form?.removeEventListener(\"reset\", onReset);\n}\nfunction trackFieldsetDisabled(el, callback) {\n  const fieldset = el?.closest(\"fieldset\");\n  if (!fieldset) return;\n  callback(fieldset.disabled);\n  const win = getWindow(fieldset);\n  const obs = new win.MutationObserver(() => callback(fieldset.disabled));\n  obs.observe(fieldset, {\n    attributes: true,\n    attributeFilter: [\"disabled\"]\n  });\n  return () => obs.disconnect();\n}\nfunction trackFormControl(el, options) {\n  if (!el) return;\n  const { onFieldsetDisabledChange, onFormReset } = options;\n  const cleanups2 = [trackFormReset(el, onFormReset), trackFieldsetDisabled(el, onFieldsetDisabledChange)];\n  return () => cleanups2.forEach((cleanup) => cleanup?.());\n}\n\n// src/tabbable.ts\nvar isFrame = (el) => isHTMLElement(el) && el.tagName === \"IFRAME\";\nvar hasTabIndex = (el) => !Number.isNaN(parseInt(el.getAttribute(\"tabindex\") || \"0\", 10));\nvar hasNegativeTabIndex = (el) => parseInt(el.getAttribute(\"tabindex\") || \"0\", 10) < 0;\nvar focusableSelector = \"input:not([type='hidden']):not([disabled]), select:not([disabled]), textarea:not([disabled]), a[href], button:not([disabled]), [tabindex], iframe, object, embed, area[href], audio[controls], video[controls], [contenteditable]:not([contenteditable='false']), details > summary:first-of-type\";\nvar getFocusables = (container, includeContainer = false) => {\n  if (!container) return [];\n  const elements = Array.from(container.querySelectorAll(focusableSelector));\n  const include = includeContainer == true || includeContainer == \"if-empty\" && elements.length === 0;\n  if (include && isHTMLElement(container) && isFocusable(container)) {\n    elements.unshift(container);\n  }\n  const focusableElements = elements.filter(isFocusable);\n  focusableElements.forEach((element, i) => {\n    if (isFrame(element) && element.contentDocument) {\n      const frameBody = element.contentDocument.body;\n      focusableElements.splice(i, 1, ...getFocusables(frameBody));\n    }\n  });\n  return focusableElements;\n};\nfunction isFocusable(element) {\n  if (!element || element.closest(\"[inert]\")) return false;\n  return element.matches(focusableSelector) && isElementVisible(element);\n}\nfunction getFirstFocusable(container, includeContainer) {\n  const [first] = getFocusables(container, includeContainer);\n  return first || null;\n}\nfunction getTabbables(container, includeContainer) {\n  if (!container) return [];\n  const elements = Array.from(container.querySelectorAll(focusableSelector));\n  const tabbableElements = elements.filter(isTabbable);\n  if (includeContainer && isTabbable(container)) {\n    tabbableElements.unshift(container);\n  }\n  tabbableElements.forEach((element, i) => {\n    if (isFrame(element) && element.contentDocument) {\n      const frameBody = element.contentDocument.body;\n      const allFrameTabbable = getTabbables(frameBody);\n      tabbableElements.splice(i, 1, ...allFrameTabbable);\n    }\n  });\n  if (!tabbableElements.length && includeContainer) {\n    return elements;\n  }\n  return tabbableElements;\n}\nfunction isTabbable(el) {\n  if (el != null && el.tabIndex > 0) return true;\n  return isFocusable(el) && !hasNegativeTabIndex(el);\n}\nfunction getFirstTabbable(container, includeContainer) {\n  const [first] = getTabbables(container, includeContainer);\n  return first || null;\n}\nfunction getLastTabbable(container, includeContainer) {\n  const elements = getTabbables(container, includeContainer);\n  return elements[elements.length - 1] || null;\n}\nfunction getTabbableEdges(container, includeContainer) {\n  const elements = getTabbables(container, includeContainer);\n  const first = elements[0] || null;\n  const last = elements[elements.length - 1] || null;\n  return [first, last];\n}\nfunction getNextTabbable(container, current) {\n  const tabbables = getTabbables(container);\n  const doc = container?.ownerDocument || document;\n  const currentElement = current ?? doc.activeElement;\n  if (!currentElement) return null;\n  const index = tabbables.indexOf(currentElement);\n  return tabbables[index + 1] || null;\n}\nfunction getTabIndex(node) {\n  if (node.tabIndex < 0) {\n    if ((/^(audio|video|details)$/.test(node.localName) || isEditableElement(node)) && !hasTabIndex(node)) {\n      return 0;\n    }\n  }\n  return node.tabIndex;\n}\n\n// src/initial-focus.ts\nfunction getInitialFocus(options) {\n  const { root, getInitialEl, filter, enabled = true } = options;\n  if (!enabled) return;\n  let node = null;\n  node || (node = typeof getInitialEl === \"function\" ? getInitialEl() : getInitialEl);\n  node || (node = root?.querySelector(\"[data-autofocus],[autofocus]\"));\n  if (!node) {\n    const tabbables = getTabbables(root);\n    node = filter ? tabbables.filter(filter)[0] : tabbables[0];\n  }\n  return node || root || void 0;\n}\nfunction isValidTabEvent(event) {\n  const container = event.currentTarget;\n  if (!container) return false;\n  const [firstTabbable, lastTabbable] = getTabbableEdges(container);\n  const doc = container.ownerDocument || document;\n  if (doc.activeElement === firstTabbable && event.shiftKey) return false;\n  if (doc.activeElement === lastTabbable && !event.shiftKey) return false;\n  if (!firstTabbable && !lastTabbable) return false;\n  return true;\n}\n\n// src/raf.ts\nfunction nextTick(fn) {\n  const set2 = /* @__PURE__ */ new Set();\n  function raf2(fn2) {\n    const id = globalThis.requestAnimationFrame(fn2);\n    set2.add(() => globalThis.cancelAnimationFrame(id));\n  }\n  raf2(() => raf2(fn));\n  return function cleanup() {\n    set2.forEach((fn2) => fn2());\n  };\n}\nfunction raf(fn) {\n  const id = globalThis.requestAnimationFrame(fn);\n  return () => {\n    globalThis.cancelAnimationFrame(id);\n  };\n}\nfunction queueBeforeEvent(el, type, cb) {\n  const cancelTimer = raf(() => {\n    el.removeEventListener(type, exec, true);\n    cb();\n  });\n  const exec = () => {\n    cancelTimer();\n    cb();\n  };\n  el.addEventListener(type, exec, { once: true, capture: true });\n  return cancelTimer;\n}\n\n// src/mutation-observer.ts\nfunction observeAttributesImpl(node, options) {\n  if (!node) return;\n  const { attributes, callback: fn } = options;\n  const win = node.ownerDocument.defaultView || window;\n  const obs = new win.MutationObserver((changes) => {\n    for (const change of changes) {\n      if (change.type === \"attributes\" && change.attributeName && attributes.includes(change.attributeName)) {\n        fn(change);\n      }\n    }\n  });\n  obs.observe(node, { attributes: true, attributeFilter: attributes });\n  return () => obs.disconnect();\n}\nfunction observeAttributes(nodeOrFn, options) {\n  const { defer } = options;\n  const func = defer ? raf : (v) => v();\n  const cleanups2 = [];\n  cleanups2.push(\n    func(() => {\n      const node = typeof nodeOrFn === \"function\" ? nodeOrFn() : nodeOrFn;\n      cleanups2.push(observeAttributesImpl(node, options));\n    })\n  );\n  return () => {\n    cleanups2.forEach((fn) => fn?.());\n  };\n}\nfunction observeChildrenImpl(node, options) {\n  const { callback: fn } = options;\n  if (!node) return;\n  const win = node.ownerDocument.defaultView || window;\n  const obs = new win.MutationObserver(fn);\n  obs.observe(node, { childList: true, subtree: true });\n  return () => obs.disconnect();\n}\nfunction observeChildren(nodeOrFn, options) {\n  const { defer } = options;\n  const func = defer ? raf : (v) => v();\n  const cleanups2 = [];\n  cleanups2.push(\n    func(() => {\n      const node = typeof nodeOrFn === \"function\" ? nodeOrFn() : nodeOrFn;\n      cleanups2.push(observeChildrenImpl(node, options));\n    })\n  );\n  return () => {\n    cleanups2.forEach((fn) => fn?.());\n  };\n}\n\n// src/navigate.ts\nfunction clickIfLink(el) {\n  const click = () => el.click();\n  if (isFirefox()) {\n    queueBeforeEvent(el, \"keyup\", click);\n  } else {\n    queueMicrotask(click);\n  }\n}\n\n// src/overflow.ts\nfunction getNearestOverflowAncestor(el) {\n  const parentNode = getParentNode(el);\n  if (isRootElement(parentNode)) return getDocument(parentNode).body;\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) return parentNode;\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(el, list = []) {\n  const scrollableAncestor = getNearestOverflowAncestor(el);\n  const isBody = scrollableAncestor === el.ownerDocument.body;\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, []));\n}\nvar getElementRect = (el) => {\n  if (isHTMLElement(el)) return el.getBoundingClientRect();\n  if (isVisualViewport(el)) return { top: 0, left: 0, bottom: el.height, right: el.width };\n  return { top: 0, left: 0, bottom: el.innerHeight, right: el.innerWidth };\n};\nfunction isInView(el, ancestor) {\n  if (!isHTMLElement(el)) return true;\n  const ancestorRect = getElementRect(ancestor);\n  const elRect = el.getBoundingClientRect();\n  return elRect.top >= ancestorRect.top && elRect.left >= ancestorRect.left && elRect.bottom <= ancestorRect.bottom && elRect.right <= ancestorRect.right;\n}\nvar OVERFLOW_RE = /auto|scroll|overlay|hidden|clip/;\nfunction isOverflowElement(el) {\n  const win = getWindow(el);\n  const { overflow, overflowX, overflowY, display } = win.getComputedStyle(el);\n  return OVERFLOW_RE.test(overflow + overflowY + overflowX) && ![\"inline\", \"contents\"].includes(display);\n}\nfunction isScrollable(el) {\n  return el.scrollHeight > el.clientHeight || el.scrollWidth > el.clientWidth;\n}\nfunction scrollIntoView(el, options) {\n  const { rootEl, ...scrollOptions } = options || {};\n  if (!el || !rootEl) return;\n  if (!isOverflowElement(rootEl) || !isScrollable(rootEl)) return;\n  el.scrollIntoView(scrollOptions);\n}\nfunction getScrollPosition(element) {\n  if (isHTMLElement(element)) {\n    return { scrollLeft: element.scrollLeft, scrollTop: element.scrollTop };\n  }\n  return { scrollLeft: element.scrollX, scrollTop: element.scrollY };\n}\n\n// src/point.ts\nfunction getRelativePoint(point, element) {\n  const { left, top, width, height } = element.getBoundingClientRect();\n  const offset = { x: point.x - left, y: point.y - top };\n  const percent = { x: clamp(offset.x / width), y: clamp(offset.y / height) };\n  function getPercentValue(options = {}) {\n    const { dir = \"ltr\", orientation = \"horizontal\", inverted } = options;\n    const invertX = typeof inverted === \"object\" ? inverted.x : inverted;\n    const invertY = typeof inverted === \"object\" ? inverted.y : inverted;\n    if (orientation === \"horizontal\") {\n      return dir === \"rtl\" || invertX ? 1 - percent.x : percent.x;\n    }\n    return invertY ? 1 - percent.y : percent.y;\n  }\n  return { offset, percent, getPercentValue };\n}\n\n// src/pointer-lock.ts\nfunction requestPointerLock(doc, fn) {\n  const body = doc.body;\n  const supported = \"pointerLockElement\" in doc || \"mozPointerLockElement\" in doc;\n  const isLocked = () => !!doc.pointerLockElement;\n  function onPointerChange() {\n    fn?.(isLocked());\n  }\n  function onPointerError(event) {\n    if (isLocked()) fn?.(false);\n    console.error(\"PointerLock error occurred:\", event);\n    doc.exitPointerLock();\n  }\n  if (!supported) return;\n  try {\n    body.requestPointerLock();\n  } catch {\n  }\n  const cleanup = [\n    addDomEvent(doc, \"pointerlockchange\", onPointerChange, false),\n    addDomEvent(doc, \"pointerlockerror\", onPointerError, false)\n  ];\n  return () => {\n    cleanup.forEach((cleanup2) => cleanup2());\n    doc.exitPointerLock();\n  };\n}\n\n// src/text-selection.ts\nvar state = \"default\";\nvar userSelect = \"\";\nvar elementMap = /* @__PURE__ */ new WeakMap();\nfunction disableTextSelectionImpl(options = {}) {\n  const { target, doc } = options;\n  const docNode = doc ?? document;\n  const rootEl = docNode.documentElement;\n  if (isIos()) {\n    if (state === \"default\") {\n      userSelect = rootEl.style.webkitUserSelect;\n      rootEl.style.webkitUserSelect = \"none\";\n    }\n    state = \"disabled\";\n  } else if (target) {\n    elementMap.set(target, target.style.userSelect);\n    target.style.userSelect = \"none\";\n  }\n  return () => restoreTextSelection({ target, doc: docNode });\n}\nfunction restoreTextSelection(options = {}) {\n  const { target, doc } = options;\n  const docNode = doc ?? document;\n  const rootEl = docNode.documentElement;\n  if (isIos()) {\n    if (state !== \"disabled\") return;\n    state = \"restoring\";\n    setTimeout(() => {\n      nextTick(() => {\n        if (state === \"restoring\") {\n          if (rootEl.style.webkitUserSelect === \"none\") {\n            rootEl.style.webkitUserSelect = userSelect || \"\";\n          }\n          userSelect = \"\";\n          state = \"default\";\n        }\n      });\n    }, 300);\n  } else {\n    if (target && elementMap.has(target)) {\n      const prevUserSelect = elementMap.get(target);\n      if (target.style.userSelect === \"none\") {\n        target.style.userSelect = prevUserSelect ?? \"\";\n      }\n      if (target.getAttribute(\"style\") === \"\") {\n        target.removeAttribute(\"style\");\n      }\n      elementMap.delete(target);\n    }\n  }\n}\nfunction disableTextSelection(options = {}) {\n  const { defer, target, ...restOptions } = options;\n  const func = defer ? raf : (v) => v();\n  const cleanups2 = [];\n  cleanups2.push(\n    func(() => {\n      const node = typeof target === \"function\" ? target() : target;\n      cleanups2.push(disableTextSelectionImpl({ ...restOptions, target: node }));\n    })\n  );\n  return () => {\n    cleanups2.forEach((fn) => fn?.());\n  };\n}\n\n// src/pointer-move.ts\nfunction trackPointerMove(doc, handlers) {\n  const { onPointerMove, onPointerUp } = handlers;\n  const handleMove = (event) => {\n    const point = getEventPoint(event);\n    const distance = Math.sqrt(point.x ** 2 + point.y ** 2);\n    const moveBuffer = event.pointerType === \"touch\" ? 10 : 5;\n    if (distance < moveBuffer) return;\n    if (event.pointerType === \"mouse\" && event.button === 0) {\n      onPointerUp();\n      return;\n    }\n    onPointerMove({ point, event });\n  };\n  const cleanups2 = [\n    addDomEvent(doc, \"pointermove\", handleMove, false),\n    addDomEvent(doc, \"pointerup\", onPointerUp, false),\n    addDomEvent(doc, \"pointercancel\", onPointerUp, false),\n    addDomEvent(doc, \"contextmenu\", onPointerUp, false),\n    disableTextSelection({ doc })\n  ];\n  return () => {\n    cleanups2.forEach((cleanup) => cleanup());\n  };\n}\n\n// src/press.ts\nfunction trackPress(options) {\n  const {\n    pointerNode,\n    keyboardNode = pointerNode,\n    onPress,\n    onPressStart,\n    onPressEnd,\n    isValidKey = (e) => e.key === \"Enter\"\n  } = options;\n  if (!pointerNode) return noop;\n  const win = getWindow(pointerNode);\n  const doc = getDocument(pointerNode);\n  let removeStartListeners = noop;\n  let removeEndListeners = noop;\n  let removeAccessibleListeners = noop;\n  const getInfo = (event) => ({\n    point: getEventPoint(event),\n    event\n  });\n  function startPress(event) {\n    onPressStart?.(getInfo(event));\n  }\n  function cancelPress(event) {\n    onPressEnd?.(getInfo(event));\n  }\n  const startPointerPress = (startEvent) => {\n    removeEndListeners();\n    const endPointerPress = (endEvent) => {\n      const target = getEventTarget(endEvent);\n      if (contains(pointerNode, target)) {\n        onPress?.(getInfo(endEvent));\n      } else {\n        onPressEnd?.(getInfo(endEvent));\n      }\n    };\n    const removePointerUpListener = addDomEvent(win, \"pointerup\", endPointerPress, { passive: !onPress });\n    const removePointerCancelListener = addDomEvent(win, \"pointercancel\", cancelPress, { passive: !onPressEnd });\n    removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n    if (doc.activeElement === keyboardNode && startEvent.pointerType === \"mouse\") {\n      startEvent.preventDefault();\n    }\n    startPress(startEvent);\n  };\n  const removePointerListener = addDomEvent(pointerNode, \"pointerdown\", startPointerPress, { passive: !onPressStart });\n  const removeFocusListener = addDomEvent(keyboardNode, \"focus\", startAccessiblePress);\n  removeStartListeners = pipe(removePointerListener, removeFocusListener);\n  function startAccessiblePress() {\n    const handleKeydown = (keydownEvent) => {\n      if (!isValidKey(keydownEvent)) return;\n      const handleKeyup = (keyupEvent) => {\n        if (!isValidKey(keyupEvent)) return;\n        const evt2 = new win.PointerEvent(\"pointerup\");\n        const info = getInfo(evt2);\n        onPress?.(info);\n        onPressEnd?.(info);\n      };\n      removeEndListeners();\n      removeEndListeners = addDomEvent(keyboardNode, \"keyup\", handleKeyup);\n      const evt = new win.PointerEvent(\"pointerdown\");\n      startPress(evt);\n    };\n    const handleBlur = () => {\n      const evt = new win.PointerEvent(\"pointercancel\");\n      cancelPress(evt);\n    };\n    const removeKeydownListener = addDomEvent(keyboardNode, \"keydown\", handleKeydown);\n    const removeBlurListener = addDomEvent(keyboardNode, \"blur\", handleBlur);\n    removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n  }\n  return () => {\n    removeStartListeners();\n    removeEndListeners();\n    removeAccessibleListeners();\n  };\n}\n\n// src/proxy-tab-focus.ts\nfunction proxyTabFocusImpl(container, options = {}) {\n  const { triggerElement, onFocus } = options;\n  const doc = container?.ownerDocument || document;\n  const body = doc.body;\n  function onKeyDown(event) {\n    if (event.key !== \"Tab\") return;\n    let elementToFocus = null;\n    const [firstTabbable, lastTabbable] = getTabbableEdges(container, true);\n    const noTabbableElements = !firstTabbable && !lastTabbable;\n    if (event.shiftKey && (doc.activeElement === firstTabbable || noTabbableElements)) {\n      elementToFocus = triggerElement;\n    } else if (!event.shiftKey && doc.activeElement === triggerElement) {\n      elementToFocus = firstTabbable;\n    } else if (!event.shiftKey && (doc.activeElement === lastTabbable || noTabbableElements)) {\n      elementToFocus = getNextTabbable(body, triggerElement);\n    }\n    if (!elementToFocus) return;\n    event.preventDefault();\n    if (typeof onFocus === \"function\") {\n      onFocus(elementToFocus);\n    } else {\n      elementToFocus.focus();\n    }\n  }\n  return addDomEvent(doc, \"keydown\", onKeyDown, true);\n}\nfunction proxyTabFocus(container, options) {\n  const { defer, triggerElement, ...restOptions } = options;\n  const func = defer ? raf : (v) => v();\n  const cleanups2 = [];\n  cleanups2.push(\n    func(() => {\n      const node = typeof container === \"function\" ? container() : container;\n      const trigger = typeof triggerElement === \"function\" ? triggerElement() : triggerElement;\n      cleanups2.push(proxyTabFocusImpl(node, { triggerElement: trigger, ...restOptions }));\n    })\n  );\n  return () => {\n    cleanups2.forEach((fn) => fn?.());\n  };\n}\n\n// src/query.ts\nfunction queryAll(root, selector) {\n  return Array.from(root?.querySelectorAll(selector) ?? []);\n}\nfunction query(root, selector) {\n  return root?.querySelector(selector) ?? null;\n}\nvar defaultItemToId = (v) => v.id;\nfunction itemById(v, id, itemToId = defaultItemToId) {\n  return v.find((item) => itemToId(item) === id);\n}\nfunction indexOfId(v, id, itemToId = defaultItemToId) {\n  const item = itemById(v, id, itemToId);\n  return item ? v.indexOf(item) : -1;\n}\nfunction nextById(v, id, loop = true) {\n  let idx = indexOfId(v, id);\n  idx = loop ? (idx + 1) % v.length : Math.min(idx + 1, v.length - 1);\n  return v[idx];\n}\nfunction prevById(v, id, loop = true) {\n  let idx = indexOfId(v, id);\n  if (idx === -1) return loop ? v[v.length - 1] : null;\n  idx = loop ? (idx - 1 + v.length) % v.length : Math.max(0, idx - 1);\n  return v[idx];\n}\n\n// src/scope.ts\nfunction createScope(methods) {\n  const dom = {\n    getRootNode: (ctx) => ctx.getRootNode?.() ?? document,\n    getDoc: (ctx) => getDocument(dom.getRootNode(ctx)),\n    getWin: (ctx) => dom.getDoc(ctx).defaultView ?? window,\n    getActiveElement: (ctx) => getActiveElement(dom.getRootNode(ctx)),\n    isActiveElement: (ctx, elem) => elem === dom.getActiveElement(ctx),\n    getById: (ctx, id) => dom.getRootNode(ctx).getElementById(id),\n    setValue: (elem, value) => {\n      if (elem == null || value == null) return;\n      setElementValue(elem, value.toString());\n    }\n  };\n  return { ...dom, ...methods };\n}\n\n// src/searchable.ts\nvar sanitize = (str) => str.split(\"\").map((char) => {\n  const code = char.charCodeAt(0);\n  if (code > 0 && code < 128) return char;\n  if (code >= 128 && code <= 255) return `/x${code.toString(16)}`.replace(\"/\", \"\\\\\");\n  return \"\";\n}).join(\"\").trim();\nvar getValueText = (el) => {\n  return sanitize(el.dataset?.valuetext ?? el.textContent ?? \"\");\n};\nvar match = (valueText, query2) => {\n  return valueText.trim().toLowerCase().startsWith(query2.toLowerCase());\n};\nfunction getByText(v, text, currentId, itemToId = defaultItemToId) {\n  const index = currentId ? indexOfId(v, currentId, itemToId) : -1;\n  let items = currentId ? wrap(v, index) : v;\n  const isSingleKey = text.length === 1;\n  if (isSingleKey) {\n    items = items.filter((item) => itemToId(item) !== currentId);\n  }\n  return items.find((item) => match(getValueText(item), text));\n}\n\n// src/set.ts\nvar cleanups = /* @__PURE__ */ new WeakMap();\nfunction set(element, key, setup) {\n  if (!cleanups.has(element)) {\n    cleanups.set(element, /* @__PURE__ */ new Map());\n  }\n  const elementCleanups = cleanups.get(element);\n  const prevCleanup = elementCleanups.get(key);\n  if (!prevCleanup) {\n    elementCleanups.set(key, setup());\n    return () => {\n      elementCleanups.get(key)?.();\n      elementCleanups.delete(key);\n    };\n  }\n  const cleanup = setup();\n  const nextCleanup = () => {\n    cleanup();\n    prevCleanup();\n    elementCleanups.delete(key);\n  };\n  elementCleanups.set(key, nextCleanup);\n  return () => {\n    const isCurrent = elementCleanups.get(key) === nextCleanup;\n    if (!isCurrent) return;\n    cleanup();\n    elementCleanups.set(key, prevCleanup);\n  };\n}\nfunction setAttribute(element, attr, value) {\n  const setup = () => {\n    const previousValue = element.getAttribute(attr);\n    element.setAttribute(attr, value);\n    return () => {\n      if (previousValue == null) {\n        element.removeAttribute(attr);\n      } else {\n        element.setAttribute(attr, previousValue);\n      }\n    };\n  };\n  return set(element, attr, setup);\n}\nfunction setProperty(element, property, value) {\n  const setup = () => {\n    const exists = property in element;\n    const previousValue = element[property];\n    element[property] = value;\n    return () => {\n      if (!exists) {\n        delete element[property];\n      } else {\n        element[property] = previousValue;\n      }\n    };\n  };\n  return set(element, property, setup);\n}\nfunction setStyle(element, style) {\n  if (!element) return () => {\n  };\n  const setup = () => {\n    const prevStyle = element.style.cssText;\n    Object.assign(element.style, style);\n    return () => {\n      element.style.cssText = prevStyle;\n    };\n  };\n  return set(element, \"style\", setup);\n}\n\n// src/typeahead.ts\nfunction getByTypeaheadImpl(baseItems, options) {\n  const { state: state2, activeId, key, timeout = 350, itemToId } = options;\n  const search = state2.keysSoFar + key;\n  const isRepeated = search.length > 1 && Array.from(search).every((char) => char === search[0]);\n  const query2 = isRepeated ? search[0] : search;\n  let items = baseItems.slice();\n  const next = getByText(items, query2, activeId, itemToId);\n  function cleanup() {\n    clearTimeout(state2.timer);\n    state2.timer = -1;\n  }\n  function update(value) {\n    state2.keysSoFar = value;\n    cleanup();\n    if (value !== \"\") {\n      state2.timer = +setTimeout(() => {\n        update(\"\");\n        cleanup();\n      }, timeout);\n    }\n  }\n  update(search);\n  return next;\n}\nvar getByTypeahead = /* @__PURE__ */ Object.assign(getByTypeaheadImpl, {\n  defaultOptions: { keysSoFar: \"\", timer: -1 },\n  isValidEvent: isValidTypeaheadEvent\n});\nfunction isValidTypeaheadEvent(event) {\n  return event.key.length === 1 && !event.ctrlKey && !event.metaKey;\n}\n\n// src/visual-viewport.ts\nfunction trackVisualViewport(doc, fn) {\n  const win = doc?.defaultView || window;\n  const onResize = () => {\n    fn?.(getViewportSize(win));\n  };\n  onResize();\n  return addDomEvent(win.visualViewport ?? win, \"resize\", onResize);\n}\nfunction getViewportSize(win) {\n  return {\n    width: win.visualViewport?.width || win.innerWidth,\n    height: win.visualViewport?.height || win.innerHeight\n  };\n}\n\n// src/visually-hidden.ts\nvar visuallyHiddenStyle = {\n  border: \"0\",\n  clip: \"rect(0 0 0 0)\",\n  height: \"1px\",\n  margin: \"-1px\",\n  overflow: \"hidden\",\n  padding: \"0\",\n  position: \"absolute\",\n  width: \"1px\",\n  whiteSpace: \"nowrap\",\n  wordWrap: \"normal\"\n};\nfunction setVisuallyHidden(el) {\n  Object.assign(el.style, visuallyHiddenStyle);\n}\n\n// src/wait-for.ts\nvar fps = 1e3 / 60;\nfunction waitForElement(query2, cb) {\n  const el = query2();\n  if (isHTMLElement(el) && el.isConnected) {\n    cb(el);\n    return () => void 0;\n  } else {\n    const timerId = setInterval(() => {\n      const el2 = query2();\n      if (isHTMLElement(el2) && el2.isConnected) {\n        cb(el2);\n        clearInterval(timerId);\n      }\n    }, fps);\n    return () => clearInterval(timerId);\n  }\n}\nfunction waitForElements(queries, cb) {\n  const cleanups2 = [];\n  queries?.forEach((query2) => {\n    const clean = waitForElement(query2, cb);\n    cleanups2.push(clean);\n  });\n  return () => {\n    cleanups2.forEach((fn) => fn());\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/editable/dist/index.mjs":
/*!******************************************************!*\
  !*** ./node_modules/@zag-js/editable/dist/index.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_interact_outside__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/interact-outside */ \"(ssr)/./node_modules/@zag-js/interact-outside/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n// src/editable.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"editable\").parts(\n  \"root\",\n  \"area\",\n  \"label\",\n  \"preview\",\n  \"input\",\n  \"editTrigger\",\n  \"submitTrigger\",\n  \"cancelTrigger\",\n  \"control\"\n);\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getRootId: (ctx) => ctx.ids?.root ?? `editable:${ctx.id}`,\n  getAreaId: (ctx) => ctx.ids?.area ?? `editable:${ctx.id}:area`,\n  getLabelId: (ctx) => ctx.ids?.label ?? `editable:${ctx.id}:label`,\n  getPreviewId: (ctx) => ctx.ids?.preview ?? `editable:${ctx.id}:preview`,\n  getInputId: (ctx) => ctx.ids?.input ?? `editable:${ctx.id}:input`,\n  getControlId: (ctx) => ctx.ids?.control ?? `editable:${ctx.id}:control`,\n  getSubmitTriggerId: (ctx) => ctx.ids?.submitTrigger ?? `editable:${ctx.id}:submit`,\n  getCancelTriggerId: (ctx) => ctx.ids?.cancelTrigger ?? `editable:${ctx.id}:cancel`,\n  getEditTriggerId: (ctx) => ctx.ids?.editTrigger ?? `editable:${ctx.id}:edit`,\n  getInputEl: (ctx) => dom.getById(ctx, dom.getInputId(ctx)),\n  getPreviewEl: (ctx) => dom.getById(ctx, dom.getPreviewId(ctx)),\n  getSubmitTriggerEl: (ctx) => dom.getById(ctx, dom.getSubmitTriggerId(ctx)),\n  getCancelTriggerEl: (ctx) => dom.getById(ctx, dom.getCancelTriggerId(ctx)),\n  getEditTriggerEl: (ctx) => dom.getById(ctx, dom.getEditTriggerId(ctx))\n});\n\n// src/editable.connect.ts\nfunction connect(state, send, normalize) {\n  const disabled = state.context.disabled;\n  const interactive = state.context.isInteractive;\n  const readOnly = state.context.readOnly;\n  const invalid = state.context.invalid;\n  const autoResize = state.context.autoResize;\n  const translations = state.context.translations;\n  const editing = state.matches(\"edit\");\n  const placeholderProp = state.context.placeholder;\n  const placeholder = typeof placeholderProp === \"string\" ? { edit: placeholderProp, preview: placeholderProp } : placeholderProp;\n  const value = state.context.value;\n  const empty = value.trim() === \"\";\n  const valueText = empty ? placeholder?.preview ?? \"\" : value;\n  return {\n    editing,\n    empty,\n    value,\n    valueText,\n    setValue(value2) {\n      send({ type: \"VALUE.SET\", value: value2, src: \"setValue\" });\n    },\n    clearValue() {\n      send({ type: \"VALUE.SET\", value: \"\", src: \"clearValue\" });\n    },\n    edit() {\n      if (!interactive) return;\n      send(\"EDIT\");\n    },\n    cancel() {\n      if (!interactive) return;\n      send(\"CANCEL\");\n    },\n    submit() {\n      if (!interactive) return;\n      send(\"SUBMIT\");\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        id: dom.getRootId(state.context),\n        dir: state.context.dir\n      });\n    },\n    getAreaProps() {\n      return normalize.element({\n        ...parts.area.attrs,\n        id: dom.getAreaId(state.context),\n        dir: state.context.dir,\n        style: autoResize ? { display: \"inline-grid\" } : void 0,\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(editing),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-placeholder-shown\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(empty)\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        id: dom.getLabelId(state.context),\n        dir: state.context.dir,\n        htmlFor: dom.getInputId(state.context),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(editing),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        onClick() {\n          if (editing) return;\n          const previewEl = dom.getPreviewEl(state.context);\n          previewEl?.focus({ preventScroll: true });\n        }\n      });\n    },\n    getInputProps() {\n      return normalize.input({\n        ...parts.input.attrs,\n        dir: state.context.dir,\n        \"aria-label\": translations.input,\n        name: state.context.name,\n        form: state.context.form,\n        id: dom.getInputId(state.context),\n        hidden: autoResize ? void 0 : !editing,\n        placeholder: placeholder?.edit,\n        maxLength: state.context.maxLength,\n        required: state.context.required,\n        disabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        readOnly,\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(readOnly),\n        \"aria-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(invalid),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"data-autoresize\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(autoResize),\n        defaultValue: value,\n        size: autoResize ? 1 : void 0,\n        onChange(event) {\n          send({ type: \"VALUE.SET\", src: \"input.change\", value: event.currentTarget.value });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isComposingEvent)(event)) return;\n          const keyMap = {\n            Escape() {\n              send(\"CANCEL\");\n              event.preventDefault();\n            },\n            Enter(event2) {\n              if (!state.context.submitOnEnter) return;\n              const { localName } = event2.currentTarget;\n              if (localName === \"textarea\") {\n                const submitMod = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isApple)() ? event2.metaKey : event2.ctrlKey;\n                if (!submitMod) return;\n                send({ type: \"SUBMIT\", src: \"keydown.enter\" });\n                return;\n              }\n              if (localName === \"input\" && !event2.shiftKey && !event2.metaKey) {\n                send({ type: \"SUBMIT\", src: \"keydown.enter\" });\n                event2.preventDefault();\n              }\n            }\n          };\n          const exec = keyMap[event.key];\n          if (exec) {\n            exec(event);\n          }\n        },\n        style: autoResize ? {\n          gridArea: \"1 / 1 / auto / auto\",\n          visibility: !editing ? \"hidden\" : void 0\n        } : void 0\n      });\n    },\n    getPreviewProps() {\n      return normalize.element({\n        id: dom.getPreviewId(state.context),\n        ...parts.preview.attrs,\n        dir: state.context.dir,\n        \"data-placeholder-shown\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(empty),\n        \"aria-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(readOnly),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"aria-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(disabled),\n        \"aria-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(invalid),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"aria-label\": translations.edit,\n        \"data-autoresize\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(autoResize),\n        children: valueText,\n        hidden: autoResize ? void 0 : editing,\n        tabIndex: interactive ? 0 : void 0,\n        onClick() {\n          if (!interactive) return;\n          if (state.context.activationMode !== \"click\") return;\n          send({ type: \"EDIT\", src: \"click\" });\n        },\n        onFocus() {\n          if (!interactive) return;\n          if (state.context.activationMode !== \"focus\") return;\n          send({ type: \"EDIT\", src: \"focus\" });\n        },\n        onDoubleClick(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          if (state.context.activationMode !== \"dblclick\") return;\n          send({ type: \"EDIT\", src: \"dblclick\" });\n        },\n        style: autoResize ? {\n          whiteSpace: \"pre\",\n          userSelect: \"none\",\n          gridArea: \"1 / 1 / auto / auto\",\n          visibility: editing ? \"hidden\" : void 0,\n          // in event the preview overflow's the parent element\n          overflow: \"hidden\",\n          textOverflow: \"ellipsis\"\n        } : void 0\n      });\n    },\n    getEditTriggerProps() {\n      return normalize.button({\n        ...parts.editTrigger.attrs,\n        id: dom.getEditTriggerId(state.context),\n        dir: state.context.dir,\n        \"aria-label\": translations.edit,\n        hidden: editing,\n        type: \"button\",\n        disabled,\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          send({ type: \"EDIT\", src: \"edit.click\" });\n        }\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        id: dom.getControlId(state.context),\n        ...parts.control.attrs,\n        dir: state.context.dir\n      });\n    },\n    getSubmitTriggerProps() {\n      return normalize.button({\n        ...parts.submitTrigger.attrs,\n        dir: state.context.dir,\n        id: dom.getSubmitTriggerId(state.context),\n        \"aria-label\": translations.submit,\n        hidden: !editing,\n        disabled,\n        type: \"button\",\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          send({ type: \"SUBMIT\", src: \"submit.click\" });\n        }\n      });\n    },\n    getCancelTriggerProps() {\n      return normalize.button({\n        ...parts.cancelTrigger.attrs,\n        dir: state.context.dir,\n        \"aria-label\": translations.cancel,\n        id: dom.getCancelTriggerId(state.context),\n        hidden: !editing,\n        type: \"button\",\n        disabled,\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          send({ type: \"CANCEL\", src: \"cancel.click\" });\n        }\n      });\n    }\n  };\n}\nvar submitOnEnter = (ctx) => [\"both\", \"enter\"].includes(ctx.submitMode);\nvar submitOnBlur = (ctx) => [\"both\", \"blur\"].includes(ctx.submitMode);\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)(\n    {\n      id: \"editable\",\n      initial: ctx.edit ? \"edit\" : \"preview\",\n      entry: ctx.edit ? [\"focusInput\"] : void 0,\n      context: {\n        activationMode: \"focus\",\n        submitMode: \"both\",\n        value: \"\",\n        previousValue: \"\",\n        selectOnFocus: true,\n        disabled: false,\n        readOnly: false,\n        ...ctx,\n        translations: {\n          input: \"editable input\",\n          edit: \"edit\",\n          submit: \"submit\",\n          cancel: \"cancel\",\n          ...ctx.translations\n        }\n      },\n      watch: {\n        value: [\"syncInputValue\"],\n        edit: [\"toggleEditing\"]\n      },\n      computed: {\n        submitOnEnter,\n        submitOnBlur,\n        isInteractive: (ctx2) => !(ctx2.disabled || ctx2.readOnly)\n      },\n      on: {\n        \"VALUE.SET\": {\n          actions: \"setValue\"\n        }\n      },\n      states: {\n        preview: {\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=559561\n          entry: [\"blurInputIfNeeded\"],\n          on: {\n            \"CONTROLLED.EDIT\": {\n              target: \"edit\",\n              actions: [\"setPreviousValue\", \"focusInput\"]\n            },\n            EDIT: [\n              {\n                guard: \"isEditControlled\",\n                actions: [\"invokeOnEdit\"]\n              },\n              {\n                target: \"edit\",\n                actions: [\"setPreviousValue\", \"focusInput\", \"invokeOnEdit\"]\n              }\n            ]\n          }\n        },\n        edit: {\n          activities: [\"trackInteractOutside\"],\n          on: {\n            \"CONTROLLED.PREVIEW\": [\n              {\n                guard: \"isSubmitEvent\",\n                target: \"preview\",\n                actions: [\"setPreviousValue\", \"restoreFocus\", \"invokeOnSubmit\"]\n              },\n              {\n                target: \"preview\",\n                actions: [\"revertValue\", \"restoreFocus\", \"invokeOnCancel\"]\n              }\n            ],\n            CANCEL: [\n              {\n                guard: \"isEditControlled\",\n                actions: [\"invokeOnPreview\"]\n              },\n              {\n                target: \"preview\",\n                actions: [\"revertValue\", \"restoreFocus\", \"invokeOnCancel\", \"invokeOnPreview\"]\n              }\n            ],\n            SUBMIT: [\n              {\n                guard: \"isEditControlled\",\n                actions: [\"invokeOnPreview\"]\n              },\n              {\n                target: \"preview\",\n                actions: [\"setPreviousValue\", \"restoreFocus\", \"invokeOnSubmit\", \"invokeOnPreview\"]\n              }\n            ]\n          }\n        }\n      }\n    },\n    {\n      guards: {\n        isEditControlled: (ctx2) => !!ctx2[\"edit.controlled\"],\n        isSubmitEvent: (_ctx, evt) => evt.previousEvent?.type === \"SUBMIT\"\n      },\n      activities: {\n        trackInteractOutside(ctx2, _evt, { send }) {\n          return (0,_zag_js_interact_outside__WEBPACK_IMPORTED_MODULE_4__.trackInteractOutside)(dom.getInputEl(ctx2), {\n            exclude(target) {\n              const ignore = [dom.getCancelTriggerEl(ctx2), dom.getSubmitTriggerEl(ctx2)];\n              return ignore.some((el) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.contains)(el, target));\n            },\n            onFocusOutside: ctx2.onFocusOutside,\n            onPointerDownOutside: ctx2.onPointerDownOutside,\n            onInteractOutside(event) {\n              ctx2.onInteractOutside?.(event);\n              if (event.defaultPrevented) return;\n              const { focusable } = event.detail;\n              send({ type: submitOnBlur(ctx2) ? \"SUBMIT\" : \"CANCEL\", src: \"interact-outside\", focusable });\n            }\n          });\n        }\n      },\n      actions: {\n        restoreFocus(ctx2, evt) {\n          if (evt.focusable) return;\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            const finalEl = ctx2.finalFocusEl?.() ?? dom.getEditTriggerEl(ctx2);\n            finalEl?.focus({ preventScroll: true });\n          });\n        },\n        focusInput(ctx2) {\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            const inputEl = dom.getInputEl(ctx2);\n            if (!inputEl) return;\n            if (ctx2.selectOnFocus) {\n              inputEl.select();\n            } else {\n              inputEl.focus({ preventScroll: true });\n            }\n          });\n        },\n        invokeOnCancel(ctx2) {\n          ctx2.onValueRevert?.({ value: ctx2.previousValue });\n        },\n        invokeOnSubmit(ctx2) {\n          ctx2.onValueCommit?.({ value: ctx2.value });\n        },\n        invokeOnEdit(ctx2) {\n          ctx2.onEditChange?.({ edit: true });\n        },\n        invokeOnPreview(ctx2) {\n          ctx2.onEditChange?.({ edit: false });\n        },\n        toggleEditing(ctx2, evt, { send }) {\n          send({ type: ctx2.edit ? \"CONTROLLED.EDIT\" : \"CONTROLLED.PREVIEW\", previousEvent: evt });\n        },\n        syncInputValue(ctx2) {\n          sync.value(ctx2);\n        },\n        setValue(ctx2, evt) {\n          const value = ctx2.maxLength != null ? evt.value.slice(0, ctx2.maxLength) : evt.value;\n          set.value(ctx2, value);\n        },\n        setPreviousValue(ctx2) {\n          ctx2.previousValue = ctx2.value;\n        },\n        revertValue(ctx2) {\n          set.value(ctx2, ctx2.previousValue);\n        },\n        blurInputIfNeeded(ctx2) {\n          dom.getInputEl(ctx2)?.blur();\n        }\n      }\n    }\n  );\n}\nvar sync = {\n  value: (ctx) => {\n    const inputEl = dom.getInputEl(ctx);\n    dom.setValue(inputEl, ctx.value);\n  }\n};\nvar invoke = {\n  change(ctx) {\n    ctx.onValueChange?.({ value: ctx.value });\n    sync.value(ctx);\n  }\n};\nvar set = {\n  value(ctx, value) {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual)(ctx.value, value)) return;\n    ctx.value = value;\n    invoke.change(ctx);\n  }\n};\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_5__.createProps)()([\n  \"activationMode\",\n  \"autoResize\",\n  \"dir\",\n  \"disabled\",\n  \"finalFocusEl\",\n  \"form\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"invalid\",\n  \"maxLength\",\n  \"name\",\n  \"onEditChange\",\n  \"onFocusOutside\",\n  \"onInteractOutside\",\n  \"onPointerDownOutside\",\n  \"onValueChange\",\n  \"onValueCommit\",\n  \"onValueRevert\",\n  \"placeholder\",\n  \"readOnly\",\n  \"required\",\n  \"selectOnFocus\",\n  \"edit\",\n  \"edit.controlled\",\n  \"submitMode\",\n  \"translations\",\n  \"value\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/editable/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/element-rect/dist/index.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/@zag-js/element-rect/dist/index.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   trackElementRect: () => (/* binding */ trackElementRect)\n/* harmony export */ });\n// src/index.ts\nvar rafId;\nvar observedElements = /* @__PURE__ */ new Map();\nvar getRectFn = (el) => el.getBoundingClientRect();\nfunction trackElementRect(el, options) {\n  const { scope = \"rect\", getRect = getRectFn, onChange } = options;\n  const loop = getLoopFn({ scope, getRect });\n  const data = observedElements.get(el);\n  if (!data) {\n    observedElements.set(el, {\n      rect: {},\n      callbacks: [onChange]\n    });\n    if (observedElements.size === 1) {\n      rafId = requestAnimationFrame(loop);\n    }\n  } else {\n    data.callbacks.push(onChange);\n    onChange(getRect(el));\n  }\n  return function unobserve() {\n    const data2 = observedElements.get(el);\n    if (!data2) return;\n    const index = data2.callbacks.indexOf(onChange);\n    if (index > -1) {\n      data2.callbacks.splice(index, 1);\n    }\n    if (data2.callbacks.length === 0) {\n      observedElements.delete(el);\n      if (observedElements.size === 0) {\n        cancelAnimationFrame(rafId);\n      }\n    }\n  };\n}\nfunction getLoopFn(options) {\n  const { scope, getRect } = options;\n  const isEqual = getEqualityFn(scope);\n  return function loop() {\n    const changedRectsData = [];\n    observedElements.forEach((data, element) => {\n      const newRect = getRect(element);\n      if (!isEqual(data.rect, newRect)) {\n        data.rect = newRect;\n        changedRectsData.push(data);\n      }\n    });\n    changedRectsData.forEach((data) => {\n      data.callbacks.forEach((callback) => callback(data.rect));\n    });\n    rafId = requestAnimationFrame(loop);\n  };\n}\nvar isEqualSize = (a, b) => a.width === b.width && a.height === b.height;\nvar isEqualPosition = (a, b) => a.top === b.top && a.left === b.left;\nvar isEqualRect = (a, b) => isEqualSize(a, b) && isEqualPosition(a, b);\nfunction getEqualityFn(scope) {\n  if (scope === \"size\") return isEqualSize;\n  if (scope === \"position\") return isEqualPosition;\n  return isEqualRect;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9lbGVtZW50LXJlY3QvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLGdEQUFnRDtBQUMxRCwyQkFBMkIsZ0JBQWdCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLGlCQUFpQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU0QiIsInNvdXJjZXMiOlsiL1VzZXJzL3BoaWxpYWhhbW1vbmQvRGVza3RvcC9sZWFybmVyLWFwcC1zeXN0ZW0vbm9kZV9tb2R1bGVzL0B6YWctanMvZWxlbWVudC1yZWN0L2Rpc3QvaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9pbmRleC50c1xudmFyIHJhZklkO1xudmFyIG9ic2VydmVkRWxlbWVudHMgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpO1xudmFyIGdldFJlY3RGbiA9IChlbCkgPT4gZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5mdW5jdGlvbiB0cmFja0VsZW1lbnRSZWN0KGVsLCBvcHRpb25zKSB7XG4gIGNvbnN0IHsgc2NvcGUgPSBcInJlY3RcIiwgZ2V0UmVjdCA9IGdldFJlY3RGbiwgb25DaGFuZ2UgfSA9IG9wdGlvbnM7XG4gIGNvbnN0IGxvb3AgPSBnZXRMb29wRm4oeyBzY29wZSwgZ2V0UmVjdCB9KTtcbiAgY29uc3QgZGF0YSA9IG9ic2VydmVkRWxlbWVudHMuZ2V0KGVsKTtcbiAgaWYgKCFkYXRhKSB7XG4gICAgb2JzZXJ2ZWRFbGVtZW50cy5zZXQoZWwsIHtcbiAgICAgIHJlY3Q6IHt9LFxuICAgICAgY2FsbGJhY2tzOiBbb25DaGFuZ2VdXG4gICAgfSk7XG4gICAgaWYgKG9ic2VydmVkRWxlbWVudHMuc2l6ZSA9PT0gMSkge1xuICAgICAgcmFmSWQgPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUobG9vcCk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGRhdGEuY2FsbGJhY2tzLnB1c2gob25DaGFuZ2UpO1xuICAgIG9uQ2hhbmdlKGdldFJlY3QoZWwpKTtcbiAgfVxuICByZXR1cm4gZnVuY3Rpb24gdW5vYnNlcnZlKCkge1xuICAgIGNvbnN0IGRhdGEyID0gb2JzZXJ2ZWRFbGVtZW50cy5nZXQoZWwpO1xuICAgIGlmICghZGF0YTIpIHJldHVybjtcbiAgICBjb25zdCBpbmRleCA9IGRhdGEyLmNhbGxiYWNrcy5pbmRleE9mKG9uQ2hhbmdlKTtcbiAgICBpZiAoaW5kZXggPiAtMSkge1xuICAgICAgZGF0YTIuY2FsbGJhY2tzLnNwbGljZShpbmRleCwgMSk7XG4gICAgfVxuICAgIGlmIChkYXRhMi5jYWxsYmFja3MubGVuZ3RoID09PSAwKSB7XG4gICAgICBvYnNlcnZlZEVsZW1lbnRzLmRlbGV0ZShlbCk7XG4gICAgICBpZiAob2JzZXJ2ZWRFbGVtZW50cy5zaXplID09PSAwKSB7XG4gICAgICAgIGNhbmNlbEFuaW1hdGlvbkZyYW1lKHJhZklkKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG59XG5mdW5jdGlvbiBnZXRMb29wRm4ob3B0aW9ucykge1xuICBjb25zdCB7IHNjb3BlLCBnZXRSZWN0IH0gPSBvcHRpb25zO1xuICBjb25zdCBpc0VxdWFsID0gZ2V0RXF1YWxpdHlGbihzY29wZSk7XG4gIHJldHVybiBmdW5jdGlvbiBsb29wKCkge1xuICAgIGNvbnN0IGNoYW5nZWRSZWN0c0RhdGEgPSBbXTtcbiAgICBvYnNlcnZlZEVsZW1lbnRzLmZvckVhY2goKGRhdGEsIGVsZW1lbnQpID0+IHtcbiAgICAgIGNvbnN0IG5ld1JlY3QgPSBnZXRSZWN0KGVsZW1lbnQpO1xuICAgICAgaWYgKCFpc0VxdWFsKGRhdGEucmVjdCwgbmV3UmVjdCkpIHtcbiAgICAgICAgZGF0YS5yZWN0ID0gbmV3UmVjdDtcbiAgICAgICAgY2hhbmdlZFJlY3RzRGF0YS5wdXNoKGRhdGEpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIGNoYW5nZWRSZWN0c0RhdGEuZm9yRWFjaCgoZGF0YSkgPT4ge1xuICAgICAgZGF0YS5jYWxsYmFja3MuZm9yRWFjaCgoY2FsbGJhY2spID0+IGNhbGxiYWNrKGRhdGEucmVjdCkpO1xuICAgIH0pO1xuICAgIHJhZklkID0gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGxvb3ApO1xuICB9O1xufVxudmFyIGlzRXF1YWxTaXplID0gKGEsIGIpID0+IGEud2lkdGggPT09IGIud2lkdGggJiYgYS5oZWlnaHQgPT09IGIuaGVpZ2h0O1xudmFyIGlzRXF1YWxQb3NpdGlvbiA9IChhLCBiKSA9PiBhLnRvcCA9PT0gYi50b3AgJiYgYS5sZWZ0ID09PSBiLmxlZnQ7XG52YXIgaXNFcXVhbFJlY3QgPSAoYSwgYikgPT4gaXNFcXVhbFNpemUoYSwgYikgJiYgaXNFcXVhbFBvc2l0aW9uKGEsIGIpO1xuZnVuY3Rpb24gZ2V0RXF1YWxpdHlGbihzY29wZSkge1xuICBpZiAoc2NvcGUgPT09IFwic2l6ZVwiKSByZXR1cm4gaXNFcXVhbFNpemU7XG4gIGlmIChzY29wZSA9PT0gXCJwb3NpdGlvblwiKSByZXR1cm4gaXNFcXVhbFBvc2l0aW9uO1xuICByZXR1cm4gaXNFcXVhbFJlY3Q7XG59XG5cbmV4cG9ydCB7IHRyYWNrRWxlbWVudFJlY3QgfTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/element-rect/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/element-size/dist/index.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/@zag-js/element-size/dist/index.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   trackElementSize: () => (/* binding */ trackElementSize),\n/* harmony export */   trackElementsSize: () => (/* binding */ trackElementsSize)\n/* harmony export */ });\n// src/track-size.ts\nfunction trackElementSize(element, callback) {\n  if (!element) {\n    callback(void 0);\n    return;\n  }\n  callback({ width: element.offsetWidth, height: element.offsetHeight });\n  const win = element.ownerDocument.defaultView ?? window;\n  const observer = new win.ResizeObserver((entries) => {\n    if (!Array.isArray(entries) || !entries.length) return;\n    const [entry] = entries;\n    let width;\n    let height;\n    if (\"borderBoxSize\" in entry) {\n      const borderSizeEntry = entry[\"borderBoxSize\"];\n      const borderSize = Array.isArray(borderSizeEntry) ? borderSizeEntry[0] : borderSizeEntry;\n      width = borderSize[\"inlineSize\"];\n      height = borderSize[\"blockSize\"];\n    } else {\n      width = element.offsetWidth;\n      height = element.offsetHeight;\n    }\n    callback({ width, height });\n  });\n  observer.observe(element, { box: \"border-box\" });\n  return () => observer.unobserve(element);\n}\n\n// src/track-sizes.ts\nfunction trackElementsSize(options) {\n  const { getNodes, observeMutation = true, callback } = options;\n  const cleanups = [];\n  let firstNode = null;\n  function trigger() {\n    const elements = getNodes();\n    firstNode = elements[0];\n    const fns = elements.map(\n      (element, index) => trackElementSize(element, (size) => {\n        callback(size, index);\n      })\n    );\n    cleanups.push(...fns);\n  }\n  trigger();\n  if (observeMutation) {\n    const fn = trackMutation(firstNode, trigger);\n    cleanups.push(fn);\n  }\n  return () => {\n    cleanups.forEach((cleanup) => {\n      cleanup?.();\n    });\n  };\n}\nfunction trackMutation(el, cb) {\n  if (!el || !el.parentElement) return;\n  const win = el.ownerDocument?.defaultView ?? window;\n  const observer = new win.MutationObserver(() => {\n    cb();\n  });\n  observer.observe(el.parentElement, { childList: true });\n  return () => {\n    observer.disconnect();\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9lbGVtZW50LXNpemUvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLDBEQUEwRDtBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZUFBZTtBQUM5QixHQUFHO0FBQ0gsOEJBQThCLG1CQUFtQjtBQUNqRDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxVQUFVLDZDQUE2QztBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsdUNBQXVDLGlCQUFpQjtBQUN4RDtBQUNBO0FBQ0E7QUFDQTs7QUFFK0MiLCJzb3VyY2VzIjpbIi9Vc2Vycy9waGlsaWFoYW1tb25kL0Rlc2t0b3AvbGVhcm5lci1hcHAtc3lzdGVtL25vZGVfbW9kdWxlcy9AemFnLWpzL2VsZW1lbnQtc2l6ZS9kaXN0L2luZGV4Lm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvdHJhY2stc2l6ZS50c1xuZnVuY3Rpb24gdHJhY2tFbGVtZW50U2l6ZShlbGVtZW50LCBjYWxsYmFjaykge1xuICBpZiAoIWVsZW1lbnQpIHtcbiAgICBjYWxsYmFjayh2b2lkIDApO1xuICAgIHJldHVybjtcbiAgfVxuICBjYWxsYmFjayh7IHdpZHRoOiBlbGVtZW50Lm9mZnNldFdpZHRoLCBoZWlnaHQ6IGVsZW1lbnQub2Zmc2V0SGVpZ2h0IH0pO1xuICBjb25zdCB3aW4gPSBlbGVtZW50Lm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcgPz8gd2luZG93O1xuICBjb25zdCBvYnNlcnZlciA9IG5ldyB3aW4uUmVzaXplT2JzZXJ2ZXIoKGVudHJpZXMpID0+IHtcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkoZW50cmllcykgfHwgIWVudHJpZXMubGVuZ3RoKSByZXR1cm47XG4gICAgY29uc3QgW2VudHJ5XSA9IGVudHJpZXM7XG4gICAgbGV0IHdpZHRoO1xuICAgIGxldCBoZWlnaHQ7XG4gICAgaWYgKFwiYm9yZGVyQm94U2l6ZVwiIGluIGVudHJ5KSB7XG4gICAgICBjb25zdCBib3JkZXJTaXplRW50cnkgPSBlbnRyeVtcImJvcmRlckJveFNpemVcIl07XG4gICAgICBjb25zdCBib3JkZXJTaXplID0gQXJyYXkuaXNBcnJheShib3JkZXJTaXplRW50cnkpID8gYm9yZGVyU2l6ZUVudHJ5WzBdIDogYm9yZGVyU2l6ZUVudHJ5O1xuICAgICAgd2lkdGggPSBib3JkZXJTaXplW1wiaW5saW5lU2l6ZVwiXTtcbiAgICAgIGhlaWdodCA9IGJvcmRlclNpemVbXCJibG9ja1NpemVcIl07XG4gICAgfSBlbHNlIHtcbiAgICAgIHdpZHRoID0gZWxlbWVudC5vZmZzZXRXaWR0aDtcbiAgICAgIGhlaWdodCA9IGVsZW1lbnQub2Zmc2V0SGVpZ2h0O1xuICAgIH1cbiAgICBjYWxsYmFjayh7IHdpZHRoLCBoZWlnaHQgfSk7XG4gIH0pO1xuICBvYnNlcnZlci5vYnNlcnZlKGVsZW1lbnQsIHsgYm94OiBcImJvcmRlci1ib3hcIiB9KTtcbiAgcmV0dXJuICgpID0+IG9ic2VydmVyLnVub2JzZXJ2ZShlbGVtZW50KTtcbn1cblxuLy8gc3JjL3RyYWNrLXNpemVzLnRzXG5mdW5jdGlvbiB0cmFja0VsZW1lbnRzU2l6ZShvcHRpb25zKSB7XG4gIGNvbnN0IHsgZ2V0Tm9kZXMsIG9ic2VydmVNdXRhdGlvbiA9IHRydWUsIGNhbGxiYWNrIH0gPSBvcHRpb25zO1xuICBjb25zdCBjbGVhbnVwcyA9IFtdO1xuICBsZXQgZmlyc3ROb2RlID0gbnVsbDtcbiAgZnVuY3Rpb24gdHJpZ2dlcigpIHtcbiAgICBjb25zdCBlbGVtZW50cyA9IGdldE5vZGVzKCk7XG4gICAgZmlyc3ROb2RlID0gZWxlbWVudHNbMF07XG4gICAgY29uc3QgZm5zID0gZWxlbWVudHMubWFwKFxuICAgICAgKGVsZW1lbnQsIGluZGV4KSA9PiB0cmFja0VsZW1lbnRTaXplKGVsZW1lbnQsIChzaXplKSA9PiB7XG4gICAgICAgIGNhbGxiYWNrKHNpemUsIGluZGV4KTtcbiAgICAgIH0pXG4gICAgKTtcbiAgICBjbGVhbnVwcy5wdXNoKC4uLmZucyk7XG4gIH1cbiAgdHJpZ2dlcigpO1xuICBpZiAob2JzZXJ2ZU11dGF0aW9uKSB7XG4gICAgY29uc3QgZm4gPSB0cmFja011dGF0aW9uKGZpcnN0Tm9kZSwgdHJpZ2dlcik7XG4gICAgY2xlYW51cHMucHVzaChmbik7XG4gIH1cbiAgcmV0dXJuICgpID0+IHtcbiAgICBjbGVhbnVwcy5mb3JFYWNoKChjbGVhbnVwKSA9PiB7XG4gICAgICBjbGVhbnVwPy4oKTtcbiAgICB9KTtcbiAgfTtcbn1cbmZ1bmN0aW9uIHRyYWNrTXV0YXRpb24oZWwsIGNiKSB7XG4gIGlmICghZWwgfHwgIWVsLnBhcmVudEVsZW1lbnQpIHJldHVybjtcbiAgY29uc3Qgd2luID0gZWwub3duZXJEb2N1bWVudD8uZGVmYXVsdFZpZXcgPz8gd2luZG93O1xuICBjb25zdCBvYnNlcnZlciA9IG5ldyB3aW4uTXV0YXRpb25PYnNlcnZlcigoKSA9PiB7XG4gICAgY2IoKTtcbiAgfSk7XG4gIG9ic2VydmVyLm9ic2VydmUoZWwucGFyZW50RWxlbWVudCwgeyBjaGlsZExpc3Q6IHRydWUgfSk7XG4gIHJldHVybiAoKSA9PiB7XG4gICAgb2JzZXJ2ZXIuZGlzY29ubmVjdCgpO1xuICB9O1xufVxuXG5leHBvcnQgeyB0cmFja0VsZW1lbnRTaXplLCB0cmFja0VsZW1lbnRzU2l6ZSB9O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/element-size/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/file-upload/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@zag-js/file-upload/dist/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   itemProps: () => (/* binding */ itemProps),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitItemProps: () => (/* binding */ splitItemProps),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_i18n_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/i18n-utils */ \"(ssr)/./node_modules/@zag-js/i18n-utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n/* harmony import */ var _zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/file-utils */ \"(ssr)/./node_modules/@zag-js/file-utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/store/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n\n\n\n\n// src/file-upload.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"file-upload\").parts(\n  \"root\",\n  \"dropzone\",\n  \"item\",\n  \"itemDeleteTrigger\",\n  \"itemGroup\",\n  \"itemName\",\n  \"itemPreview\",\n  \"itemPreviewImage\",\n  \"itemSizeText\",\n  \"label\",\n  \"trigger\",\n  \"clearTrigger\"\n);\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getRootId: (ctx) => ctx.ids?.root ?? `file:${ctx.id}`,\n  getDropzoneId: (ctx) => ctx.ids?.dropzone ?? `file:${ctx.id}:dropzone`,\n  getHiddenInputId: (ctx) => ctx.ids?.hiddenInput ?? `file:${ctx.id}:input`,\n  getTriggerId: (ctx) => ctx.ids?.trigger ?? `file:${ctx.id}:trigger`,\n  getLabelId: (ctx) => ctx.ids?.label ?? `file:${ctx.id}:label`,\n  getItemId: (ctx, id) => ctx.ids?.item?.(id) ?? `file:${ctx.id}:item:${id}`,\n  getItemNameId: (ctx, id) => ctx.ids?.itemName?.(id) ?? `file:${ctx.id}:item-name:${id}`,\n  getItemSizeTextId: (ctx, id) => ctx.ids?.itemSizeText?.(id) ?? `file:${ctx.id}:item-size:${id}`,\n  getItemPreviewId: (ctx, id) => ctx.ids?.itemPreview?.(id) ?? `file:${ctx.id}:item-preview:${id}`,\n  getRootEl: (ctx) => dom.getById(ctx, dom.getRootId(ctx)),\n  getHiddenInputEl: (ctx) => dom.getById(ctx, dom.getHiddenInputId(ctx)),\n  getDropzoneEl: (ctx) => dom.getById(ctx, dom.getDropzoneId(ctx))\n});\nfunction isEventWithFiles(event) {\n  const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event);\n  if (!event.dataTransfer) return !!target && \"files\" in target;\n  return event.dataTransfer.types.some((type) => {\n    return type === \"Files\" || type === \"application/x-moz-file\";\n  });\n}\nfunction isFilesWithinRange(ctx, incomingCount) {\n  if (!ctx.multiple && incomingCount > 1) return false;\n  if (!ctx.multiple && incomingCount + ctx.acceptedFiles.length === 2) return true;\n  if (incomingCount + ctx.acceptedFiles.length > ctx.maxFiles) return false;\n  return true;\n}\nfunction getFilesFromEvent(ctx, files) {\n  const acceptedFiles = [];\n  const rejectedFiles = [];\n  files.forEach((file) => {\n    const [accepted, acceptError] = (0,_zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__.isValidFileType)(file, ctx.acceptAttr);\n    const [sizeMatch, sizeError] = (0,_zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__.isValidFileSize)(file, ctx.minFileSize, ctx.maxFileSize);\n    const validateErrors = ctx.validate?.(file, {\n      acceptedFiles: ctx.acceptedFiles,\n      rejectedFiles: ctx.rejectedFiles\n    });\n    const valid = validateErrors ? validateErrors.length === 0 : true;\n    if (accepted && sizeMatch && valid) {\n      acceptedFiles.push(file);\n    } else {\n      const errors = [acceptError, sizeError];\n      if (!valid) errors.push(...validateErrors ?? []);\n      rejectedFiles.push({ file, errors: errors.filter(Boolean) });\n    }\n  });\n  if (!isFilesWithinRange(ctx, acceptedFiles.length)) {\n    acceptedFiles.forEach((file) => {\n      rejectedFiles.push({ file, errors: [\"TOO_MANY_FILES\"] });\n    });\n    acceptedFiles.splice(0);\n  }\n  return {\n    acceptedFiles,\n    rejectedFiles\n  };\n}\n\n// src/file-upload.connect.ts\nfunction connect(state, send, normalize) {\n  const disabled = state.context.disabled;\n  const allowDrop = state.context.allowDrop;\n  const translations = state.context.translations;\n  const dragging = state.matches(\"dragging\");\n  const focused = state.matches(\"focused\") && !disabled;\n  return {\n    dragging,\n    focused,\n    disabled: !!disabled,\n    openFilePicker() {\n      if (disabled) return;\n      send(\"OPEN\");\n    },\n    deleteFile(file) {\n      send({ type: \"FILE.DELETE\", file });\n    },\n    acceptedFiles: state.context.acceptedFiles,\n    rejectedFiles: state.context.rejectedFiles,\n    setFiles(files) {\n      const count = files.length;\n      send({ type: \"FILES.SET\", files, count });\n    },\n    clearRejectedFiles() {\n      send({ type: \"REJECTED_FILES.CLEAR\" });\n    },\n    clearFiles() {\n      send({ type: \"FILES.CLEAR\" });\n    },\n    getFileSize(file) {\n      return (0,_zag_js_i18n_utils__WEBPACK_IMPORTED_MODULE_3__.formatBytes)(file.size, state.context.locale);\n    },\n    createFileUrl(file, cb) {\n      const win = dom.getWin(state.context);\n      const url = win.URL.createObjectURL(file);\n      cb(url);\n      return () => win.URL.revokeObjectURL(url);\n    },\n    setClipboardFiles(dt) {\n      if (disabled) return false;\n      const items = Array.from(dt?.items ?? []);\n      const files = items.reduce((acc, item) => {\n        if (item.kind !== \"file\") return acc;\n        const file = item.getAsFile();\n        if (!file) return acc;\n        return [...acc, file];\n      }, []);\n      if (!files.length) return false;\n      send({ type: \"FILES.SET\", files });\n      return true;\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: state.context.dir,\n        id: dom.getRootId(state.context),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(dragging)\n      });\n    },\n    getDropzoneProps(props2 = {}) {\n      return normalize.element({\n        ...parts.dropzone.attrs,\n        dir: state.context.dir,\n        id: dom.getDropzoneId(state.context),\n        tabIndex: disabled || props2.disableClick ? void 0 : 0,\n        role: props2.disableClick ? \"application\" : \"button\",\n        \"aria-label\": translations.dropzone,\n        \"aria-disabled\": disabled,\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.invalid),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(dragging),\n        onKeyDown(event) {\n          if (disabled) return;\n          if (event.defaultPrevented) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isSelfTarget)(event)) return;\n          if (props2.disableClick) return;\n          if (event.key !== \"Enter\" && event.key !== \" \") return;\n          send({ type: \"DROPZONE.CLICK\", src: \"keydown\" });\n        },\n        onClick(event) {\n          if (disabled) return;\n          if (event.defaultPrevented) return;\n          if (props2.disableClick) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isSelfTarget)(event)) return;\n          if (event.currentTarget.localName === \"label\") {\n            event.preventDefault();\n          }\n          send(\"DROPZONE.CLICK\");\n        },\n        onDragOver(event) {\n          if (disabled) return;\n          if (!allowDrop) return;\n          event.preventDefault();\n          event.stopPropagation();\n          try {\n            event.dataTransfer.dropEffect = \"copy\";\n          } catch {\n          }\n          const hasFiles = isEventWithFiles(event);\n          if (!hasFiles) return;\n          const count = event.dataTransfer.items.length;\n          send({ type: \"DROPZONE.DRAG_OVER\", count });\n        },\n        onDragLeave(event) {\n          if (disabled) return;\n          if (!allowDrop) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.contains)(event.currentTarget, event.relatedTarget)) return;\n          send({ type: \"DROPZONE.DRAG_LEAVE\" });\n        },\n        onDrop(event) {\n          if (disabled) return;\n          if (allowDrop) {\n            event.preventDefault();\n            event.stopPropagation();\n          }\n          const hasFiles = isEventWithFiles(event);\n          if (disabled || !hasFiles) return;\n          send({ type: \"DROPZONE.DROP\", files: Array.from(event.dataTransfer.files) });\n        },\n        onFocus() {\n          if (disabled) return;\n          send(\"DROPZONE.FOCUS\");\n        },\n        onBlur() {\n          if (disabled) return;\n          send(\"DROPZONE.BLUR\");\n        }\n      });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        dir: state.context.dir,\n        id: dom.getTriggerId(state.context),\n        disabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.invalid),\n        type: \"button\",\n        onClick(event) {\n          if (disabled) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.contains)(dom.getDropzoneEl(state.context), event.currentTarget)) {\n            event.stopPropagation();\n          }\n          send(\"OPEN\");\n        }\n      });\n    },\n    getHiddenInputProps() {\n      return normalize.input({\n        id: dom.getHiddenInputId(state.context),\n        tabIndex: -1,\n        disabled,\n        type: \"file\",\n        required: state.context.required,\n        capture: state.context.capture,\n        name: state.context.name,\n        accept: state.context.acceptAttr,\n        webkitdirectory: state.context.directory ? \"\" : void 0,\n        multiple: state.context.multiple || state.context.maxFiles > 1,\n        onClick(event) {\n          event.stopPropagation();\n          event.currentTarget.value = \"\";\n        },\n        onInput(event) {\n          if (disabled) return;\n          const { files } = event.currentTarget;\n          send({ type: \"FILES.SET\", files: files ? Array.from(files) : [] });\n        },\n        style: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.visuallyHiddenStyle\n      });\n    },\n    getItemGroupProps() {\n      return normalize.element({\n        ...parts.itemGroup.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    },\n    getItemProps(props2) {\n      const { file } = props2;\n      return normalize.element({\n        ...parts.item.attrs,\n        dir: state.context.dir,\n        id: dom.getItemId(state.context, file.name),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    },\n    getItemNameProps(props2) {\n      const { file } = props2;\n      return normalize.element({\n        ...parts.itemName.attrs,\n        dir: state.context.dir,\n        id: dom.getItemNameId(state.context, file.name),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    },\n    getItemSizeTextProps(props2) {\n      const { file } = props2;\n      return normalize.element({\n        ...parts.itemSizeText.attrs,\n        dir: state.context.dir,\n        id: dom.getItemSizeTextId(state.context, file.name),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    },\n    getItemPreviewProps(props2) {\n      const { file } = props2;\n      return normalize.element({\n        ...parts.itemPreview.attrs,\n        dir: state.context.dir,\n        id: dom.getItemPreviewId(state.context, file.name),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    },\n    getItemPreviewImageProps(props2) {\n      const { file, url } = props2;\n      const isImage = file.type.startsWith(\"image/\");\n      if (!isImage) {\n        throw new Error(\"Preview Image is only supported for image files\");\n      }\n      return normalize.img({\n        ...parts.itemPreviewImage.attrs,\n        alt: translations.itemPreview?.(file),\n        src: url,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    },\n    getItemDeleteTriggerProps(props2) {\n      const { file } = props2;\n      return normalize.button({\n        ...parts.itemDeleteTrigger.attrs,\n        dir: state.context.dir,\n        type: \"button\",\n        disabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"aria-label\": translations.deleteFile?.(file),\n        onClick() {\n          if (disabled) return;\n          send({ type: \"FILE.DELETE\", file });\n        }\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        dir: state.context.dir,\n        id: dom.getLabelId(state.context),\n        htmlFor: dom.getHiddenInputId(state.context),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled)\n      });\n    },\n    getClearTriggerProps() {\n      return normalize.button({\n        ...parts.clearTrigger.attrs,\n        dir: state.context.dir,\n        type: \"button\",\n        disabled,\n        hidden: state.context.acceptedFiles.length === 0,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          send({ type: \"FILES.CLEAR\" });\n        }\n      });\n    }\n  };\n}\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_5__.createMachine)(\n    {\n      id: \"fileupload\",\n      initial: \"idle\",\n      context: {\n        minFileSize: 0,\n        maxFileSize: Number.POSITIVE_INFINITY,\n        maxFiles: 1,\n        allowDrop: true,\n        accept: ctx.accept,\n        preventDocumentDrop: true,\n        ...ctx,\n        acceptedFiles: (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_6__.ref)([]),\n        rejectedFiles: (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_6__.ref)([]),\n        translations: {\n          dropzone: \"dropzone\",\n          itemPreview: (file) => `preview of ${file.name}`,\n          deleteFile: (file) => `delete file ${file.name}`,\n          ...ctx.translations\n        }\n      },\n      computed: {\n        acceptAttr: (ctx2) => (0,_zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__.getAcceptAttrString)(ctx2.accept),\n        multiple: (ctx2) => ctx2.maxFiles > 1\n      },\n      watch: {\n        acceptedFiles: [\"syncInputElement\"]\n      },\n      on: {\n        \"FILES.SET\": {\n          actions: [\"setFilesFromEvent\"]\n        },\n        \"FILE.DELETE\": {\n          actions: [\"removeFile\"]\n        },\n        \"FILES.CLEAR\": {\n          actions: [\"clearFiles\"]\n        },\n        \"REJECTED_FILES.CLEAR\": {\n          actions: [\"clearRejectedFiles\"]\n        }\n      },\n      activities: [\"preventDocumentDrop\"],\n      states: {\n        idle: {\n          on: {\n            OPEN: {\n              actions: [\"openFilePicker\"]\n            },\n            \"DROPZONE.CLICK\": {\n              actions: [\"openFilePicker\"]\n            },\n            \"DROPZONE.FOCUS\": \"focused\",\n            \"DROPZONE.DRAG_OVER\": \"dragging\"\n          }\n        },\n        focused: {\n          on: {\n            \"DROPZONE.BLUR\": \"idle\",\n            OPEN: {\n              actions: [\"openFilePicker\"]\n            },\n            \"DROPZONE.CLICK\": {\n              actions: [\"openFilePicker\"]\n            },\n            \"DROPZONE.DRAG_OVER\": \"dragging\"\n          }\n        },\n        dragging: {\n          on: {\n            \"DROPZONE.DROP\": {\n              target: \"idle\",\n              actions: [\"setFilesFromEvent\"]\n            },\n            \"DROPZONE.DRAG_LEAVE\": \"idle\"\n          }\n        }\n      }\n    },\n    {\n      activities: {\n        preventDocumentDrop(ctx2) {\n          if (!ctx2.preventDocumentDrop) return;\n          if (!ctx2.allowDrop) return;\n          if (ctx2.disabled) return;\n          const doc = dom.getDoc(ctx2);\n          const onDragOver = (event) => {\n            event?.preventDefault();\n          };\n          const onDrop = (event) => {\n            if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.contains)(dom.getRootEl(ctx2), (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event))) return;\n            event.preventDefault();\n          };\n          return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.callAll)((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(doc, \"dragover\", onDragOver, false), (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(doc, \"drop\", onDrop, false));\n        }\n      },\n      actions: {\n        syncInputElement(ctx2) {\n          queueMicrotask(() => {\n            const inputEl = dom.getHiddenInputEl(ctx2);\n            if (!inputEl) return;\n            const win = dom.getWin(ctx2);\n            const dataTransfer = new win.DataTransfer();\n            ctx2.acceptedFiles.forEach((v) => {\n              dataTransfer.items.add(v);\n            });\n            inputEl.files = dataTransfer.files;\n            inputEl.dispatchEvent(new win.Event(\"change\", { bubbles: true }));\n          });\n        },\n        openFilePicker(ctx2) {\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            dom.getHiddenInputEl(ctx2)?.click();\n          });\n        },\n        setFilesFromEvent(ctx2, evt) {\n          const result = getFilesFromEvent(ctx2, evt.files);\n          const { acceptedFiles, rejectedFiles } = result;\n          if (ctx2.multiple) {\n            const files = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_6__.ref)([...ctx2.acceptedFiles, ...acceptedFiles]);\n            set.files(ctx2, files, rejectedFiles);\n            return;\n          }\n          if (acceptedFiles.length) {\n            const files = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_6__.ref)([acceptedFiles[0]]);\n            set.files(ctx2, files, rejectedFiles);\n          } else if (rejectedFiles.length) {\n            set.files(ctx2, ctx2.acceptedFiles, rejectedFiles);\n          }\n        },\n        removeFile(ctx2, evt) {\n          const files = Array.from(ctx2.acceptedFiles.filter((file) => file !== evt.file));\n          const rejectedFiles = Array.from(ctx2.rejectedFiles.filter((item) => item.file !== evt.file));\n          ctx2.acceptedFiles = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_6__.ref)(files);\n          ctx2.rejectedFiles = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_6__.ref)(rejectedFiles);\n          invoke.change(ctx2);\n        },\n        clearRejectedFiles(ctx2) {\n          ctx2.rejectedFiles = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_6__.ref)([]);\n          invoke.change(ctx2);\n        },\n        clearFiles(ctx2) {\n          ctx2.acceptedFiles = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_6__.ref)([]);\n          ctx2.rejectedFiles = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_6__.ref)([]);\n          invoke.change(ctx2);\n        }\n      },\n      compareFns: {\n        acceptedFiles: (a, b) => a.length === b.length && a.every((file, i) => (0,_zag_js_file_utils__WEBPACK_IMPORTED_MODULE_2__.isFileEqual)(file, b[i]))\n      }\n    }\n  );\n}\nvar invoke = {\n  change: (ctx) => {\n    ctx.onFileChange?.({\n      acceptedFiles: ctx.acceptedFiles,\n      rejectedFiles: ctx.rejectedFiles\n    });\n  },\n  accept: (ctx) => {\n    ctx.onFileAccept?.({ files: ctx.acceptedFiles });\n  },\n  reject: (ctx) => {\n    ctx.onFileReject?.({ files: ctx.rejectedFiles });\n  }\n};\nvar set = {\n  files: (ctx, acceptedFiles, rejectedFiles) => {\n    ctx.acceptedFiles = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_6__.ref)(acceptedFiles);\n    invoke.accept(ctx);\n    if (rejectedFiles) {\n      ctx.rejectedFiles = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_6__.ref)(rejectedFiles);\n      invoke.reject(ctx);\n    }\n    invoke.change(ctx);\n  }\n};\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\n  \"accept\",\n  \"allowDrop\",\n  \"capture\",\n  \"dir\",\n  \"directory\",\n  \"disabled\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"locale\",\n  \"maxFiles\",\n  \"maxFileSize\",\n  \"minFileSize\",\n  \"name\",\n  \"invalid\",\n  \"onFileAccept\",\n  \"onFileReject\",\n  \"onFileChange\",\n  \"preventDocumentDrop\",\n  \"required\",\n  \"translations\",\n  \"validate\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(props);\nvar itemProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\"file\"]);\nvar splitItemProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(itemProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/file-upload/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/file-utils/dist/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@zag-js/file-utils/dist/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dataURItoBlob: () => (/* binding */ dataURItoBlob),\n/* harmony export */   downloadFile: () => (/* binding */ downloadFile),\n/* harmony export */   getAcceptAttrString: () => (/* binding */ getAcceptAttrString),\n/* harmony export */   getFileDataUrl: () => (/* binding */ getFileDataUrl),\n/* harmony export */   getTotalFileSize: () => (/* binding */ getTotalFileSize),\n/* harmony export */   isFileEqual: () => (/* binding */ isFileEqual),\n/* harmony export */   isMSEdge: () => (/* binding */ isMSEdge),\n/* harmony export */   isValidFileSize: () => (/* binding */ isValidFileSize),\n/* harmony export */   isValidFileType: () => (/* binding */ isValidFileType)\n/* harmony export */ });\n// src/data-url-to-blob.ts\nfunction dataURItoBlob(uri) {\n  const binary = atob(uri.split(\",\")[1]);\n  const mimeString = uri.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n  const buffer = new ArrayBuffer(binary.length);\n  const intArray = new Uint8Array(buffer);\n  for (let i = 0; i < binary.length; i++) {\n    intArray[i] = binary.charCodeAt(i);\n  }\n  return new Blob([buffer], { type: mimeString });\n}\n\n// src/download-file.ts\nfunction isMSEdge(win) {\n  return Boolean(win.navigator && win.navigator.msSaveOrOpenBlob);\n}\nfunction downloadFile(options) {\n  const { file, win, type, name } = options;\n  const doc = win.document;\n  const obj = typeof file === \"string\" ? new Blob([file], { type }) : file;\n  const fileName = typeof file === \"string\" ? name : file instanceof File ? file.name : void 0;\n  if (isMSEdge(win)) {\n    win.navigator.msSaveOrOpenBlob(obj, fileName || \"file-download\");\n    return;\n  }\n  const url = win.URL.createObjectURL(obj);\n  const anchor = doc.createElement(\"a\");\n  anchor.style.display = \"none\";\n  anchor.href = url;\n  anchor.rel = \"noopener\";\n  anchor.download = fileName || \"file-download\";\n  doc.documentElement.appendChild(anchor);\n  anchor.click();\n  setTimeout(() => {\n    win.URL.revokeObjectURL(url);\n    anchor.remove();\n  }, 0);\n}\n\n// src/get-accept-attr.ts\nfunction isMIMEType(v) {\n  return v === \"audio/*\" || v === \"video/*\" || v === \"image/*\" || v === \"text/*\" || /\\w+\\/[-+.\\w]+/g.test(v);\n}\nfunction isExt(v) {\n  return /^.*\\.[\\w]+$/.test(v);\n}\nvar isValidMIME = (v) => isMIMEType(v) || isExt(v);\nfunction getAcceptAttrString(accept) {\n  if (!accept) return;\n  if (typeof accept === \"string\") {\n    return accept;\n  }\n  if (Array.isArray(accept)) {\n    return accept.filter(isValidMIME).join(\",\");\n  }\n  return Object.entries(accept).reduce((a, [mimeType, ext]) => [...a, mimeType, ...ext], []).filter(isValidMIME).join(\",\");\n}\n\n// src/get-file-data-url.ts\nvar getFileDataUrl = async (file) => {\n  const reader = new FileReader();\n  return new Promise((resolve, reject) => {\n    reader.onerror = () => {\n      reader.abort();\n      reject(new Error(\"There was an error reading a file\"));\n    };\n    reader.onloadend = () => {\n      const { result } = reader;\n      if (result instanceof ArrayBuffer) {\n        reject(new Error(\"Expected DataURL as string from Blob/File, got ArrayBuffer\"));\n      } else {\n        resolve(result || void 0);\n      }\n    };\n    reader.readAsDataURL(file);\n  });\n};\n\n// src/get-total-file-size.ts\nvar getTotalFileSize = (files) => {\n  return files.reduce((acc, file) => acc + file.size, 0);\n};\n\n// src/is-file-equal.ts\nvar isFileEqual = (file1, file2) => {\n  return file1.name === file2.name && file1.size === file2.size && file1.type === file2.type;\n};\n\n// src/is-valid-file-size.ts\nvar isDefined = (v) => v !== void 0 && v !== null;\nfunction isValidFileSize(file, minSize, maxSize) {\n  if (isDefined(file.size)) {\n    if (isDefined(minSize) && isDefined(maxSize)) {\n      if (file.size > maxSize) return [false, \"FILE_TOO_LARGE\"];\n      if (file.size < minSize) return [false, \"FILE_TOO_SMALL\"];\n    } else if (isDefined(minSize) && file.size < minSize) {\n      return [false, \"FILE_TOO_SMALL\"];\n    } else if (isDefined(maxSize) && file.size > maxSize) {\n      return [false, \"FILE_TOO_LARGE\"];\n    }\n  }\n  return [true, null];\n}\n\n// src/is-valid-file-type.ts\nfunction isFileAccepted(file, accept) {\n  if (file && accept) {\n    const types = Array.isArray(accept) ? accept : accept.split(\",\");\n    const fileName = file.name || \"\";\n    const mimeType = (file.type || \"\").toLowerCase();\n    const baseMimeType = mimeType.replace(/\\/.*$/, \"\");\n    return types.some((type) => {\n      const validType = type.trim().toLowerCase();\n      if (validType.charAt(0) === \".\") {\n        return fileName.toLowerCase().endsWith(validType);\n      }\n      if (validType.endsWith(\"/*\")) {\n        return baseMimeType === validType.replace(/\\/.*$/, \"\");\n      }\n      return mimeType === validType;\n    });\n  }\n  return true;\n}\nfunction isValidFileType(file, accept) {\n  const isAcceptable = file.type === \"application/x-moz-file\" || isFileAccepted(file, accept);\n  return [isAcceptable, isAcceptable ? null : \"FILE_INVALID_TYPE\"];\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9maWxlLXV0aWxzL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBLDZEQUE2RDtBQUM3RDtBQUNBO0FBQ0Esa0JBQWtCLG1CQUFtQjtBQUNyQztBQUNBO0FBQ0EsOEJBQThCLGtCQUFrQjtBQUNoRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSx3QkFBd0I7QUFDbEM7QUFDQSw0REFBNEQsTUFBTTtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxTQUFTO0FBQ3ZCO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFdUoiLCJzb3VyY2VzIjpbIi9Vc2Vycy9waGlsaWFoYW1tb25kL0Rlc2t0b3AvbGVhcm5lci1hcHAtc3lzdGVtL25vZGVfbW9kdWxlcy9AemFnLWpzL2ZpbGUtdXRpbHMvZGlzdC9pbmRleC5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2RhdGEtdXJsLXRvLWJsb2IudHNcbmZ1bmN0aW9uIGRhdGFVUkl0b0Jsb2IodXJpKSB7XG4gIGNvbnN0IGJpbmFyeSA9IGF0b2IodXJpLnNwbGl0KFwiLFwiKVsxXSk7XG4gIGNvbnN0IG1pbWVTdHJpbmcgPSB1cmkuc3BsaXQoXCIsXCIpWzBdLnNwbGl0KFwiOlwiKVsxXS5zcGxpdChcIjtcIilbMF07XG4gIGNvbnN0IGJ1ZmZlciA9IG5ldyBBcnJheUJ1ZmZlcihiaW5hcnkubGVuZ3RoKTtcbiAgY29uc3QgaW50QXJyYXkgPSBuZXcgVWludDhBcnJheShidWZmZXIpO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGJpbmFyeS5sZW5ndGg7IGkrKykge1xuICAgIGludEFycmF5W2ldID0gYmluYXJ5LmNoYXJDb2RlQXQoaSk7XG4gIH1cbiAgcmV0dXJuIG5ldyBCbG9iKFtidWZmZXJdLCB7IHR5cGU6IG1pbWVTdHJpbmcgfSk7XG59XG5cbi8vIHNyYy9kb3dubG9hZC1maWxlLnRzXG5mdW5jdGlvbiBpc01TRWRnZSh3aW4pIHtcbiAgcmV0dXJuIEJvb2xlYW4od2luLm5hdmlnYXRvciAmJiB3aW4ubmF2aWdhdG9yLm1zU2F2ZU9yT3BlbkJsb2IpO1xufVxuZnVuY3Rpb24gZG93bmxvYWRGaWxlKG9wdGlvbnMpIHtcbiAgY29uc3QgeyBmaWxlLCB3aW4sIHR5cGUsIG5hbWUgfSA9IG9wdGlvbnM7XG4gIGNvbnN0IGRvYyA9IHdpbi5kb2N1bWVudDtcbiAgY29uc3Qgb2JqID0gdHlwZW9mIGZpbGUgPT09IFwic3RyaW5nXCIgPyBuZXcgQmxvYihbZmlsZV0sIHsgdHlwZSB9KSA6IGZpbGU7XG4gIGNvbnN0IGZpbGVOYW1lID0gdHlwZW9mIGZpbGUgPT09IFwic3RyaW5nXCIgPyBuYW1lIDogZmlsZSBpbnN0YW5jZW9mIEZpbGUgPyBmaWxlLm5hbWUgOiB2b2lkIDA7XG4gIGlmIChpc01TRWRnZSh3aW4pKSB7XG4gICAgd2luLm5hdmlnYXRvci5tc1NhdmVPck9wZW5CbG9iKG9iaiwgZmlsZU5hbWUgfHwgXCJmaWxlLWRvd25sb2FkXCIpO1xuICAgIHJldHVybjtcbiAgfVxuICBjb25zdCB1cmwgPSB3aW4uVVJMLmNyZWF0ZU9iamVjdFVSTChvYmopO1xuICBjb25zdCBhbmNob3IgPSBkb2MuY3JlYXRlRWxlbWVudChcImFcIik7XG4gIGFuY2hvci5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gIGFuY2hvci5ocmVmID0gdXJsO1xuICBhbmNob3IucmVsID0gXCJub29wZW5lclwiO1xuICBhbmNob3IuZG93bmxvYWQgPSBmaWxlTmFtZSB8fCBcImZpbGUtZG93bmxvYWRcIjtcbiAgZG9jLmRvY3VtZW50RWxlbWVudC5hcHBlbmRDaGlsZChhbmNob3IpO1xuICBhbmNob3IuY2xpY2soKTtcbiAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgd2luLlVSTC5yZXZva2VPYmplY3RVUkwodXJsKTtcbiAgICBhbmNob3IucmVtb3ZlKCk7XG4gIH0sIDApO1xufVxuXG4vLyBzcmMvZ2V0LWFjY2VwdC1hdHRyLnRzXG5mdW5jdGlvbiBpc01JTUVUeXBlKHYpIHtcbiAgcmV0dXJuIHYgPT09IFwiYXVkaW8vKlwiIHx8IHYgPT09IFwidmlkZW8vKlwiIHx8IHYgPT09IFwiaW1hZ2UvKlwiIHx8IHYgPT09IFwidGV4dC8qXCIgfHwgL1xcdytcXC9bLSsuXFx3XSsvZy50ZXN0KHYpO1xufVxuZnVuY3Rpb24gaXNFeHQodikge1xuICByZXR1cm4gL14uKlxcLltcXHddKyQvLnRlc3Qodik7XG59XG52YXIgaXNWYWxpZE1JTUUgPSAodikgPT4gaXNNSU1FVHlwZSh2KSB8fCBpc0V4dCh2KTtcbmZ1bmN0aW9uIGdldEFjY2VwdEF0dHJTdHJpbmcoYWNjZXB0KSB7XG4gIGlmICghYWNjZXB0KSByZXR1cm47XG4gIGlmICh0eXBlb2YgYWNjZXB0ID09PSBcInN0cmluZ1wiKSB7XG4gICAgcmV0dXJuIGFjY2VwdDtcbiAgfVxuICBpZiAoQXJyYXkuaXNBcnJheShhY2NlcHQpKSB7XG4gICAgcmV0dXJuIGFjY2VwdC5maWx0ZXIoaXNWYWxpZE1JTUUpLmpvaW4oXCIsXCIpO1xuICB9XG4gIHJldHVybiBPYmplY3QuZW50cmllcyhhY2NlcHQpLnJlZHVjZSgoYSwgW21pbWVUeXBlLCBleHRdKSA9PiBbLi4uYSwgbWltZVR5cGUsIC4uLmV4dF0sIFtdKS5maWx0ZXIoaXNWYWxpZE1JTUUpLmpvaW4oXCIsXCIpO1xufVxuXG4vLyBzcmMvZ2V0LWZpbGUtZGF0YS11cmwudHNcbnZhciBnZXRGaWxlRGF0YVVybCA9IGFzeW5jIChmaWxlKSA9PiB7XG4gIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgcmVhZGVyLm9uZXJyb3IgPSAoKSA9PiB7XG4gICAgICByZWFkZXIuYWJvcnQoKTtcbiAgICAgIHJlamVjdChuZXcgRXJyb3IoXCJUaGVyZSB3YXMgYW4gZXJyb3IgcmVhZGluZyBhIGZpbGVcIikpO1xuICAgIH07XG4gICAgcmVhZGVyLm9ubG9hZGVuZCA9ICgpID0+IHtcbiAgICAgIGNvbnN0IHsgcmVzdWx0IH0gPSByZWFkZXI7XG4gICAgICBpZiAocmVzdWx0IGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpIHtcbiAgICAgICAgcmVqZWN0KG5ldyBFcnJvcihcIkV4cGVjdGVkIERhdGFVUkwgYXMgc3RyaW5nIGZyb20gQmxvYi9GaWxlLCBnb3QgQXJyYXlCdWZmZXJcIikpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVzb2x2ZShyZXN1bHQgfHwgdm9pZCAwKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpO1xuICB9KTtcbn07XG5cbi8vIHNyYy9nZXQtdG90YWwtZmlsZS1zaXplLnRzXG52YXIgZ2V0VG90YWxGaWxlU2l6ZSA9IChmaWxlcykgPT4ge1xuICByZXR1cm4gZmlsZXMucmVkdWNlKChhY2MsIGZpbGUpID0+IGFjYyArIGZpbGUuc2l6ZSwgMCk7XG59O1xuXG4vLyBzcmMvaXMtZmlsZS1lcXVhbC50c1xudmFyIGlzRmlsZUVxdWFsID0gKGZpbGUxLCBmaWxlMikgPT4ge1xuICByZXR1cm4gZmlsZTEubmFtZSA9PT0gZmlsZTIubmFtZSAmJiBmaWxlMS5zaXplID09PSBmaWxlMi5zaXplICYmIGZpbGUxLnR5cGUgPT09IGZpbGUyLnR5cGU7XG59O1xuXG4vLyBzcmMvaXMtdmFsaWQtZmlsZS1zaXplLnRzXG52YXIgaXNEZWZpbmVkID0gKHYpID0+IHYgIT09IHZvaWQgMCAmJiB2ICE9PSBudWxsO1xuZnVuY3Rpb24gaXNWYWxpZEZpbGVTaXplKGZpbGUsIG1pblNpemUsIG1heFNpemUpIHtcbiAgaWYgKGlzRGVmaW5lZChmaWxlLnNpemUpKSB7XG4gICAgaWYgKGlzRGVmaW5lZChtaW5TaXplKSAmJiBpc0RlZmluZWQobWF4U2l6ZSkpIHtcbiAgICAgIGlmIChmaWxlLnNpemUgPiBtYXhTaXplKSByZXR1cm4gW2ZhbHNlLCBcIkZJTEVfVE9PX0xBUkdFXCJdO1xuICAgICAgaWYgKGZpbGUuc2l6ZSA8IG1pblNpemUpIHJldHVybiBbZmFsc2UsIFwiRklMRV9UT09fU01BTExcIl07XG4gICAgfSBlbHNlIGlmIChpc0RlZmluZWQobWluU2l6ZSkgJiYgZmlsZS5zaXplIDwgbWluU2l6ZSkge1xuICAgICAgcmV0dXJuIFtmYWxzZSwgXCJGSUxFX1RPT19TTUFMTFwiXTtcbiAgICB9IGVsc2UgaWYgKGlzRGVmaW5lZChtYXhTaXplKSAmJiBmaWxlLnNpemUgPiBtYXhTaXplKSB7XG4gICAgICByZXR1cm4gW2ZhbHNlLCBcIkZJTEVfVE9PX0xBUkdFXCJdO1xuICAgIH1cbiAgfVxuICByZXR1cm4gW3RydWUsIG51bGxdO1xufVxuXG4vLyBzcmMvaXMtdmFsaWQtZmlsZS10eXBlLnRzXG5mdW5jdGlvbiBpc0ZpbGVBY2NlcHRlZChmaWxlLCBhY2NlcHQpIHtcbiAgaWYgKGZpbGUgJiYgYWNjZXB0KSB7XG4gICAgY29uc3QgdHlwZXMgPSBBcnJheS5pc0FycmF5KGFjY2VwdCkgPyBhY2NlcHQgOiBhY2NlcHQuc3BsaXQoXCIsXCIpO1xuICAgIGNvbnN0IGZpbGVOYW1lID0gZmlsZS5uYW1lIHx8IFwiXCI7XG4gICAgY29uc3QgbWltZVR5cGUgPSAoZmlsZS50eXBlIHx8IFwiXCIpLnRvTG93ZXJDYXNlKCk7XG4gICAgY29uc3QgYmFzZU1pbWVUeXBlID0gbWltZVR5cGUucmVwbGFjZSgvXFwvLiokLywgXCJcIik7XG4gICAgcmV0dXJuIHR5cGVzLnNvbWUoKHR5cGUpID0+IHtcbiAgICAgIGNvbnN0IHZhbGlkVHlwZSA9IHR5cGUudHJpbSgpLnRvTG93ZXJDYXNlKCk7XG4gICAgICBpZiAodmFsaWRUeXBlLmNoYXJBdCgwKSA9PT0gXCIuXCIpIHtcbiAgICAgICAgcmV0dXJuIGZpbGVOYW1lLnRvTG93ZXJDYXNlKCkuZW5kc1dpdGgodmFsaWRUeXBlKTtcbiAgICAgIH1cbiAgICAgIGlmICh2YWxpZFR5cGUuZW5kc1dpdGgoXCIvKlwiKSkge1xuICAgICAgICByZXR1cm4gYmFzZU1pbWVUeXBlID09PSB2YWxpZFR5cGUucmVwbGFjZSgvXFwvLiokLywgXCJcIik7XG4gICAgICB9XG4gICAgICByZXR1cm4gbWltZVR5cGUgPT09IHZhbGlkVHlwZTtcbiAgICB9KTtcbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn1cbmZ1bmN0aW9uIGlzVmFsaWRGaWxlVHlwZShmaWxlLCBhY2NlcHQpIHtcbiAgY29uc3QgaXNBY2NlcHRhYmxlID0gZmlsZS50eXBlID09PSBcImFwcGxpY2F0aW9uL3gtbW96LWZpbGVcIiB8fCBpc0ZpbGVBY2NlcHRlZChmaWxlLCBhY2NlcHQpO1xuICByZXR1cm4gW2lzQWNjZXB0YWJsZSwgaXNBY2NlcHRhYmxlID8gbnVsbCA6IFwiRklMRV9JTlZBTElEX1RZUEVcIl07XG59XG5cbmV4cG9ydCB7IGRhdGFVUkl0b0Jsb2IsIGRvd25sb2FkRmlsZSwgZ2V0QWNjZXB0QXR0clN0cmluZywgZ2V0RmlsZURhdGFVcmwsIGdldFRvdGFsRmlsZVNpemUsIGlzRmlsZUVxdWFsLCBpc01TRWRnZSwgaXNWYWxpZEZpbGVTaXplLCBpc1ZhbGlkRmlsZVR5cGUgfTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/file-utils/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/focus-trap/dist/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@zag-js/focus-trap/dist/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FocusTrap: () => (/* binding */ FocusTrap),\n/* harmony export */   trapFocus: () => (/* binding */ trapFocus)\n/* harmony export */ });\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nvar activeFocusTraps = {\n  activateTrap(trapStack, trap) {\n    if (trapStack.length > 0) {\n      const activeTrap = trapStack[trapStack.length - 1];\n      if (activeTrap !== trap) {\n        activeTrap.pause();\n      }\n    }\n    const trapIndex = trapStack.indexOf(trap);\n    if (trapIndex === -1) {\n      trapStack.push(trap);\n    } else {\n      trapStack.splice(trapIndex, 1);\n      trapStack.push(trap);\n    }\n  },\n  deactivateTrap(trapStack, trap) {\n    const trapIndex = trapStack.indexOf(trap);\n    if (trapIndex !== -1) {\n      trapStack.splice(trapIndex, 1);\n    }\n    if (trapStack.length > 0) {\n      trapStack[trapStack.length - 1].unpause();\n    }\n  }\n};\nvar sharedTrapStack = [];\nvar FocusTrap = class {\n  constructor(elements, options) {\n    __publicField(this, \"trapStack\");\n    __publicField(this, \"config\");\n    __publicField(this, \"doc\");\n    __publicField(this, \"state\", {\n      containers: [],\n      containerGroups: [],\n      tabbableGroups: [],\n      nodeFocusedBeforeActivation: null,\n      mostRecentlyFocusedNode: null,\n      active: false,\n      paused: false,\n      delayInitialFocusTimer: void 0,\n      recentNavEvent: void 0\n    });\n    __publicField(this, \"listenerCleanups\", []);\n    __publicField(this, \"handleFocus\", (event) => {\n      const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(event);\n      const targetContained = this.findContainerIndex(target, event) >= 0;\n      if (targetContained || (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isDocument)(target)) {\n        if (targetContained) {\n          this.state.mostRecentlyFocusedNode = target;\n        }\n      } else {\n        event.stopImmediatePropagation();\n        let nextNode;\n        let navAcrossContainers = true;\n        if (this.state.mostRecentlyFocusedNode) {\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getTabIndex)(this.state.mostRecentlyFocusedNode) > 0) {\n            const mruContainerIdx = this.findContainerIndex(this.state.mostRecentlyFocusedNode);\n            const { tabbableNodes } = this.state.containerGroups[mruContainerIdx];\n            if (tabbableNodes.length > 0) {\n              const mruTabIdx = tabbableNodes.findIndex((node) => node === this.state.mostRecentlyFocusedNode);\n              if (mruTabIdx >= 0) {\n                if (this.config.isKeyForward(this.state.recentNavEvent)) {\n                  if (mruTabIdx + 1 < tabbableNodes.length) {\n                    nextNode = tabbableNodes[mruTabIdx + 1];\n                    navAcrossContainers = false;\n                  }\n                } else {\n                  if (mruTabIdx - 1 >= 0) {\n                    nextNode = tabbableNodes[mruTabIdx - 1];\n                    navAcrossContainers = false;\n                  }\n                }\n              }\n            }\n          } else {\n            if (!this.state.containerGroups.some((g) => g.tabbableNodes.some((n) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getTabIndex)(n) > 0))) {\n              navAcrossContainers = false;\n            }\n          }\n        } else {\n          navAcrossContainers = false;\n        }\n        if (navAcrossContainers) {\n          nextNode = this.findNextNavNode({\n            // move FROM the MRU node, not event-related node (which will be the node that is\n            //  outside the trap causing the focus escape we're trying to fix)\n            target: this.state.mostRecentlyFocusedNode,\n            isBackward: this.config.isKeyBackward(this.state.recentNavEvent)\n          });\n        }\n        if (nextNode) {\n          this.tryFocus(nextNode);\n        } else {\n          this.tryFocus(this.state.mostRecentlyFocusedNode || this.getInitialFocusNode());\n        }\n      }\n      this.state.recentNavEvent = void 0;\n    });\n    __publicField(this, \"handlePointerDown\", (event) => {\n      const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(event);\n      if (this.findContainerIndex(target, event) >= 0) {\n        return;\n      }\n      if (valueOrHandler(this.config.clickOutsideDeactivates, event)) {\n        this.deactivate({ returnFocus: this.config.returnFocusOnDeactivate });\n        return;\n      }\n      if (valueOrHandler(this.config.allowOutsideClick, event)) {\n        return;\n      }\n      event.preventDefault();\n    });\n    __publicField(this, \"handleClick\", (event) => {\n      const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(event);\n      if (this.findContainerIndex(target, event) >= 0) {\n        return;\n      }\n      if (valueOrHandler(this.config.clickOutsideDeactivates, event)) {\n        return;\n      }\n      if (valueOrHandler(this.config.allowOutsideClick, event)) {\n        return;\n      }\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    __publicField(this, \"handleTabKey\", (event) => {\n      if (this.config.isKeyForward(event) || this.config.isKeyBackward(event)) {\n        this.state.recentNavEvent = event;\n        const isBackward = this.config.isKeyBackward(event);\n        const destinationNode = this.findNextNavNode({ event, isBackward });\n        if (!destinationNode) return;\n        if (isTabEvent(event)) {\n          event.preventDefault();\n        }\n        this.tryFocus(destinationNode);\n      }\n    });\n    __publicField(this, \"handleEscapeKey\", (event) => {\n      if (isEscapeEvent(event) && valueOrHandler(this.config.escapeDeactivates, event) !== false) {\n        event.preventDefault();\n        this.deactivate();\n      }\n    });\n    __publicField(this, \"_mutationObserver\");\n    __publicField(this, \"setupMutationObserver\", () => {\n      const win = this.doc.defaultView || window;\n      this._mutationObserver = new win.MutationObserver((mutations) => {\n        const isFocusedNodeRemoved = mutations.some((mutation) => {\n          const removedNodes = Array.from(mutation.removedNodes);\n          return removedNodes.some((node) => node === this.state.mostRecentlyFocusedNode);\n        });\n        if (isFocusedNodeRemoved) {\n          this.tryFocus(this.getInitialFocusNode());\n        }\n      });\n    });\n    __publicField(this, \"updateObservedNodes\", () => {\n      this._mutationObserver?.disconnect();\n      if (this.state.active && !this.state.paused) {\n        this.state.containers.map((container) => {\n          this._mutationObserver?.observe(container, { subtree: true, childList: true });\n        });\n      }\n    });\n    __publicField(this, \"getInitialFocusNode\", () => {\n      let node = this.getNodeForOption(\"initialFocus\", { hasFallback: true });\n      if (node === false) {\n        return false;\n      }\n      if (node === void 0 || node && !(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isFocusable)(node)) {\n        if (this.findContainerIndex(this.doc.activeElement) >= 0) {\n          node = this.doc.activeElement;\n        } else {\n          const firstTabbableGroup = this.state.tabbableGroups[0];\n          const firstTabbableNode = firstTabbableGroup && firstTabbableGroup.firstTabbableNode;\n          node = firstTabbableNode || this.getNodeForOption(\"fallbackFocus\");\n        }\n      } else if (node === null) {\n        node = this.getNodeForOption(\"fallbackFocus\");\n      }\n      if (!node) {\n        throw new Error(\"Your focus-trap needs to have at least one focusable element\");\n      }\n      if (!node.isConnected) {\n        node = this.getNodeForOption(\"fallbackFocus\");\n      }\n      return node;\n    });\n    __publicField(this, \"tryFocus\", (node) => {\n      if (node === false) return;\n      if (node === (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getActiveElement)(this.doc)) return;\n      if (!node || !node.focus) {\n        this.tryFocus(this.getInitialFocusNode());\n        return;\n      }\n      node.focus({ preventScroll: !!this.config.preventScroll });\n      this.state.mostRecentlyFocusedNode = node;\n      if (isSelectableInput(node)) {\n        node.select();\n      }\n    });\n    __publicField(this, \"deactivate\", (deactivateOptions) => {\n      if (!this.state.active) return this;\n      const options = {\n        onDeactivate: this.config.onDeactivate,\n        onPostDeactivate: this.config.onPostDeactivate,\n        checkCanReturnFocus: this.config.checkCanReturnFocus,\n        ...deactivateOptions\n      };\n      clearTimeout(this.state.delayInitialFocusTimer);\n      this.state.delayInitialFocusTimer = void 0;\n      this.removeListeners();\n      this.state.active = false;\n      this.state.paused = false;\n      this.updateObservedNodes();\n      activeFocusTraps.deactivateTrap(this.trapStack, this);\n      const onDeactivate = this.getOption(options, \"onDeactivate\");\n      const onPostDeactivate = this.getOption(options, \"onPostDeactivate\");\n      const checkCanReturnFocus = this.getOption(options, \"checkCanReturnFocus\");\n      const returnFocus = this.getOption(options, \"returnFocus\", \"returnFocusOnDeactivate\");\n      onDeactivate?.();\n      const finishDeactivation = () => {\n        delay(() => {\n          if (returnFocus) {\n            const returnFocusNode = this.getReturnFocusNode(this.state.nodeFocusedBeforeActivation);\n            this.tryFocus(returnFocusNode);\n          }\n          onPostDeactivate?.();\n        });\n      };\n      if (returnFocus && checkCanReturnFocus) {\n        const returnFocusNode = this.getReturnFocusNode(this.state.nodeFocusedBeforeActivation);\n        checkCanReturnFocus(returnFocusNode).then(finishDeactivation, finishDeactivation);\n        return this;\n      }\n      finishDeactivation();\n      return this;\n    });\n    __publicField(this, \"pause\", (pauseOptions) => {\n      if (this.state.paused || !this.state.active) {\n        return this;\n      }\n      const onPause = this.getOption(pauseOptions, \"onPause\");\n      const onPostPause = this.getOption(pauseOptions, \"onPostPause\");\n      this.state.paused = true;\n      onPause?.();\n      this.removeListeners();\n      this.updateObservedNodes();\n      onPostPause?.();\n      return this;\n    });\n    __publicField(this, \"unpause\", (unpauseOptions) => {\n      if (!this.state.paused || !this.state.active) {\n        return this;\n      }\n      const onUnpause = this.getOption(unpauseOptions, \"onUnpause\");\n      const onPostUnpause = this.getOption(unpauseOptions, \"onPostUnpause\");\n      this.state.paused = false;\n      onUnpause?.();\n      this.updateTabbableNodes();\n      this.addListeners();\n      this.updateObservedNodes();\n      onPostUnpause?.();\n      return this;\n    });\n    __publicField(this, \"updateContainerElements\", (containerElements) => {\n      this.state.containers = Array.isArray(containerElements) ? containerElements.filter(Boolean) : [containerElements].filter(Boolean);\n      if (this.state.active) {\n        this.updateTabbableNodes();\n      }\n      this.updateObservedNodes();\n      return this;\n    });\n    __publicField(this, \"getReturnFocusNode\", (previousActiveElement) => {\n      const node = this.getNodeForOption(\"setReturnFocus\", {\n        params: [previousActiveElement]\n      });\n      return node ? node : node === false ? false : previousActiveElement;\n    });\n    __publicField(this, \"getOption\", (configOverrideOptions, optionName, configOptionName) => {\n      return configOverrideOptions && configOverrideOptions[optionName] !== void 0 ? configOverrideOptions[optionName] : (\n        // @ts-expect-error\n        this.config[configOptionName || optionName]\n      );\n    });\n    __publicField(this, \"getNodeForOption\", (optionName, { hasFallback = false, params = [] } = {}) => {\n      let optionValue = this.config[optionName];\n      if (typeof optionValue === \"function\") optionValue = optionValue(...params);\n      if (optionValue === true) optionValue = void 0;\n      if (!optionValue) {\n        if (optionValue === void 0 || optionValue === false) {\n          return optionValue;\n        }\n        throw new Error(`\\`${optionName}\\` was specified but was not a node, or did not return a node`);\n      }\n      let node = optionValue;\n      if (typeof optionValue === \"string\") {\n        try {\n          node = this.doc.querySelector(optionValue);\n        } catch (err) {\n          throw new Error(`\\`${optionName}\\` appears to be an invalid selector; error=\"${err.message}\"`);\n        }\n        if (!node) {\n          if (!hasFallback) {\n            throw new Error(`\\`${optionName}\\` as selector refers to no known node`);\n          }\n        }\n      }\n      return node;\n    });\n    __publicField(this, \"findNextNavNode\", (opts) => {\n      const { event, isBackward = false } = opts;\n      const target = opts.target || (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(event);\n      this.updateTabbableNodes();\n      let destinationNode = null;\n      if (this.state.tabbableGroups.length > 0) {\n        const containerIndex = this.findContainerIndex(target, event);\n        const containerGroup = containerIndex >= 0 ? this.state.containerGroups[containerIndex] : void 0;\n        if (containerIndex < 0) {\n          if (isBackward) {\n            destinationNode = this.state.tabbableGroups[this.state.tabbableGroups.length - 1].lastTabbableNode;\n          } else {\n            destinationNode = this.state.tabbableGroups[0].firstTabbableNode;\n          }\n        } else if (isBackward) {\n          let startOfGroupIndex = this.state.tabbableGroups.findIndex(\n            ({ firstTabbableNode }) => target === firstTabbableNode\n          );\n          if (startOfGroupIndex < 0 && (containerGroup?.container === target || (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isFocusable)(target) && !(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isTabbable)(target) && !containerGroup?.nextTabbableNode(target, false))) {\n            startOfGroupIndex = containerIndex;\n          }\n          if (startOfGroupIndex >= 0) {\n            const destinationGroupIndex = startOfGroupIndex === 0 ? this.state.tabbableGroups.length - 1 : startOfGroupIndex - 1;\n            const destinationGroup = this.state.tabbableGroups[destinationGroupIndex];\n            destinationNode = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getTabIndex)(target) >= 0 ? destinationGroup.lastTabbableNode : destinationGroup.lastDomTabbableNode;\n          } else if (!isTabEvent(event)) {\n            destinationNode = containerGroup?.nextTabbableNode(target, false);\n          }\n        } else {\n          let lastOfGroupIndex = this.state.tabbableGroups.findIndex(\n            ({ lastTabbableNode }) => target === lastTabbableNode\n          );\n          if (lastOfGroupIndex < 0 && (containerGroup?.container === target || (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isFocusable)(target) && !(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isTabbable)(target) && !containerGroup?.nextTabbableNode(target))) {\n            lastOfGroupIndex = containerIndex;\n          }\n          if (lastOfGroupIndex >= 0) {\n            const destinationGroupIndex = lastOfGroupIndex === this.state.tabbableGroups.length - 1 ? 0 : lastOfGroupIndex + 1;\n            const destinationGroup = this.state.tabbableGroups[destinationGroupIndex];\n            destinationNode = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getTabIndex)(target) >= 0 ? destinationGroup.firstTabbableNode : destinationGroup.firstDomTabbableNode;\n          } else if (!isTabEvent(event)) {\n            destinationNode = containerGroup?.nextTabbableNode(target);\n          }\n        }\n      } else {\n        destinationNode = this.getNodeForOption(\"fallbackFocus\");\n      }\n      return destinationNode;\n    });\n    this.trapStack = options.trapStack || sharedTrapStack;\n    const config = {\n      returnFocusOnDeactivate: true,\n      escapeDeactivates: true,\n      delayInitialFocus: true,\n      isKeyForward(e) {\n        return isTabEvent(e) && !e.shiftKey;\n      },\n      isKeyBackward(e) {\n        return isTabEvent(e) && e.shiftKey;\n      },\n      ...options\n    };\n    this.doc = config.document || (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getDocument)(Array.isArray(elements) ? elements[0] : elements);\n    this.config = config;\n    this.updateContainerElements(elements);\n    this.setupMutationObserver();\n  }\n  get active() {\n    return this.state.active;\n  }\n  get paused() {\n    return this.state.paused;\n  }\n  findContainerIndex(element, event) {\n    const composedPath = typeof event?.composedPath === \"function\" ? event.composedPath() : void 0;\n    return this.state.containerGroups.findIndex(\n      ({ container, tabbableNodes }) => container.contains(element) || composedPath?.includes(container) || tabbableNodes.find((node) => node === element)\n    );\n  }\n  updateTabbableNodes() {\n    this.state.containerGroups = this.state.containers.map((container) => {\n      const tabbableNodes = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getTabbables)(container);\n      const focusableNodes = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getFocusables)(container);\n      const firstTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[0] : void 0;\n      const lastTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[tabbableNodes.length - 1] : void 0;\n      const firstDomTabbableNode = focusableNodes.find((node) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isTabbable)(node));\n      const lastDomTabbableNode = focusableNodes.slice().reverse().find((node) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isTabbable)(node));\n      const posTabIndexesFound = !!tabbableNodes.find((node) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getTabIndex)(node) > 0);\n      function nextTabbableNode(node, forward = true) {\n        const nodeIdx = tabbableNodes.indexOf(node);\n        if (nodeIdx < 0) {\n          if (forward) {\n            return focusableNodes.slice(focusableNodes.indexOf(node) + 1).find((el) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isTabbable)(el));\n          }\n          return focusableNodes.slice(0, focusableNodes.indexOf(node)).reverse().find((el) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isTabbable)(el));\n        }\n        return tabbableNodes[nodeIdx + (forward ? 1 : -1)];\n      }\n      return {\n        container,\n        tabbableNodes,\n        focusableNodes,\n        posTabIndexesFound,\n        firstTabbableNode,\n        lastTabbableNode,\n        firstDomTabbableNode,\n        lastDomTabbableNode,\n        nextTabbableNode\n      };\n    });\n    this.state.tabbableGroups = this.state.containerGroups.filter((group) => group.tabbableNodes.length > 0);\n    if (this.state.tabbableGroups.length <= 0 && !this.getNodeForOption(\"fallbackFocus\")) {\n      throw new Error(\n        \"Your focus-trap must have at least one container with at least one tabbable node in it at all times\"\n      );\n    }\n    if (this.state.containerGroups.find((g) => g.posTabIndexesFound) && this.state.containerGroups.length > 1) {\n      throw new Error(\n        \"At least one node with a positive tabindex was found in one of your focus-trap's multiple containers. Positive tabindexes are only supported in single-container focus-traps.\"\n      );\n    }\n  }\n  addListeners() {\n    if (!this.state.active) return;\n    activeFocusTraps.activateTrap(this.trapStack, this);\n    this.state.delayInitialFocusTimer = this.config.delayInitialFocus ? delay(() => {\n      this.tryFocus(this.getInitialFocusNode());\n    }) : this.tryFocus(this.getInitialFocusNode());\n    this.listenerCleanups.push(\n      (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(this.doc, \"focusin\", this.handleFocus, true),\n      (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(this.doc, \"mousedown\", this.handlePointerDown, { capture: true, passive: false }),\n      (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(this.doc, \"touchstart\", this.handlePointerDown, { capture: true, passive: false }),\n      (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(this.doc, \"click\", this.handleClick, { capture: true, passive: false }),\n      (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(this.doc, \"keydown\", this.handleTabKey, { capture: true, passive: false }),\n      (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(this.doc, \"keydown\", this.handleEscapeKey)\n    );\n    return this;\n  }\n  removeListeners() {\n    if (!this.state.active) return;\n    this.listenerCleanups.forEach((cleanup) => cleanup());\n    this.listenerCleanups = [];\n    return this;\n  }\n  activate(activateOptions) {\n    if (this.state.active) {\n      return this;\n    }\n    const onActivate = this.getOption(activateOptions, \"onActivate\");\n    const onPostActivate = this.getOption(activateOptions, \"onPostActivate\");\n    const checkCanFocusTrap = this.getOption(activateOptions, \"checkCanFocusTrap\");\n    if (!checkCanFocusTrap) {\n      this.updateTabbableNodes();\n    }\n    this.state.active = true;\n    this.state.paused = false;\n    this.state.nodeFocusedBeforeActivation = this.doc.activeElement || null;\n    onActivate?.();\n    const finishActivation = () => {\n      if (checkCanFocusTrap) {\n        this.updateTabbableNodes();\n      }\n      this.addListeners();\n      this.updateObservedNodes();\n      onPostActivate?.();\n    };\n    if (checkCanFocusTrap) {\n      checkCanFocusTrap(this.state.containers.concat()).then(finishActivation, finishActivation);\n      return this;\n    }\n    finishActivation();\n    return this;\n  }\n};\nvar isTabEvent = (event) => event.key === \"Tab\";\nvar valueOrHandler = (value, ...params) => typeof value === \"function\" ? value(...params) : value;\nvar isEscapeEvent = (event) => !event.isComposing && event.key === \"Escape\";\nvar delay = (fn) => setTimeout(fn, 0);\nvar isSelectableInput = (node) => node.localName === \"input\" && \"select\" in node && typeof node.select === \"function\";\n\n// src/index.ts\nfunction trapFocus(el, options = {}) {\n  let trap;\n  const cleanup = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.raf)(() => {\n    const contentEl = typeof el === \"function\" ? el() : el;\n    if (!contentEl) return;\n    trap = new FocusTrap(contentEl, {\n      escapeDeactivates: false,\n      allowOutsideClick: true,\n      preventScroll: true,\n      returnFocusOnDeactivate: true,\n      delayInitialFocus: false,\n      fallbackFocus: contentEl,\n      ...options,\n      document: (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getDocument)(contentEl)\n    });\n    try {\n      trap.activate();\n    } catch {\n    }\n  });\n  return function destroy() {\n    trap?.deactivate();\n    cleanup();\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/focus-trap/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/focus-visible/dist/index.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@zag-js/focus-visible/dist/index.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getInteractionModality: () => (/* binding */ getInteractionModality),\n/* harmony export */   isFocusVisible: () => (/* binding */ isFocusVisible),\n/* harmony export */   listenerMap: () => (/* binding */ listenerMap),\n/* harmony export */   setInteractionModality: () => (/* binding */ setInteractionModality),\n/* harmony export */   trackFocusVisible: () => (/* binding */ trackFocusVisible),\n/* harmony export */   trackInteractionModality: () => (/* binding */ trackInteractionModality)\n/* harmony export */ });\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n\n\n// src/index.ts\nfunction isVirtualClick(event) {\n  if (event.mozInputSource === 0 && event.isTrusted) return true;\n  return event.detail === 0 && !event.pointerType;\n}\nfunction isValidKey(e) {\n  return !(e.metaKey || !(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isMac)() && e.altKey || e.ctrlKey || e.key === \"Control\" || e.key === \"Shift\" || e.key === \"Meta\");\n}\nvar nonTextInputTypes = /* @__PURE__ */ new Set([\"checkbox\", \"radio\", \"range\", \"color\", \"file\", \"image\", \"button\", \"submit\", \"reset\"]);\nfunction isKeyboardFocusEvent(isTextInput, modality, e) {\n  const target = e ? (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(e) : null;\n  const win = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getWindow)(target);\n  isTextInput = isTextInput || target instanceof win.HTMLInputElement && !nonTextInputTypes.has(target?.type) || target instanceof win.HTMLTextAreaElement || target instanceof win.HTMLElement && target.isContentEditable;\n  return !(isTextInput && modality === \"keyboard\" && e instanceof win.KeyboardEvent && !Reflect.has(FOCUS_VISIBLE_INPUT_KEYS, e.key));\n}\nvar currentModality = null;\nvar changeHandlers = /* @__PURE__ */ new Set();\nvar listenerMap = /* @__PURE__ */ new Map();\nvar hasEventBeforeFocus = false;\nvar hasBlurredWindowRecently = false;\nvar FOCUS_VISIBLE_INPUT_KEYS = {\n  Tab: true,\n  Escape: true\n};\nfunction triggerChangeHandlers(modality, e) {\n  for (let handler of changeHandlers) {\n    handler(modality, e);\n  }\n}\nfunction handleKeyboardEvent(e) {\n  hasEventBeforeFocus = true;\n  if (isValidKey(e)) {\n    currentModality = \"keyboard\";\n    triggerChangeHandlers(\"keyboard\", e);\n  }\n}\nfunction handlePointerEvent(e) {\n  currentModality = \"pointer\";\n  if (e.type === \"mousedown\" || e.type === \"pointerdown\") {\n    hasEventBeforeFocus = true;\n    triggerChangeHandlers(\"pointer\", e);\n  }\n}\nfunction handleClickEvent(e) {\n  if (isVirtualClick(e)) {\n    hasEventBeforeFocus = true;\n    currentModality = \"virtual\";\n  }\n}\nfunction handleFocusEvent(e) {\n  const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(e);\n  if (target === (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getWindow)(target) || target === (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getDocument)(target)) {\n    return;\n  }\n  if (!hasEventBeforeFocus && !hasBlurredWindowRecently) {\n    currentModality = \"virtual\";\n    triggerChangeHandlers(\"virtual\", e);\n  }\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = false;\n}\nfunction handleWindowBlur() {\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = true;\n}\nfunction setupGlobalFocusEvents(root) {\n  if (typeof window === \"undefined\" || listenerMap.get((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getWindow)(root))) {\n    return;\n  }\n  const win = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getWindow)(root);\n  const doc = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getDocument)(root);\n  let focus = win.HTMLElement.prototype.focus;\n  win.HTMLElement.prototype.focus = function() {\n    currentModality = \"virtual\";\n    triggerChangeHandlers(\"virtual\", null);\n    hasEventBeforeFocus = true;\n    focus.apply(this, arguments);\n  };\n  doc.addEventListener(\"keydown\", handleKeyboardEvent, true);\n  doc.addEventListener(\"keyup\", handleKeyboardEvent, true);\n  doc.addEventListener(\"click\", handleClickEvent, true);\n  win.addEventListener(\"focus\", handleFocusEvent, true);\n  win.addEventListener(\"blur\", handleWindowBlur, false);\n  if (typeof win.PointerEvent !== \"undefined\") {\n    doc.addEventListener(\"pointerdown\", handlePointerEvent, true);\n    doc.addEventListener(\"pointermove\", handlePointerEvent, true);\n    doc.addEventListener(\"pointerup\", handlePointerEvent, true);\n  } else {\n    doc.addEventListener(\"mousedown\", handlePointerEvent, true);\n    doc.addEventListener(\"mousemove\", handlePointerEvent, true);\n    doc.addEventListener(\"mouseup\", handlePointerEvent, true);\n  }\n  win.addEventListener(\n    \"beforeunload\",\n    () => {\n      tearDownWindowFocusTracking(root);\n    },\n    { once: true }\n  );\n  listenerMap.set(win, { focus });\n}\nvar tearDownWindowFocusTracking = (root, loadListener) => {\n  const win = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getWindow)(root);\n  const doc = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getDocument)(root);\n  if (!listenerMap.has(win)) {\n    return;\n  }\n  win.HTMLElement.prototype.focus = listenerMap.get(win).focus;\n  doc.removeEventListener(\"keydown\", handleKeyboardEvent, true);\n  doc.removeEventListener(\"keyup\", handleKeyboardEvent, true);\n  doc.removeEventListener(\"click\", handleClickEvent, true);\n  win.removeEventListener(\"focus\", handleFocusEvent, true);\n  win.removeEventListener(\"blur\", handleWindowBlur, false);\n  if (typeof win.PointerEvent !== \"undefined\") {\n    doc.removeEventListener(\"pointerdown\", handlePointerEvent, true);\n    doc.removeEventListener(\"pointermove\", handlePointerEvent, true);\n    doc.removeEventListener(\"pointerup\", handlePointerEvent, true);\n  } else {\n    doc.removeEventListener(\"mousedown\", handlePointerEvent, true);\n    doc.removeEventListener(\"mousemove\", handlePointerEvent, true);\n    doc.removeEventListener(\"mouseup\", handlePointerEvent, true);\n  }\n  listenerMap.delete(win);\n};\nfunction getInteractionModality() {\n  return currentModality;\n}\nfunction setInteractionModality(modality) {\n  currentModality = modality;\n  triggerChangeHandlers(modality, null);\n}\nfunction trackInteractionModality(props) {\n  const { onChange, root } = props;\n  setupGlobalFocusEvents(root);\n  onChange({ modality: currentModality });\n  const handler = () => onChange({ modality: currentModality });\n  changeHandlers.add(handler);\n  return () => {\n    changeHandlers.delete(handler);\n  };\n}\nfunction isFocusVisible() {\n  return currentModality === \"keyboard\";\n}\nfunction trackFocusVisible(props = {}) {\n  const { isTextInput, autoFocus, onChange, root } = props;\n  setupGlobalFocusEvents(root);\n  onChange?.({ isFocusVisible: autoFocus || isFocusVisible(), modality: currentModality });\n  const handler = (modality, e) => {\n    if (!isKeyboardFocusEvent(!!isTextInput, modality, e)) return;\n    onChange?.({ isFocusVisible: isFocusVisible(), modality });\n  };\n  changeHandlers.add(handler);\n  return () => {\n    changeHandlers.delete(handler);\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/focus-visible/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/hover-card/dist/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@zag-js/hover-card/dist/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_popper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/popper */ \"(ssr)/./node_modules/@zag-js/popper/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_dismissable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/dismissable */ \"(ssr)/./node_modules/@zag-js/dismissable/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n\n// src/hover-card.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"hoverCard\").parts(\"arrow\", \"arrowTip\", \"trigger\", \"positioner\", \"content\");\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getTriggerId: (ctx) => ctx.ids?.trigger ?? `hover-card:${ctx.id}:trigger`,\n  getContentId: (ctx) => ctx.ids?.content ?? `hover-card:${ctx.id}:content`,\n  getPositionerId: (ctx) => ctx.ids?.positioner ?? `hover-card:${ctx.id}:popper`,\n  getArrowId: (ctx) => ctx.ids?.arrow ?? `hover-card:${ctx.id}:arrow`,\n  getTriggerEl: (ctx) => dom.getById(ctx, dom.getTriggerId(ctx)),\n  getContentEl: (ctx) => dom.getById(ctx, dom.getContentId(ctx)),\n  getPositionerEl: (ctx) => dom.getById(ctx, dom.getPositionerId(ctx))\n});\n\n// src/hover-card.connect.ts\nfunction connect(state, send, normalize) {\n  const open = state.hasTag(\"open\");\n  const popperStyles = (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_2__.getPlacementStyles)({\n    ...state.context.positioning,\n    placement: state.context.currentPlacement\n  });\n  return {\n    open,\n    setOpen(nextOpen) {\n      if (nextOpen === open) return;\n      send(nextOpen ? \"OPEN\" : \"CLOSE\");\n    },\n    reposition(options = {}) {\n      send({ type: \"POSITIONING.SET\", options });\n    },\n    getArrowProps() {\n      return normalize.element({\n        id: dom.getArrowId(state.context),\n        ...parts.arrow.attrs,\n        dir: state.context.dir,\n        style: popperStyles.arrow\n      });\n    },\n    getArrowTipProps() {\n      return normalize.element({\n        ...parts.arrowTip.attrs,\n        dir: state.context.dir,\n        style: popperStyles.arrowTip\n      });\n    },\n    getTriggerProps() {\n      return normalize.element({\n        ...parts.trigger.attrs,\n        dir: state.context.dir,\n        \"data-placement\": state.context.currentPlacement,\n        id: dom.getTriggerId(state.context),\n        \"data-state\": open ? \"open\" : \"closed\",\n        onPointerEnter(event) {\n          if (event.pointerType === \"touch\") return;\n          send({ type: \"POINTER_ENTER\", src: \"trigger\" });\n        },\n        onPointerLeave(event) {\n          if (event.pointerType === \"touch\") return;\n          send({ type: \"POINTER_LEAVE\", src: \"trigger\" });\n        },\n        onFocus() {\n          send(\"TRIGGER_FOCUS\");\n        },\n        onBlur() {\n          send(\"TRIGGER_BLUR\");\n        }\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        id: dom.getPositionerId(state.context),\n        ...parts.positioner.attrs,\n        dir: state.context.dir,\n        style: popperStyles.floating\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: state.context.dir,\n        id: dom.getContentId(state.context),\n        hidden: !open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-placement\": state.context.currentPlacement,\n        onPointerEnter(event) {\n          if (event.pointerType === \"touch\") return;\n          send({ type: \"POINTER_ENTER\", src: \"content\" });\n        },\n        onPointerLeave(event) {\n          if (event.pointerType === \"touch\") return;\n          send({ type: \"POINTER_LEAVE\", src: \"content\" });\n        }\n      });\n    }\n  };\n}\nvar { not, and } = _zag_js_core__WEBPACK_IMPORTED_MODULE_3__.guards;\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)(\n    {\n      id: \"hover-card\",\n      initial: ctx.open ? \"open\" : \"closed\",\n      context: {\n        openDelay: 700,\n        closeDelay: 300,\n        currentPlacement: void 0,\n        ...ctx,\n        positioning: {\n          placement: \"bottom\",\n          ...ctx.positioning\n        }\n      },\n      watch: {\n        open: [\"toggleVisibility\"]\n      },\n      states: {\n        closed: {\n          tags: [\"closed\"],\n          entry: [\"clearIsPointer\"],\n          on: {\n            \"CONTROLLED.OPEN\": \"open\",\n            POINTER_ENTER: {\n              target: \"opening\",\n              actions: [\"setIsPointer\"]\n            },\n            TRIGGER_FOCUS: \"opening\",\n            OPEN: \"opening\"\n          }\n        },\n        opening: {\n          tags: [\"closed\"],\n          after: {\n            OPEN_DELAY: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\"]\n              }\n            ]\n          },\n          on: {\n            \"CONTROLLED.OPEN\": \"open\",\n            \"CONTROLLED.CLOSE\": \"closed\",\n            POINTER_LEAVE: [\n              {\n                guard: \"isOpenControlled\",\n                // We trigger toggleVisibility manually since the `ctx.open` has not changed yet (at this point)\n                actions: [\"invokeOnClose\", \"toggleVisibility\"]\n              },\n              {\n                target: \"closed\",\n                actions: [\"invokeOnClose\"]\n              }\n            ],\n            TRIGGER_BLUR: [\n              {\n                guard: and(\"isOpenControlled\", not(\"isPointer\")),\n                // We trigger toggleVisibility manually since the `ctx.open` has not changed yet (at this point)\n                actions: [\"invokeOnClose\", \"toggleVisibility\"]\n              },\n              {\n                guard: not(\"isPointer\"),\n                target: \"closed\",\n                actions: [\"invokeOnClose\"]\n              }\n            ],\n            CLOSE: [\n              {\n                guard: \"isOpenControlled\",\n                // We trigger toggleVisibility manually since the `ctx.open` has not changed yet (at this point)\n                actions: [\"invokeOnClose\", \"toggleVisibility\"]\n              },\n              {\n                target: \"closed\",\n                actions: [\"invokeOnClose\"]\n              }\n            ]\n          }\n        },\n        open: {\n          tags: [\"open\"],\n          activities: [\"trackDismissableElement\", \"trackPositioning\"],\n          on: {\n            \"CONTROLLED.CLOSE\": \"closed\",\n            POINTER_ENTER: {\n              actions: [\"setIsPointer\"]\n            },\n            POINTER_LEAVE: \"closing\",\n            CLOSE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                target: \"closed\",\n                actions: [\"invokeOnClose\"]\n              }\n            ],\n            TRIGGER_BLUR: [\n              {\n                guard: and(\"isOpenControlled\", not(\"isPointer\")),\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                guard: not(\"isPointer\"),\n                target: \"closed\",\n                actions: [\"invokeOnClose\"]\n              }\n            ],\n            \"POSITIONING.SET\": {\n              actions: \"reposition\"\n            }\n          }\n        },\n        closing: {\n          tags: [\"open\"],\n          activities: [\"trackPositioning\"],\n          after: {\n            CLOSE_DELAY: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                target: \"closed\",\n                actions: [\"invokeOnClose\"]\n              }\n            ]\n          },\n          on: {\n            \"CONTROLLED.CLOSE\": \"closed\",\n            \"CONTROLLED.OPEN\": \"open\",\n            POINTER_ENTER: {\n              target: \"open\",\n              // no need to invokeOnOpen here because it's still open (but about to close)\n              actions: [\"setIsPointer\"]\n            }\n          }\n        }\n      }\n    },\n    {\n      delays: {\n        OPEN_DELAY: (ctx2) => ctx2.openDelay,\n        CLOSE_DELAY: (ctx2) => ctx2.closeDelay\n      },\n      guards: {\n        isPointer: (ctx2) => !!ctx2.isPointer,\n        isOpenControlled: (ctx2) => !!ctx2[\"open.controlled\"]\n      },\n      activities: {\n        trackPositioning(ctx2) {\n          ctx2.currentPlacement || (ctx2.currentPlacement = ctx2.positioning.placement);\n          const getPositionerEl = () => dom.getPositionerEl(ctx2);\n          return (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_2__.getPlacement)(dom.getTriggerEl(ctx2), getPositionerEl, {\n            ...ctx2.positioning,\n            defer: true,\n            onComplete(data) {\n              ctx2.currentPlacement = data.placement;\n            }\n          });\n        },\n        trackDismissableElement(ctx2, _evt, { send }) {\n          const getContentEl = () => dom.getContentEl(ctx2);\n          return (0,_zag_js_dismissable__WEBPACK_IMPORTED_MODULE_5__.trackDismissableElement)(getContentEl, {\n            defer: true,\n            exclude: [dom.getTriggerEl(ctx2)],\n            onDismiss() {\n              send({ type: \"CLOSE\", src: \"interact-outside\" });\n            },\n            onFocusOutside(event) {\n              event.preventDefault();\n            }\n          });\n        }\n      },\n      actions: {\n        invokeOnClose(ctx2) {\n          ctx2.onOpenChange?.({ open: false });\n        },\n        invokeOnOpen(ctx2) {\n          ctx2.onOpenChange?.({ open: true });\n        },\n        setIsPointer(ctx2) {\n          ctx2.isPointer = true;\n        },\n        clearIsPointer(ctx2) {\n          ctx2.isPointer = false;\n        },\n        reposition(ctx2, evt) {\n          const getPositionerEl = () => dom.getPositionerEl(ctx2);\n          (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_2__.getPlacement)(dom.getTriggerEl(ctx2), getPositionerEl, {\n            ...ctx2.positioning,\n            ...evt.options,\n            defer: true,\n            listeners: false,\n            onComplete(data) {\n              ctx2.currentPlacement = data.placement;\n            }\n          });\n        },\n        toggleVisibility(ctx2, evt, { send }) {\n          queueMicrotask(() => {\n            send({ type: ctx2.open ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\", previousEvent: evt });\n          });\n        }\n      }\n    }\n  );\n}\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_6__.createProps)()([\n  \"closeDelay\",\n  \"dir\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"onOpenChange\",\n  \"open.controlled\",\n  \"open\",\n  \"openDelay\",\n  \"positioning\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/hover-card/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/i18n-utils/dist/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@zag-js/i18n-utils/dist/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   filter: () => (/* binding */ filter),\n/* harmony export */   formatBytes: () => (/* binding */ formatBytes),\n/* harmony export */   formatDate: () => (/* binding */ formatDate),\n/* harmony export */   formatList: () => (/* binding */ formatList),\n/* harmony export */   formatNumber: () => (/* binding */ formatNumber),\n/* harmony export */   formatRelativeTime: () => (/* binding */ formatRelativeTime),\n/* harmony export */   getDefaultLocale: () => (/* binding */ getDefaultLocale),\n/* harmony export */   getLocaleDir: () => (/* binding */ getLocaleDir),\n/* harmony export */   isRTL: () => (/* binding */ isRTL),\n/* harmony export */   trackLocale: () => (/* binding */ trackLocale)\n/* harmony export */ });\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n\n\n// src/cache.ts\nfunction i18nCache(Ins) {\n  const formatterCache = /* @__PURE__ */ new Map();\n  return function create(locale, options) {\n    const cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : \"\");\n    if (formatterCache.has(cacheKey)) {\n      return formatterCache.get(cacheKey);\n    }\n    let formatter = new Ins(locale, options);\n    formatterCache.set(cacheKey, formatter);\n    return formatter;\n  };\n}\n\n// src/filter.ts\nvar collatorCache = i18nCache(Intl.Collator);\nfunction filter(options) {\n  const { locale, ...rest } = options || {};\n  const collator = collatorCache(locale || \"en-US\", { usage: \"search\", ...rest });\n  function normalize(string) {\n    string = string.normalize(\"NFC\");\n    if (collator.resolvedOptions().ignorePunctuation) {\n      string = string.replace(/\\p{P}/gu, \"\");\n    }\n    return string;\n  }\n  function startsWith(string, substring) {\n    if (substring.length === 0) return true;\n    string = normalize(string);\n    substring = normalize(substring);\n    return collator.compare(string.slice(0, substring.length), substring) === 0;\n  }\n  function endsWith(string, substring) {\n    if (substring.length === 0) return true;\n    string = normalize(string);\n    substring = normalize(substring);\n    return collator.compare(string.slice(-substring.length), substring) === 0;\n  }\n  function contains(string, substring) {\n    if (substring.length === 0) return true;\n    string = normalize(string);\n    substring = normalize(substring);\n    let scan = 0;\n    let sliceLen = substring.length;\n    for (; scan + sliceLen <= string.length; scan++) {\n      let slice = string.slice(scan, scan + sliceLen);\n      if (collator.compare(substring, slice) === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n  return {\n    startsWith,\n    endsWith,\n    contains\n  };\n}\n\n// src/format-number.ts\nvar getNumberFormatter = i18nCache(Intl.NumberFormat);\nfunction formatNumber(v, locale, options = {}) {\n  const formatter = getNumberFormatter(locale, options);\n  return formatter.format(v);\n}\n\n// src/format-bytes.ts\nvar bitPrefixes = [\"\", \"kilo\", \"mega\", \"giga\", \"tera\"];\nvar bytePrefixes = [\"\", \"kilo\", \"mega\", \"giga\", \"tera\", \"peta\"];\nvar formatBytes = (bytes, locale = \"en-US\", options = {}) => {\n  if (isNaN(bytes)) return \"\";\n  if (bytes === 0) return \"0 B\";\n  const { unit = \"byte\", unitDisplay = \"short\" } = options;\n  const prefix = unit === \"bit\" ? bitPrefixes : bytePrefixes;\n  const index = Math.max(0, Math.min(Math.floor(Math.log10(bytes) / 3), prefix.length - 1));\n  const _unit = prefix[index] + unit;\n  const _unitDisplay = unitDisplay || \"short\";\n  const v = parseFloat((bytes / Math.pow(1e3, index)).toPrecision(3));\n  return formatNumber(v, locale, {\n    style: \"unit\",\n    unit: _unit,\n    unitDisplay: _unitDisplay\n  });\n};\n\n// src/format-date.ts\nvar symbols = \"\\\\s|\\\\.|-|/|\\\\\\\\|,|\\\\$|\\\\!|\\\\?|:|;\";\nfunction createRegEx(sign) {\n  return new RegExp(\"(^|>|\" + symbols + \")(\" + sign + \")($|<|\" + symbols + \")\", \"g\");\n}\nvar FORMATS = [\n  \"G\",\n  \"GG\",\n  \"GGG\",\n  \"GGGG\",\n  \"GGGGG\",\n  \"y\",\n  \"yo\",\n  \"yy\",\n  \"yyy\",\n  \"yyyy\",\n  \"Y\",\n  \"Yo\",\n  \"YY\",\n  \"YYY\",\n  \"YYYY\",\n  \"Q\",\n  \"Qo\",\n  \"QQ\",\n  \"QQQ\",\n  \"QQQQ\",\n  \"QQQQQ\",\n  \"M\",\n  \"Mo\",\n  \"MM\",\n  \"MMM\",\n  \"MMMM\",\n  \"MMMMM\",\n  \"E\",\n  \"EE\",\n  \"EEE\",\n  \"EEEE\",\n  \"EEEEE\",\n  \"EEEEEE\",\n  \"a\",\n  \"aa\",\n  \"aaa\",\n  \"aaaa\",\n  \"aaaaa\",\n  \"d\",\n  \"do\",\n  \"dd\",\n  \"D\",\n  \"Do\",\n  \"DD\",\n  \"DDD\",\n  \"w\",\n  \"wo\",\n  \"ww\",\n  \"s\",\n  \"so\",\n  \"ss\",\n  \"m\",\n  \"mo\",\n  \"mm\",\n  \"h\",\n  \"ho\",\n  \"hh\",\n  \"H\",\n  \"Ho\",\n  \"HH\",\n  \"z\",\n  \"zz\",\n  \"zzz\",\n  \"zzzz\",\n  \"T\"\n];\nfunction ordinal(num) {\n  const n = typeof num === \"string\" ? parseFloat(num) : num;\n  let suffix = \"th\";\n  if (n % 10 === 1 && n % 100 !== 11) {\n    suffix = \"st\";\n  } else if (n % 10 === 2 && n % 100 !== 12) {\n    suffix = \"nd\";\n  } else if (n % 10 === 3 && n % 100 !== 13) {\n    suffix = \"rd\";\n  }\n  return `${n}${suffix}`;\n}\nfunction pad(num, length) {\n  return String(num).padStart(length, \"0\");\n}\nfunction zone(str) {\n  return str.split(/AM|PM/)[1].trim();\n}\nfunction getFormat(date, options) {\n  const { locale, format, timeZone } = options;\n  switch (format) {\n    // era\n    case \"G\":\n    case \"GG\":\n    case \"GGG\":\n      return date.toLocaleString(locale, { era: \"short\" });\n    case \"GGGG\":\n      return date.toLocaleString(locale, { era: \"long\" });\n    case \"GGGGG\":\n      return date.toLocaleString(locale, { era: \"narrow\" });\n    // year\n    case \"y\":\n    case \"Y\":\n      return date.getFullYear();\n    case \"yo\":\n    case \"Yo\":\n      return ordinal(date.toLocaleString(locale, { year: \"numeric\" }));\n    case \"yy\":\n    case \"YY\":\n      return date.toLocaleString(locale, { year: \"2-digit\" });\n    case \"yyy\":\n    case \"YYY\":\n      return date.toLocaleString(locale, { year: \"numeric\" }).padStart(3, \"0\");\n    case \"yyyy\":\n    case \"YYYY\":\n      return date.toLocaleString(locale, { year: \"numeric\" }).padStart(4, \"0\");\n    // quarter\n    case \"Q\":\n    case \"QQQQQ\":\n      return Math.ceil((date.getMonth() + 1) / 3);\n    case \"Qo\":\n      return ordinal(Math.ceil((date.getMonth() + 1) / 3));\n    case \"QQ\":\n      return pad(Math.ceil((date.getMonth() + 1) / 3), 2);\n    case \"QQQ\":\n      return `Q${Math.ceil((date.getMonth() + 1) / 3)}`;\n    case \"QQQQ\": {\n      const base = ordinal(String(Math.ceil((date.getMonth() + 1) / 3)));\n      return `${base} quarter`;\n    }\n    // month\n    case \"M\":\n      return date.getMonth() + 1;\n    case \"Mo\":\n      return ordinal(date.getMonth() + 1);\n    case \"MM\":\n      return date.toLocaleString(locale, { month: \"2-digit\" });\n    case \"MMM\":\n      return date.toLocaleString(locale, { month: \"short\" });\n    case \"MMMM\":\n      return date.toLocaleString(locale, { month: \"long\" });\n    case \"MMMMM\":\n      return date.toLocaleString(locale, { month: \"narrow\" });\n    // week\n    case \"w\":\n      return Math.ceil(date.getDate() / 7);\n    case \"wo\":\n      return ordinal(Math.ceil(date.getDate() / 7));\n    case \"ww\":\n      return pad(Math.ceil(date.getDate() / 7), 2);\n    // day\n    case \"d\":\n    case \"D\":\n      return date.getDate();\n    case \"do\":\n    case \"Do\":\n      return ordinal(date.getDate());\n    case \"dd\":\n    case \"DD\":\n      return date.toLocaleString(locale, { day: \"2-digit\" });\n    case \"DDD\":\n      return pad(date.getDate(), 3);\n    // weekday\n    case \"E\":\n    case \"EE\":\n    case \"EEE\":\n      return date.toLocaleString(locale, { weekday: \"short\" });\n    case \"EEEE\":\n      return date.toLocaleString(locale, { weekday: \"long\" });\n    case \"EEEEE\":\n      return date.toLocaleString(locale, { weekday: \"narrow\" });\n    case \"EEEEEE\":\n      return date.toLocaleString(locale, { weekday: \"short\" }).slice(0, 2);\n    // hour\n    case \"h\":\n      return date.toLocaleString(locale, { hour: \"numeric\", hour12: true });\n    case \"ho\":\n      return ordinal(date.toLocaleString(locale, { hour: \"2-digit\", hour12: true }));\n    case \"hh\":\n      return date.toLocaleString(locale, { hour: \"2-digit\", hour12: true });\n    case \"H\":\n      return date.toLocaleString(locale, { hour: \"numeric\", hour12: false });\n    case \"Ho\":\n      return ordinal(+date.toLocaleString(locale, { hour: \"numeric\", hour12: false }));\n    case \"HH\":\n      return date.toLocaleString(locale, { hour: \"2-digit\", hour12: false });\n    // minute\n    case \"m\":\n      return date.toLocaleString(locale, { minute: \"numeric\" });\n    case \"mo\":\n      return ordinal(date.toLocaleString(locale, { minute: \"numeric\" }));\n    case \"mm\":\n      return date.toLocaleString(locale, { minute: \"2-digit\" });\n    // second\n    case \"s\":\n      return date.toLocaleString(locale, { second: \"numeric\" });\n    case \"so\":\n      return ordinal(date.toLocaleString(locale, { second: \"numeric\" }));\n    case \"ss\":\n      return date.toLocaleString(locale, { second: \"2-digit\" });\n    // timestamp\n    case \"T\":\n      return date.getTime();\n    // day period\n    case \"a\":\n    case \"aa\":\n    case \"aaa\":\n      return date.toLocaleString(locale, { hour: \"numeric\", hour12: true }).toLocaleUpperCase();\n    case \"aaaa\":\n      return date.toLocaleString(locale, { hour: \"numeric\", hour12: true }).toLocaleLowerCase();\n    case \"aaaaa\":\n      return date.toLocaleString(locale, { hour: \"numeric\", hour12: true }).charAt(0);\n    // TODO:Revise this\n    case \"z\":\n    case \"zz\":\n    case \"zzz\": {\n      return zone(date.toLocaleString(locale, { timeZone, timeZoneName: \"shortOffset\" }));\n    }\n    case \"zzzz\":\n      return zone(date.toLocaleString(locale, { timeZone, timeZoneName: \"longOffset\" }));\n    default:\n      throw new Error(`Unknown format: ${format}`);\n  }\n}\nfunction formatDate(date, format, locale, timeZone) {\n  let result = format;\n  for (const key of FORMATS) {\n    const res = getFormat(date, { locale, format: key, timeZone });\n    result = result.replace(createRegEx(key), \"$1\" + res + \"$3\");\n  }\n  return result;\n}\n\n// src/format-list.ts\nvar getListFormatter = i18nCache(Intl.ListFormat);\nfunction formatList(list, locale, options = {}) {\n  const formatter = getListFormatter(locale, options);\n  return formatter.format(list);\n}\n\n// src/format-relative-time.ts\nvar getRelativeTimeFormatter = i18nCache(Intl.RelativeTimeFormat);\nfunction formatRelativeTime(value, locale, options = {}) {\n  const rtf = getRelativeTimeFormatter(locale, options);\n  const now = /* @__PURE__ */ new Date();\n  const diff = getDistance(now, value);\n  if (diff.years > 0) return rtf.format(diff.years * diff.sign, \"year\");\n  if (diff.months > 0) return rtf.format(diff.months * diff.sign, \"month\");\n  if (diff.weeks > 0) return rtf.format(diff.weeks * diff.sign, \"week\");\n  if (diff.days > 0) return rtf.format(diff.days * diff.sign, \"day\");\n  if (diff.hours > 0) return rtf.format(diff.hours * diff.sign, \"hour\");\n  if (diff.minutes > 0) return rtf.format(diff.minutes * diff.sign, \"minute\");\n  return rtf.format(diff.seconds * diff.sign, \"second\");\n}\nvar SECOND_TO_MS = 1e3;\nvar MINUTE_TO_MS = 1e3 * 60;\nvar HOUR_TO_MS = 1e3 * 60 * 60;\nvar DAY_TO_MS = 1e3 * 60 * 60 * 24;\nvar WEEK_TO_MS = 1e3 * 60 * 60 * 24 * 7;\nvar MONTH_TO_MS = 1e3 * 60 * 60 * 24 * 30;\nvar YEAR_TO_MS = 1e3 * 60 * 60 * 24 * 365;\nfunction getDistance(startDate, endDate) {\n  const endTime = endDate.getTime();\n  const startTime = startDate.getTime();\n  const distance = Math.abs(endTime - startTime);\n  return {\n    sign: Math.sign(endTime - startTime),\n    days: Math.floor(distance / DAY_TO_MS),\n    hours: Math.floor(distance % DAY_TO_MS / HOUR_TO_MS),\n    minutes: Math.floor(distance % HOUR_TO_MS / MINUTE_TO_MS),\n    seconds: Math.floor(distance % MINUTE_TO_MS / SECOND_TO_MS),\n    weeks: Math.floor(distance / WEEK_TO_MS),\n    months: Math.floor(distance / MONTH_TO_MS),\n    years: Math.floor(distance / YEAR_TO_MS)\n  };\n}\n\n// src/is-rtl.ts\nvar RTL_SCRIPTS = /* @__PURE__ */ new Set([\n  \"Avst\",\n  \"Arab\",\n  \"Armi\",\n  \"Syrc\",\n  \"Samr\",\n  \"Mand\",\n  \"Thaa\",\n  \"Mend\",\n  \"Nkoo\",\n  \"Adlm\",\n  \"Rohg\",\n  \"Hebr\"\n]);\nvar RTL_LANGS = /* @__PURE__ */ new Set([\n  \"ae\",\n  \"ar\",\n  \"arc\",\n  \"bcc\",\n  \"bqi\",\n  \"ckb\",\n  \"dv\",\n  \"fa\",\n  \"glk\",\n  \"he\",\n  \"ku\",\n  \"mzn\",\n  \"nqo\",\n  \"pnb\",\n  \"ps\",\n  \"sd\",\n  \"ug\",\n  \"ur\",\n  \"yi\"\n]);\nfunction isRTL(locale) {\n  if (Intl.Locale) {\n    const script = new Intl.Locale(locale).maximize().script ?? \"\";\n    return RTL_SCRIPTS.has(script);\n  }\n  const lang = locale.split(\"-\")[0];\n  return RTL_LANGS.has(lang);\n}\nfunction getLocaleDir(locale) {\n  return isRTL(locale) ? \"rtl\" : \"ltr\";\n}\n\n// src/locale.ts\nfunction getDefaultLocale() {\n  let locale = typeof navigator !== \"undefined\" && (navigator.language || navigator.userLanguage) || \"en-US\";\n  return {\n    locale,\n    dir: isRTL(locale) ? \"rtl\" : \"ltr\"\n  };\n}\nfunction trackLocale(options = {}) {\n  const { getRootNode, onLocaleChange } = options;\n  onLocaleChange?.(getDefaultLocale());\n  const handleLocaleChange = () => {\n    onLocaleChange?.(getDefaultLocale());\n  };\n  const win = getRootNode ? (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getWindow)(getRootNode()) : window;\n  win.addEventListener(\"languagechange\", handleLocaleChange);\n  return () => {\n    win.removeEventListener(\"languagechange\", handleLocaleChange);\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/i18n-utils/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/interact-outside/dist/index.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@zag-js/interact-outside/dist/index.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   trackInteractOutside: () => (/* binding */ trackInteractOutside)\n/* harmony export */ });\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n// src/index.ts\n\n// src/frame-utils.ts\nfunction getWindowFrames(win) {\n  const frames = {\n    each(cb) {\n      for (let i = 0; i < win.frames?.length; i += 1) {\n        const frame = win.frames[i];\n        if (frame) cb(frame);\n      }\n    },\n    addEventListener(event, listener, options) {\n      frames.each((frame) => {\n        try {\n          frame.document.addEventListener(event, listener, options);\n        } catch {\n        }\n      });\n      return () => {\n        try {\n          frames.removeEventListener(event, listener, options);\n        } catch {\n        }\n      };\n    },\n    removeEventListener(event, listener, options) {\n      frames.each((frame) => {\n        try {\n          frame.document.removeEventListener(event, listener, options);\n        } catch {\n        }\n      });\n    }\n  };\n  return frames;\n}\nfunction getParentWindow(win) {\n  const parent = win.frameElement != null ? win.parent : null;\n  return {\n    addEventListener: (event, listener, options) => {\n      try {\n        parent?.addEventListener(event, listener, options);\n      } catch {\n      }\n      return () => {\n        try {\n          parent?.removeEventListener(event, listener, options);\n        } catch {\n        }\n      };\n    },\n    removeEventListener: (event, listener, options) => {\n      try {\n        parent?.removeEventListener(event, listener, options);\n      } catch {\n      }\n    }\n  };\n}\n\n// src/index.ts\nvar POINTER_OUTSIDE_EVENT = \"pointerdown.outside\";\nvar FOCUS_OUTSIDE_EVENT = \"focus.outside\";\nfunction isComposedPathFocusable(composedPath) {\n  for (const node of composedPath) {\n    if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(node) && (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isFocusable)(node)) return true;\n  }\n  return false;\n}\nvar isPointerEvent = (event) => \"clientY\" in event;\nfunction isEventPointWithin(node, event) {\n  if (!isPointerEvent(event) || !node) return false;\n  const rect = node.getBoundingClientRect();\n  if (rect.width === 0 || rect.height === 0) return false;\n  return rect.top <= event.clientY && event.clientY <= rect.top + rect.height && rect.left <= event.clientX && event.clientX <= rect.left + rect.width;\n}\nfunction isPointInRect(rect, point) {\n  return rect.y <= point.y && point.y <= rect.y + rect.height && rect.x <= point.x && point.x <= rect.x + rect.width;\n}\nfunction isEventWithinScrollbar(event, ancestor) {\n  if (!ancestor || !isPointerEvent(event)) return false;\n  const isScrollableY = ancestor.scrollHeight > ancestor.clientHeight;\n  const onScrollbarY = isScrollableY && event.clientX > ancestor.offsetLeft + ancestor.clientWidth;\n  const isScrollableX = ancestor.scrollWidth > ancestor.clientWidth;\n  const onScrollbarX = isScrollableX && event.clientY > ancestor.offsetTop + ancestor.clientHeight;\n  const rect = {\n    x: ancestor.offsetLeft,\n    y: ancestor.offsetTop,\n    width: ancestor.clientWidth + (isScrollableY ? 16 : 0),\n    height: ancestor.clientHeight + (isScrollableX ? 16 : 0)\n  };\n  const point = {\n    x: event.clientX,\n    y: event.clientY\n  };\n  if (!isPointInRect(rect, point)) return false;\n  return onScrollbarY || onScrollbarX;\n}\nfunction trackInteractOutsideImpl(node, options) {\n  const { exclude, onFocusOutside, onPointerDownOutside, onInteractOutside, defer } = options;\n  if (!node) return;\n  const doc = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getDocument)(node);\n  const win = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getWindow)(node);\n  const frames = getWindowFrames(win);\n  const parentWin = getParentWindow(win);\n  function isEventOutside(event) {\n    const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(event);\n    if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(target)) return false;\n    if (!target.isConnected) return false;\n    if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.contains)(node, target)) return false;\n    if (isEventPointWithin(node, event)) return false;\n    const triggerEl = doc.querySelector(`[aria-controls=\"${node.id}\"]`);\n    if (triggerEl) {\n      const triggerAncestor = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getNearestOverflowAncestor)(triggerEl);\n      if (isEventWithinScrollbar(event, triggerAncestor)) return false;\n    }\n    const nodeAncestor = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getNearestOverflowAncestor)(node);\n    if (isEventWithinScrollbar(event, nodeAncestor)) return false;\n    return !exclude?.(target);\n  }\n  const pointerdownCleanups = /* @__PURE__ */ new Set();\n  function onPointerDown(event) {\n    function handler() {\n      const func = defer ? _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.raf : (v) => v();\n      const composedPath = event.composedPath?.() ?? [event.target];\n      func(() => {\n        if (!node || !isEventOutside(event)) return;\n        if (onPointerDownOutside || onInteractOutside) {\n          const handler2 = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.callAll)(onPointerDownOutside, onInteractOutside);\n          node.addEventListener(POINTER_OUTSIDE_EVENT, handler2, { once: true });\n        }\n        fireCustomEvent(node, POINTER_OUTSIDE_EVENT, {\n          bubbles: false,\n          cancelable: true,\n          detail: {\n            originalEvent: event,\n            contextmenu: (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isContextMenuEvent)(event),\n            focusable: isComposedPathFocusable(composedPath)\n          }\n        });\n      });\n    }\n    if (event.pointerType === \"touch\") {\n      pointerdownCleanups.forEach((fn) => fn());\n      pointerdownCleanups.add((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(doc, \"click\", handler, { once: true }));\n      pointerdownCleanups.add(parentWin.addEventListener(\"click\", handler, { once: true }));\n      pointerdownCleanups.add(frames.addEventListener(\"click\", handler, { once: true }));\n    } else {\n      handler();\n    }\n  }\n  const cleanups = /* @__PURE__ */ new Set();\n  const timer = setTimeout(() => {\n    cleanups.add((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(doc, \"pointerdown\", onPointerDown, true));\n    cleanups.add(parentWin.addEventListener(\"pointerdown\", onPointerDown, true));\n    cleanups.add(frames.addEventListener(\"pointerdown\", onPointerDown, true));\n  }, 0);\n  function onFocusin(event) {\n    const func = defer ? _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.raf : (v) => v();\n    func(() => {\n      if (!node || !isEventOutside(event)) return;\n      if (onFocusOutside || onInteractOutside) {\n        const handler = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.callAll)(onFocusOutside, onInteractOutside);\n        node.addEventListener(FOCUS_OUTSIDE_EVENT, handler, { once: true });\n      }\n      fireCustomEvent(node, FOCUS_OUTSIDE_EVENT, {\n        bubbles: false,\n        cancelable: true,\n        detail: {\n          originalEvent: event,\n          contextmenu: false,\n          focusable: (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isFocusable)((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getEventTarget)(event))\n        }\n      });\n    });\n  }\n  cleanups.add((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.addDomEvent)(doc, \"focusin\", onFocusin, true));\n  cleanups.add(parentWin.addEventListener(\"focusin\", onFocusin, true));\n  cleanups.add(frames.addEventListener(\"focusin\", onFocusin, true));\n  return () => {\n    clearTimeout(timer);\n    pointerdownCleanups.forEach((fn) => fn());\n    cleanups.forEach((fn) => fn());\n  };\n}\nfunction trackInteractOutside(nodeOrFn, options) {\n  const { defer } = options;\n  const func = defer ? _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.raf : (v) => v();\n  const cleanups = [];\n  cleanups.push(\n    func(() => {\n      const node = typeof nodeOrFn === \"function\" ? nodeOrFn() : nodeOrFn;\n      cleanups.push(trackInteractOutsideImpl(node, options));\n    })\n  );\n  return () => {\n    cleanups.forEach((fn) => fn?.());\n  };\n}\nfunction fireCustomEvent(el, type, init) {\n  const win = el.ownerDocument.defaultView || window;\n  const event = new win.CustomEvent(type, init);\n  return el.dispatchEvent(event);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/interact-outside/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/menu/dist/index.mjs":
/*!**************************************************!*\
  !*** ./node_modules/@zag-js/menu/dist/index.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   itemGroupLabelProps: () => (/* binding */ itemGroupLabelProps),\n/* harmony export */   itemGroupProps: () => (/* binding */ itemGroupProps),\n/* harmony export */   itemProps: () => (/* binding */ itemProps),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   optionItemProps: () => (/* binding */ optionItemProps),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitItemGroupLabelProps: () => (/* binding */ splitItemGroupLabelProps),\n/* harmony export */   splitItemGroupProps: () => (/* binding */ splitItemGroupProps),\n/* harmony export */   splitItemProps: () => (/* binding */ splitItemProps),\n/* harmony export */   splitOptionItemProps: () => (/* binding */ splitOptionItemProps),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/store/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_popper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/popper */ \"(ssr)/./node_modules/@zag-js/popper/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_dismissable__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @zag-js/dismissable */ \"(ssr)/./node_modules/@zag-js/dismissable/dist/index.mjs\");\n/* harmony import */ var _zag_js_rect_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/rect-utils */ \"(ssr)/./node_modules/@zag-js/rect-utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n\n\n// src/menu.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"menu\").parts(\n  \"arrow\",\n  \"arrowTip\",\n  \"content\",\n  \"contextTrigger\",\n  \"indicator\",\n  \"item\",\n  \"itemGroup\",\n  \"itemGroupLabel\",\n  \"itemIndicator\",\n  \"itemText\",\n  \"positioner\",\n  \"separator\",\n  \"trigger\",\n  \"triggerItem\"\n);\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getTriggerId: (ctx) => ctx.ids?.trigger ?? `menu:${ctx.id}:trigger`,\n  getContextTriggerId: (ctx) => ctx.ids?.contextTrigger ?? `menu:${ctx.id}:ctx-trigger`,\n  getContentId: (ctx) => ctx.ids?.content ?? `menu:${ctx.id}:content`,\n  getArrowId: (ctx) => ctx.ids?.arrow ?? `menu:${ctx.id}:arrow`,\n  getPositionerId: (ctx) => ctx.ids?.positioner ?? `menu:${ctx.id}:popper`,\n  getGroupId: (ctx, id) => ctx.ids?.group?.(id) ?? `menu:${ctx.id}:group:${id}`,\n  getGroupLabelId: (ctx, id) => ctx.ids?.groupLabel?.(id) ?? `menu:${ctx.id}:group-label:${id}`,\n  getContentEl: (ctx) => dom.getById(ctx, dom.getContentId(ctx)),\n  getPositionerEl: (ctx) => dom.getById(ctx, dom.getPositionerId(ctx)),\n  getTriggerEl: (ctx) => dom.getById(ctx, dom.getTriggerId(ctx)),\n  getHighlightedItemEl: (ctx) => ctx.highlightedValue ? dom.getById(ctx, ctx.highlightedValue) : null,\n  getArrowEl: (ctx) => dom.getById(ctx, dom.getArrowId(ctx)),\n  getElements: (ctx) => {\n    const ownerId = CSS.escape(dom.getContentId(ctx));\n    const selector = `[role^=\"menuitem\"][data-ownedby=${ownerId}]:not([data-disabled])`;\n    return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.queryAll)(dom.getContentEl(ctx), selector);\n  },\n  getFirstEl: (ctx) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.first)(dom.getElements(ctx)),\n  getLastEl: (ctx) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.last)(dom.getElements(ctx)),\n  getNextEl: (ctx, loop) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.nextById)(dom.getElements(ctx), ctx.highlightedValue, loop ?? ctx.loopFocus),\n  getPrevEl: (ctx, loop) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.prevById)(dom.getElements(ctx), ctx.highlightedValue, loop ?? ctx.loopFocus),\n  getElemByKey: (ctx, key) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getByTypeahead)(dom.getElements(ctx), { state: ctx.typeaheadState, key, activeId: ctx.highlightedValue }),\n  isTargetDisabled: (v) => {\n    return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isHTMLElement)(v) && (v.dataset.disabled === \"\" || v.hasAttribute(\"disabled\"));\n  },\n  isTriggerItem: (el) => {\n    return !!el?.getAttribute(\"role\")?.startsWith(\"menuitem\") && !!el?.hasAttribute(\"aria-controls\");\n  },\n  getOptionFromItemEl(el) {\n    return {\n      id: el.id,\n      name: el.dataset.name,\n      value: el.dataset.value,\n      valueText: el.dataset.valueText,\n      type: el.dataset.type\n    };\n  }\n});\n\n// src/menu.connect.ts\nfunction connect(state, send, normalize) {\n  const isSubmenu = state.context.isSubmenu;\n  const isTypingAhead = state.context.isTypingAhead;\n  const composite = state.context.composite;\n  const open = state.hasTag(\"open\");\n  const popperStyles = (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacementStyles)({\n    ...state.context.positioning,\n    placement: state.context.anchorPoint ? \"bottom\" : state.context.currentPlacement\n  });\n  function getItemState(props2) {\n    return {\n      disabled: !!props2.disabled,\n      highlighted: state.context.highlightedValue === props2.value\n    };\n  }\n  function getOptionItemProps(props2) {\n    const valueText = props2.valueText ?? props2.value;\n    return { ...props2, id: props2.value, valueText };\n  }\n  function getOptionItemState(props2) {\n    const itemState = getItemState(getOptionItemProps(props2));\n    return {\n      ...itemState,\n      checked: !!props2.checked\n    };\n  }\n  function getItemProps(props2) {\n    const { value: id, closeOnSelect, valueText } = props2;\n    const itemState = getItemState(props2);\n    return normalize.element({\n      ...parts.item.attrs,\n      id,\n      role: \"menuitem\",\n      \"aria-disabled\": itemState.disabled,\n      \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.disabled),\n      \"data-ownedby\": dom.getContentId(state.context),\n      \"data-highlighted\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.highlighted),\n      \"data-valuetext\": valueText,\n      onDragStart(event) {\n        const isLink = event.currentTarget.matches(\"a[href]\");\n        if (isLink) event.preventDefault();\n      },\n      onPointerMove(event) {\n        if (itemState.disabled) return;\n        if (event.pointerType !== \"mouse\") return;\n        const target = event.currentTarget;\n        if (itemState.highlighted) return;\n        send({ type: \"ITEM_POINTERMOVE\", id, target, closeOnSelect });\n      },\n      onPointerLeave(event) {\n        if (itemState.disabled) return;\n        if (event.pointerType !== \"mouse\") return;\n        const pointerMoved = state.previousEvent.type.includes(\"POINTER\");\n        if (!pointerMoved) return;\n        const target = event.currentTarget;\n        send({ type: \"ITEM_POINTERLEAVE\", id, target, closeOnSelect });\n      },\n      onPointerDown(event) {\n        if (itemState.disabled) return;\n        const target = event.currentTarget;\n        send({ type: \"ITEM_POINTERDOWN\", target, id, closeOnSelect });\n      },\n      onClick(event) {\n        if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isDownloadingEvent)(event)) return;\n        if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isOpeningInNewTab)(event)) return;\n        if (itemState.disabled) return;\n        const target = event.currentTarget;\n        send({ type: \"ITEM_CLICK\", target, id, closeOnSelect });\n      }\n    });\n  }\n  return {\n    highlightedValue: state.context.highlightedValue,\n    open,\n    setOpen(nextOpen) {\n      if (nextOpen === open) return;\n      send(nextOpen ? \"OPEN\" : \"CLOSE\");\n    },\n    setHighlightedValue(value) {\n      send({ type: \"HIGHLIGHTED.SET\", id: value });\n    },\n    setParent(parent) {\n      send({ type: \"PARENT.SET\", value: parent, id: parent.state.context.id });\n    },\n    setChild(child) {\n      send({ type: \"CHILD.SET\", value: child, id: child.state.context.id });\n    },\n    reposition(options = {}) {\n      send({ type: \"POSITIONING.SET\", options });\n    },\n    getContextTriggerProps() {\n      return normalize.element({\n        ...parts.contextTrigger.attrs,\n        dir: state.context.dir,\n        id: dom.getContextTriggerId(state.context),\n        onPointerDown(event) {\n          if (event.pointerType === \"mouse\") return;\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventPoint)(event);\n          send({ type: \"CONTEXT_MENU_START\", point });\n        },\n        onPointerCancel(event) {\n          if (event.pointerType === \"mouse\") return;\n          send(\"CONTEXT_MENU_CANCEL\");\n        },\n        onPointerMove(event) {\n          if (event.pointerType === \"mouse\") return;\n          send(\"CONTEXT_MENU_CANCEL\");\n        },\n        onPointerUp(event) {\n          if (event.pointerType === \"mouse\") return;\n          send(\"CONTEXT_MENU_CANCEL\");\n        },\n        onContextMenu(event) {\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventPoint)(event);\n          send({ type: \"CONTEXT_MENU\", point });\n          event.preventDefault();\n        },\n        style: {\n          WebkitTouchCallout: \"none\",\n          WebkitUserSelect: \"none\",\n          userSelect: \"none\"\n        }\n      });\n    },\n    getTriggerItemProps(childApi) {\n      return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_4__.mergeProps)(\n        getItemProps({ value: childApi.getTriggerProps().id }),\n        childApi.getTriggerProps()\n      );\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...isSubmenu ? parts.triggerItem.attrs : parts.trigger.attrs,\n        \"data-placement\": state.context.currentPlacement,\n        type: \"button\",\n        dir: state.context.dir,\n        id: dom.getTriggerId(state.context),\n        \"data-uid\": state.context.id,\n        \"aria-haspopup\": composite ? \"menu\" : \"dialog\",\n        \"aria-controls\": dom.getContentId(state.context),\n        \"aria-expanded\": open || void 0,\n        \"data-state\": open ? \"open\" : \"closed\",\n        onPointerMove(event) {\n          if (event.pointerType !== \"mouse\") return;\n          const disabled = dom.isTargetDisabled(event.currentTarget);\n          if (disabled || !isSubmenu) return;\n          send({ type: \"TRIGGER_POINTERMOVE\", target: event.currentTarget });\n        },\n        onPointerLeave(event) {\n          if (dom.isTargetDisabled(event.currentTarget)) return;\n          if (event.pointerType !== \"mouse\") return;\n          if (!isSubmenu) return;\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventPoint)(event);\n          send({ type: \"TRIGGER_POINTERLEAVE\", target: event.currentTarget, point });\n        },\n        onPointerDown(event) {\n          if (dom.isTargetDisabled(event.currentTarget)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isContextMenuEvent)(event)) return;\n          event.preventDefault();\n        },\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (dom.isTargetDisabled(event.currentTarget)) return;\n          send({ type: \"TRIGGER_CLICK\", target: event.currentTarget });\n        },\n        onBlur() {\n          send(\"TRIGGER_BLUR\");\n        },\n        onFocus() {\n          send(\"TRIGGER_FOCUS\");\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          const keyMap = {\n            ArrowDown() {\n              send(\"ARROW_DOWN\");\n            },\n            ArrowUp() {\n              send(\"ARROW_UP\");\n            },\n            Enter() {\n              send({ type: \"ARROW_DOWN\", src: \"enter\" });\n            },\n            Space() {\n              send({ type: \"ARROW_DOWN\", src: \"space\" });\n            }\n          };\n          const key = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventKey)(event, state.context);\n          const exec = keyMap[key];\n          if (exec) {\n            event.preventDefault();\n            exec(event);\n          }\n        }\n      });\n    },\n    getIndicatorProps() {\n      return normalize.element({\n        ...parts.indicator.attrs,\n        dir: state.context.dir,\n        \"data-state\": open ? \"open\" : \"closed\"\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        ...parts.positioner.attrs,\n        dir: state.context.dir,\n        id: dom.getPositionerId(state.context),\n        style: popperStyles.floating\n      });\n    },\n    getArrowProps() {\n      return normalize.element({\n        id: dom.getArrowId(state.context),\n        ...parts.arrow.attrs,\n        dir: state.context.dir,\n        style: popperStyles.arrow\n      });\n    },\n    getArrowTipProps() {\n      return normalize.element({\n        ...parts.arrowTip.attrs,\n        dir: state.context.dir,\n        style: popperStyles.arrowTip\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        id: dom.getContentId(state.context),\n        \"aria-label\": state.context[\"aria-label\"],\n        hidden: !open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        role: composite ? \"menu\" : \"dialog\",\n        tabIndex: 0,\n        dir: state.context.dir,\n        \"aria-activedescendant\": state.context.highlightedValue ?? void 0,\n        \"aria-labelledby\": dom.getTriggerId(state.context),\n        \"data-placement\": state.context.currentPlacement,\n        onPointerEnter(event) {\n          if (event.pointerType !== \"mouse\") return;\n          send(\"MENU_POINTERENTER\");\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isSelfTarget)(event)) return;\n          const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event);\n          const sameMenu = target?.closest(\"[role=menu]\") === event.currentTarget || target === event.currentTarget;\n          if (!sameMenu) return;\n          if (event.key === \"Tab\") {\n            const valid = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isValidTabEvent)(event);\n            if (!valid) {\n              event.preventDefault();\n              return;\n            }\n          }\n          const item = dom.getHighlightedItemEl(state.context);\n          const keyMap = {\n            ArrowDown() {\n              send(\"ARROW_DOWN\");\n            },\n            ArrowUp() {\n              send(\"ARROW_UP\");\n            },\n            ArrowLeft() {\n              send(\"ARROW_LEFT\");\n            },\n            ArrowRight() {\n              send(\"ARROW_RIGHT\");\n            },\n            Enter() {\n              send(\"ENTER\");\n              if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isAnchorElement)(item)) {\n                state.context.navigate({ value: state.context.highlightedValue, node: item });\n              }\n            },\n            Space(event2) {\n              if (isTypingAhead) {\n                send({ type: \"TYPEAHEAD\", key: event2.key });\n              } else {\n                keyMap.Enter?.(event2);\n              }\n            },\n            Home() {\n              send(\"HOME\");\n            },\n            End() {\n              send(\"END\");\n            }\n          };\n          const key = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventKey)(event, { dir: state.context.dir });\n          const exec = keyMap[key];\n          if (exec) {\n            exec(event);\n            event.stopPropagation();\n            event.preventDefault();\n            return;\n          }\n          if (!state.context.typeahead) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isPrintableKey)(event)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isModifierKey)(event)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isEditableElement)(target)) return;\n          send({ type: \"TYPEAHEAD\", key: event.key });\n          event.preventDefault();\n        }\n      });\n    },\n    getSeparatorProps() {\n      return normalize.element({\n        ...parts.separator.attrs,\n        role: \"separator\",\n        dir: state.context.dir,\n        \"aria-orientation\": \"horizontal\"\n      });\n    },\n    getItemState,\n    getItemProps,\n    getOptionItemState,\n    getOptionItemProps(props2) {\n      const { type, disabled, onCheckedChange, closeOnSelect } = props2;\n      const option = getOptionItemProps(props2);\n      const itemState = getOptionItemState(props2);\n      return {\n        ...getItemProps(option),\n        ...normalize.element({\n          \"data-type\": type,\n          ...parts.item.attrs,\n          dir: state.context.dir,\n          \"data-value\": option.value,\n          role: `menuitem${type}`,\n          \"aria-checked\": !!itemState.checked,\n          \"data-state\": itemState.checked ? \"checked\" : \"unchecked\",\n          onClick(event) {\n            if (disabled) return;\n            if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isDownloadingEvent)(event)) return;\n            if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isOpeningInNewTab)(event)) return;\n            const target = event.currentTarget;\n            send({ type: \"ITEM_CLICK\", target, option, closeOnSelect });\n            onCheckedChange?.(!itemState.checked);\n          }\n        })\n      };\n    },\n    getItemIndicatorProps(props2) {\n      const itemState = getOptionItemState(props2);\n      return normalize.element({\n        ...parts.itemIndicator.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.disabled),\n        \"data-highlighted\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.highlighted),\n        \"data-state\": itemState.checked ? \"checked\" : \"unchecked\",\n        hidden: !itemState.checked\n      });\n    },\n    getItemTextProps(props2) {\n      const itemState = getOptionItemState(props2);\n      return normalize.element({\n        ...parts.itemText.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.disabled),\n        \"data-highlighted\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.highlighted),\n        \"data-state\": itemState.checked ? \"checked\" : \"unchecked\"\n      });\n    },\n    getItemGroupLabelProps(props2) {\n      return normalize.element({\n        id: dom.getGroupLabelId(state.context, props2.htmlFor),\n        dir: state.context.dir,\n        ...parts.itemGroupLabel.attrs\n      });\n    },\n    getItemGroupProps(props2) {\n      return normalize.element({\n        id: dom.getGroupId(state.context, props2.id),\n        ...parts.itemGroup.attrs,\n        dir: state.context.dir,\n        \"aria-labelledby\": dom.getGroupLabelId(state.context, props2.id),\n        role: \"group\"\n      });\n    }\n  };\n}\nvar { not, and, or } = _zag_js_core__WEBPACK_IMPORTED_MODULE_4__.guards;\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_4__.createMachine)(\n    {\n      id: \"menu\",\n      initial: ctx.open ? \"open\" : \"idle\",\n      context: {\n        highlightedValue: null,\n        loopFocus: false,\n        anchorPoint: null,\n        closeOnSelect: true,\n        typeahead: true,\n        composite: true,\n        navigate(details) {\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.clickIfLink)(details.node);\n        },\n        ...ctx,\n        positioning: {\n          placement: \"bottom-start\",\n          gutter: 8,\n          ...ctx.positioning\n        },\n        intentPolygon: null,\n        parent: null,\n        lastHighlightedValue: null,\n        children: (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.cast)((0,_zag_js_core__WEBPACK_IMPORTED_MODULE_5__.ref)({})),\n        suspendPointer: false,\n        typeaheadState: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getByTypeahead.defaultOptions\n      },\n      computed: {\n        isSubmenu: (ctx2) => ctx2.parent !== null,\n        isRtl: (ctx2) => ctx2.dir === \"rtl\",\n        isTypingAhead: (ctx2) => ctx2.typeaheadState.keysSoFar !== \"\"\n      },\n      watch: {\n        isSubmenu: \"setSubmenuPlacement\",\n        anchorPoint: \"reposition\",\n        open: \"toggleVisibility\"\n      },\n      on: {\n        \"PARENT.SET\": {\n          actions: \"setParentMenu\"\n        },\n        \"CHILD.SET\": {\n          actions: \"setChildMenu\"\n        },\n        OPEN: [\n          {\n            guard: \"isOpenControlled\",\n            actions: \"invokeOnOpen\"\n          },\n          {\n            target: \"open\",\n            actions: \"invokeOnOpen\"\n          }\n        ],\n        OPEN_AUTOFOCUS: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            internal: true,\n            target: \"open\",\n            actions: [\"highlightFirstItem\", \"invokeOnOpen\"]\n          }\n        ],\n        CLOSE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: \"invokeOnClose\"\n          },\n          {\n            target: \"closed\",\n            actions: \"invokeOnClose\"\n          }\n        ],\n        \"HIGHLIGHTED.RESTORE\": {\n          actions: \"restoreHighlightedItem\"\n        },\n        \"HIGHLIGHTED.SET\": {\n          actions: \"setHighlightedItem\"\n        }\n      },\n      states: {\n        idle: {\n          tags: [\"closed\"],\n          on: {\n            \"CONTROLLED.OPEN\": \"open\",\n            \"CONTROLLED.CLOSE\": \"closed\",\n            CONTEXT_MENU_START: {\n              target: \"opening:contextmenu\",\n              actions: \"setAnchorPoint\"\n            },\n            CONTEXT_MENU: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"setAnchorPoint\", \"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"setAnchorPoint\", \"invokeOnOpen\"]\n              }\n            ],\n            TRIGGER_CLICK: [\n              {\n                guard: \"isOpenControlled\",\n                actions: \"invokeOnOpen\"\n              },\n              {\n                target: \"open\",\n                actions: \"invokeOnOpen\"\n              }\n            ],\n            TRIGGER_FOCUS: {\n              guard: not(\"isSubmenu\"),\n              target: \"closed\"\n            },\n            TRIGGER_POINTERMOVE: {\n              guard: \"isSubmenu\",\n              target: \"opening\"\n            }\n          }\n        },\n        \"opening:contextmenu\": {\n          tags: [\"closed\"],\n          after: {\n            LONG_PRESS_DELAY: [\n              {\n                guard: \"isOpenControlled\",\n                actions: \"invokeOnOpen\"\n              },\n              {\n                target: \"open\",\n                actions: \"invokeOnOpen\"\n              }\n            ]\n          },\n          on: {\n            \"CONTROLLED.OPEN\": \"open\",\n            \"CONTROLLED.CLOSE\": \"closed\",\n            CONTEXT_MENU_CANCEL: [\n              {\n                guard: \"isOpenControlled\",\n                actions: \"invokeOnClose\"\n              },\n              {\n                target: \"closed\",\n                actions: \"invokeOnClose\"\n              }\n            ]\n          }\n        },\n        opening: {\n          tags: [\"closed\"],\n          after: {\n            SUBMENU_OPEN_DELAY: [\n              {\n                guard: \"isOpenControlled\",\n                actions: \"invokeOnOpen\"\n              },\n              {\n                target: \"open\",\n                actions: \"invokeOnOpen\"\n              }\n            ]\n          },\n          on: {\n            \"CONTROLLED.OPEN\": \"open\",\n            \"CONTROLLED.CLOSE\": \"closed\",\n            BLUR: [\n              {\n                guard: \"isOpenControlled\",\n                actions: \"invokeOnClose\"\n              },\n              {\n                target: \"closed\",\n                actions: \"invokeOnClose\"\n              }\n            ],\n            TRIGGER_POINTERLEAVE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: \"invokeOnClose\"\n              },\n              {\n                target: \"closed\",\n                actions: \"invokeOnClose\"\n              }\n            ]\n          }\n        },\n        closing: {\n          tags: [\"open\"],\n          activities: [\"trackPointerMove\", \"trackInteractOutside\"],\n          after: {\n            SUBMENU_CLOSE_DELAY: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                target: \"closed\",\n                actions: [\"focusParentMenu\", \"restoreParentHighlightedItem\", \"invokeOnClose\"]\n              }\n            ]\n          },\n          on: {\n            \"CONTROLLED.OPEN\": \"open\",\n            \"CONTROLLED.CLOSE\": {\n              target: \"closed\",\n              actions: [\"focusParentMenu\", \"restoreParentHighlightedItem\"]\n            },\n            // don't invoke on open here since the menu is still open (we're only keeping it open)\n            MENU_POINTERENTER: {\n              target: \"open\",\n              actions: \"clearIntentPolygon\"\n            },\n            POINTER_MOVED_AWAY_FROM_SUBMENU: [\n              {\n                guard: \"isOpenControlled\",\n                actions: \"invokeOnClose\"\n              },\n              {\n                target: \"closed\",\n                actions: [\"focusParentMenu\", \"restoreParentHighlightedItem\"]\n              }\n            ]\n          }\n        },\n        closed: {\n          tags: [\"closed\"],\n          entry: [\"clearHighlightedItem\", \"focusTrigger\", \"resumePointer\"],\n          on: {\n            \"CONTROLLED.OPEN\": [\n              {\n                guard: or(\"isOpenAutoFocusEvent\", \"isArrowDownEvent\"),\n                target: \"open\",\n                actions: \"highlightFirstItem\"\n              },\n              {\n                guard: \"isArrowUpEvent\",\n                target: \"open\",\n                actions: \"highlightLastItem\"\n              },\n              {\n                target: \"open\"\n              }\n            ],\n            CONTEXT_MENU_START: {\n              target: \"opening:contextmenu\",\n              actions: \"setAnchorPoint\"\n            },\n            CONTEXT_MENU: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"setAnchorPoint\", \"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"setAnchorPoint\", \"invokeOnOpen\"]\n              }\n            ],\n            TRIGGER_CLICK: [\n              {\n                guard: \"isOpenControlled\",\n                actions: \"invokeOnOpen\"\n              },\n              {\n                target: \"open\",\n                actions: \"invokeOnOpen\"\n              }\n            ],\n            TRIGGER_POINTERMOVE: {\n              guard: \"isTriggerItem\",\n              target: \"opening\"\n            },\n            TRIGGER_BLUR: \"idle\",\n            ARROW_DOWN: [\n              {\n                guard: \"isOpenControlled\",\n                actions: \"invokeOnOpen\"\n              },\n              {\n                target: \"open\",\n                actions: [\"highlightFirstItem\", \"invokeOnOpen\"]\n              }\n            ],\n            ARROW_UP: [\n              {\n                guard: \"isOpenControlled\",\n                actions: \"invokeOnOpen\"\n              },\n              {\n                target: \"open\",\n                actions: [\"highlightLastItem\", \"invokeOnOpen\"]\n              }\n            ]\n          }\n        },\n        open: {\n          tags: [\"open\"],\n          activities: [\"trackInteractOutside\", \"trackPositioning\", \"scrollToHighlightedItem\"],\n          entry: [\"focusMenu\", \"resumePointer\"],\n          on: {\n            \"CONTROLLED.CLOSE\": [\n              {\n                target: \"closed\",\n                guard: \"isArrowLeftEvent\",\n                actions: [\"focusParentMenu\"]\n              },\n              {\n                target: \"closed\"\n              }\n            ],\n            TRIGGER_CLICK: [\n              {\n                guard: and(not(\"isTriggerItem\"), \"isOpenControlled\"),\n                actions: \"invokeOnClose\"\n              },\n              {\n                guard: not(\"isTriggerItem\"),\n                target: \"closed\",\n                actions: \"invokeOnClose\"\n              }\n            ],\n            ARROW_UP: {\n              actions: [\"highlightPrevItem\", \"focusMenu\"]\n            },\n            ARROW_DOWN: {\n              actions: [\"highlightNextItem\", \"focusMenu\"]\n            },\n            ARROW_LEFT: [\n              {\n                guard: and(\"isSubmenu\", \"isOpenControlled\"),\n                actions: \"invokeOnClose\"\n              },\n              {\n                guard: \"isSubmenu\",\n                target: \"closed\",\n                actions: [\"focusParentMenu\", \"invokeOnClose\"]\n              }\n            ],\n            HOME: {\n              actions: [\"highlightFirstItem\", \"focusMenu\"]\n            },\n            END: {\n              actions: [\"highlightLastItem\", \"focusMenu\"]\n            },\n            ARROW_RIGHT: {\n              guard: \"isTriggerItemHighlighted\",\n              actions: \"openSubmenu\"\n            },\n            ENTER: [\n              {\n                guard: \"isTriggerItemHighlighted\",\n                actions: \"openSubmenu\"\n              },\n              {\n                actions: \"clickHighlightedItem\"\n              }\n            ],\n            ITEM_POINTERMOVE: [\n              {\n                guard: not(\"suspendPointer\"),\n                actions: [\"setHighlightedItem\", \"focusMenu\"]\n              },\n              {\n                actions: \"setLastHighlightedItem\"\n              }\n            ],\n            ITEM_POINTERLEAVE: {\n              guard: and(not(\"suspendPointer\"), not(\"isTriggerItem\")),\n              actions: \"clearHighlightedItem\"\n            },\n            ITEM_CLICK: [\n              // == grouped ==\n              {\n                guard: and(\n                  not(\"isTriggerItemHighlighted\"),\n                  not(\"isHighlightedItemEditable\"),\n                  \"closeOnSelect\",\n                  \"isOpenControlled\"\n                ),\n                actions: [\"invokeOnSelect\", \"setOptionState\", \"closeRootMenu\", \"invokeOnClose\"]\n              },\n              {\n                guard: and(not(\"isTriggerItemHighlighted\"), not(\"isHighlightedItemEditable\"), \"closeOnSelect\"),\n                target: \"closed\",\n                actions: [\"invokeOnSelect\", \"setOptionState\", \"closeRootMenu\", \"invokeOnClose\"]\n              },\n              //\n              {\n                guard: and(not(\"isTriggerItemHighlighted\"), not(\"isHighlightedItemEditable\")),\n                actions: [\"invokeOnSelect\", \"setOptionState\"]\n              },\n              { actions: \"setHighlightedItem\" }\n            ],\n            TRIGGER_POINTERLEAVE: {\n              target: \"closing\",\n              actions: \"setIntentPolygon\"\n            },\n            ITEM_POINTERDOWN: {\n              actions: \"setHighlightedItem\"\n            },\n            TYPEAHEAD: {\n              actions: \"highlightMatchedItem\"\n            },\n            FOCUS_MENU: {\n              actions: \"focusMenu\"\n            },\n            \"POSITIONING.SET\": {\n              actions: \"reposition\"\n            }\n          }\n        }\n      }\n    },\n    {\n      delays: {\n        LONG_PRESS_DELAY: 700,\n        SUBMENU_OPEN_DELAY: 100,\n        SUBMENU_CLOSE_DELAY: 100\n      },\n      guards: {\n        closeOnSelect: (ctx2, evt) => !!(evt?.closeOnSelect ?? ctx2.closeOnSelect),\n        // whether the trigger is also a menu item\n        isTriggerItem: (_ctx, evt) => dom.isTriggerItem(evt.target),\n        // whether the trigger item is the active item\n        isTriggerItemHighlighted: (ctx2, evt) => {\n          const target = evt.target ?? dom.getHighlightedItemEl(ctx2);\n          return !!target?.hasAttribute(\"aria-controls\");\n        },\n        isSubmenu: (ctx2) => ctx2.isSubmenu,\n        suspendPointer: (ctx2) => ctx2.suspendPointer,\n        isHighlightedItemEditable: (ctx2) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isEditableElement)(dom.getHighlightedItemEl(ctx2)),\n        isWithinPolygon: (ctx2, evt) => {\n          if (!ctx2.intentPolygon) return false;\n          return (0,_zag_js_rect_utils__WEBPACK_IMPORTED_MODULE_6__.isPointInPolygon)(ctx2.intentPolygon, evt.point);\n        },\n        // guard assertions (for controlled mode)\n        isOpenControlled: (ctx2) => !!ctx2[\"open.controlled\"],\n        isArrowLeftEvent: (_ctx, evt) => evt.previousEvent?.type === \"ARROW_LEFT\",\n        isArrowUpEvent: (_ctx, evt) => evt.previousEvent?.type === \"ARROW_UP\",\n        isArrowDownEvent: (_ctx, evt) => evt.previousEvent?.type === \"ARROW_DOWN\",\n        isOpenAutoFocusEvent: (_ctx, evt) => evt.previousEvent?.type === \"OPEN_AUTOFOCUS\"\n      },\n      activities: {\n        trackPositioning(ctx2) {\n          if (ctx2.anchorPoint) return;\n          ctx2.currentPlacement = ctx2.positioning.placement;\n          const getPositionerEl = () => dom.getPositionerEl(ctx2);\n          return (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacement)(dom.getTriggerEl(ctx2), getPositionerEl, {\n            ...ctx2.positioning,\n            defer: true,\n            onComplete(data) {\n              ctx2.currentPlacement = data.placement;\n            }\n          });\n        },\n        trackInteractOutside(ctx2, _evt, { send }) {\n          const getContentEl = () => dom.getContentEl(ctx2);\n          let restoreFocus = true;\n          return (0,_zag_js_dismissable__WEBPACK_IMPORTED_MODULE_7__.trackDismissableElement)(getContentEl, {\n            defer: true,\n            exclude: [dom.getTriggerEl(ctx2)],\n            onInteractOutside: ctx2.onInteractOutside,\n            onFocusOutside: ctx2.onFocusOutside,\n            onEscapeKeyDown(event) {\n              ctx2.onEscapeKeyDown?.(event);\n              if (ctx2.isSubmenu) event.preventDefault();\n              closeRootMenu(ctx2);\n            },\n            onPointerDownOutside(event) {\n              restoreFocus = !event.detail.focusable;\n              ctx2.onPointerDownOutside?.(event);\n            },\n            onDismiss() {\n              send({ type: \"CLOSE\", src: \"interact-outside\", restoreFocus });\n            }\n          });\n        },\n        trackPointerMove(ctx2, _evt, { guards: guards2, send }) {\n          const { isWithinPolygon } = guards2;\n          ctx2.parent.state.context.suspendPointer = true;\n          const doc = dom.getDoc(ctx2);\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(doc, \"pointermove\", (e) => {\n            const point = { x: e.clientX, y: e.clientY };\n            const isMovingToSubmenu = isWithinPolygon(ctx2, { point });\n            if (!isMovingToSubmenu) {\n              send(\"POINTER_MOVED_AWAY_FROM_SUBMENU\");\n              ctx2.parent.state.context.suspendPointer = false;\n            }\n          });\n        },\n        scrollToHighlightedItem(ctx2, _evt, { getState }) {\n          const exec = () => {\n            const state = getState();\n            if (state.event.type.startsWith(\"ITEM_POINTER\")) return;\n            const itemEl = dom.getHighlightedItemEl(ctx2);\n            const contentEl2 = dom.getContentEl(ctx2);\n            (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.scrollIntoView)(itemEl, { rootEl: contentEl2, block: \"nearest\" });\n          };\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => exec());\n          const contentEl = () => dom.getContentEl(ctx2);\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.observeAttributes)(contentEl, {\n            defer: true,\n            attributes: [\"aria-activedescendant\"],\n            callback: exec\n          });\n        }\n      },\n      actions: {\n        setAnchorPoint(ctx2, evt) {\n          ctx2.anchorPoint = evt.point;\n        },\n        setSubmenuPlacement(ctx2) {\n          if (!ctx2.isSubmenu) return;\n          ctx2.positioning.placement = ctx2.isRtl ? \"left-start\" : \"right-start\";\n          ctx2.positioning.gutter = 0;\n        },\n        reposition(ctx2, evt) {\n          const getPositionerEl = () => dom.getPositionerEl(ctx2);\n          const getAnchorRect = ctx2.anchorPoint ? () => ({ width: 0, height: 0, ...ctx2.anchorPoint }) : void 0;\n          (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacement)(dom.getTriggerEl(ctx2), getPositionerEl, {\n            ...ctx2.positioning,\n            defer: true,\n            getAnchorRect,\n            ...evt.options ?? {},\n            listeners: false,\n            onComplete(data) {\n              ctx2.currentPlacement = data.placement;\n            }\n          });\n        },\n        setOptionState(_ctx, evt) {\n          if (!evt.option) return;\n          const { checked, onCheckedChange, type } = evt.option;\n          if (type === \"radio\") {\n            onCheckedChange?.(true);\n          } else if (type === \"checkbox\") {\n            onCheckedChange?.(!checked);\n          }\n        },\n        clickHighlightedItem(ctx2, _evt) {\n          const itemEl = dom.getHighlightedItemEl(ctx2);\n          if (!itemEl || itemEl.dataset.disabled) return;\n          queueMicrotask(() => itemEl.click());\n        },\n        setIntentPolygon(ctx2, evt) {\n          const menu = dom.getContentEl(ctx2);\n          const placement = ctx2.currentPlacement;\n          if (!menu || !placement) return;\n          const rect = menu.getBoundingClientRect();\n          const polygon = (0,_zag_js_rect_utils__WEBPACK_IMPORTED_MODULE_6__.getElementPolygon)(rect, placement);\n          if (!polygon) return;\n          const rightSide = (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacementSide)(placement) === \"right\";\n          const bleed = rightSide ? -5 : 5;\n          ctx2.intentPolygon = [{ ...evt.point, x: evt.point.x + bleed }, ...polygon];\n        },\n        clearIntentPolygon(ctx2) {\n          ctx2.intentPolygon = null;\n        },\n        resumePointer(ctx2) {\n          if (!ctx2.parent) return;\n          ctx2.parent.state.context.suspendPointer = false;\n        },\n        setHighlightedItem(ctx2, evt) {\n          set.highlighted(ctx2, evt.id);\n        },\n        clearHighlightedItem(ctx2) {\n          set.highlighted(ctx2, null);\n        },\n        focusMenu(ctx2) {\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            const contentEl = dom.getContentEl(ctx2);\n            const initialFocusEl = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getInitialFocus)({\n              root: contentEl,\n              enabled: !(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.contains)(contentEl, dom.getActiveElement(ctx2)),\n              filter(node) {\n                return !node.role?.startsWith(\"menuitem\");\n              }\n            });\n            initialFocusEl?.focus({ preventScroll: true });\n          });\n        },\n        highlightFirstItem(ctx2) {\n          const fn = !!dom.getContentEl(ctx2) ? queueMicrotask : _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf;\n          fn(() => {\n            const first2 = dom.getFirstEl(ctx2);\n            if (!first2) return;\n            set.highlighted(ctx2, first2.id);\n          });\n        },\n        highlightLastItem(ctx2) {\n          const fn = !!dom.getContentEl(ctx2) ? queueMicrotask : _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf;\n          fn(() => {\n            const last2 = dom.getLastEl(ctx2);\n            if (!last2) return;\n            set.highlighted(ctx2, last2.id);\n          });\n        },\n        highlightNextItem(ctx2, evt) {\n          const next = dom.getNextEl(ctx2, evt.loop);\n          set.highlighted(ctx2, next?.id ?? null);\n        },\n        highlightPrevItem(ctx2, evt) {\n          const prev = dom.getPrevEl(ctx2, evt.loop);\n          set.highlighted(ctx2, prev?.id ?? null);\n        },\n        invokeOnSelect(ctx2) {\n          if (!ctx2.highlightedValue) return;\n          ctx2.onSelect?.({ value: ctx2.highlightedValue });\n        },\n        focusTrigger(ctx2, evt) {\n          if (ctx2.isSubmenu || ctx2.anchorPoint || evt.restoreFocus === false) return;\n          queueMicrotask(() => dom.getTriggerEl(ctx2)?.focus({ preventScroll: true }));\n        },\n        highlightMatchedItem(ctx2, evt) {\n          const node = dom.getElemByKey(ctx2, evt.key);\n          if (!node) return;\n          set.highlighted(ctx2, node.id);\n        },\n        setParentMenu(ctx2, evt) {\n          ctx2.parent = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_5__.ref)(evt.value);\n        },\n        setChildMenu(ctx2, evt) {\n          ctx2.children[evt.id] = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_5__.ref)(evt.value);\n        },\n        closeRootMenu(ctx2) {\n          closeRootMenu(ctx2);\n        },\n        openSubmenu(ctx2) {\n          const item = dom.getHighlightedItemEl(ctx2);\n          const id = item?.getAttribute(\"data-uid\");\n          const child = id ? ctx2.children[id] : null;\n          child?.send(\"OPEN_AUTOFOCUS\");\n        },\n        focusParentMenu(ctx2) {\n          ctx2.parent?.send(\"FOCUS_MENU\");\n        },\n        setLastHighlightedItem(ctx2, evt) {\n          ctx2.lastHighlightedValue = evt.id;\n        },\n        restoreHighlightedItem(ctx2) {\n          if (!ctx2.lastHighlightedValue) return;\n          set.highlighted(ctx2, ctx2.lastHighlightedValue);\n          ctx2.lastHighlightedValue = null;\n        },\n        restoreParentHighlightedItem(ctx2) {\n          ctx2.parent?.send(\"HIGHLIGHTED.RESTORE\");\n        },\n        invokeOnOpen(ctx2) {\n          ctx2.onOpenChange?.({ open: true });\n        },\n        invokeOnClose(ctx2) {\n          ctx2.onOpenChange?.({ open: false });\n        },\n        toggleVisibility(ctx2, evt, { send }) {\n          send({ type: ctx2.open ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\", previousEvent: evt });\n        }\n      }\n    }\n  );\n}\nfunction closeRootMenu(ctx) {\n  let parent = ctx.parent;\n  while (parent && parent.state.context.isSubmenu) {\n    parent = parent.state.context.parent;\n  }\n  parent?.send(\"CLOSE\");\n}\nvar set = {\n  highlighted(ctx, value) {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual)(ctx.highlightedValue, value)) return;\n    ctx.highlightedValue = value;\n    ctx.onHighlightChange?.({ highlightedValue: value });\n  }\n};\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_8__.createProps)()([\n  \"anchorPoint\",\n  \"aria-label\",\n  \"closeOnSelect\",\n  \"composite\",\n  \"dir\",\n  \"getRootNode\",\n  \"highlightedValue\",\n  \"id\",\n  \"ids\",\n  \"loopFocus\",\n  \"navigate\",\n  \"onEscapeKeyDown\",\n  \"onFocusOutside\",\n  \"onHighlightChange\",\n  \"onInteractOutside\",\n  \"onOpenChange\",\n  \"onPointerDownOutside\",\n  \"onSelect\",\n  \"open.controlled\",\n  \"open\",\n  \"positioning\",\n  \"typeahead\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\nvar itemProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_8__.createProps)()([\"closeOnSelect\", \"disabled\", \"value\", \"valueText\"]);\nvar splitItemProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(itemProps);\nvar itemGroupLabelProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_8__.createProps)()([\"htmlFor\"]);\nvar splitItemGroupLabelProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(itemGroupLabelProps);\nvar itemGroupProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_8__.createProps)()([\"id\"]);\nvar splitItemGroupProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(itemGroupProps);\nvar optionItemProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_8__.createProps)()([\n  \"disabled\",\n  \"valueText\",\n  \"closeOnSelect\",\n  \"type\",\n  \"value\",\n  \"checked\",\n  \"onCheckedChange\"\n]);\nvar splitOptionItemProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(optionItemProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/menu/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/number-input/dist/index.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/@zag-js/number-input/dist/index.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/store/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _internationalized_number__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @internationalized/number */ \"(ssr)/./node_modules/@internationalized/number/dist/NumberParser.mjs\");\n\n\n\n\n\n\n// src/number-input.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"numberInput\").parts(\n  \"root\",\n  \"label\",\n  \"input\",\n  \"control\",\n  \"valueText\",\n  \"incrementTrigger\",\n  \"decrementTrigger\",\n  \"scrubber\"\n);\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getRootId: (ctx) => ctx.ids?.root ?? `number-input:${ctx.id}`,\n  getInputId: (ctx) => ctx.ids?.input ?? `number-input:${ctx.id}:input`,\n  getIncrementTriggerId: (ctx) => ctx.ids?.incrementTrigger ?? `number-input:${ctx.id}:inc`,\n  getDecrementTriggerId: (ctx) => ctx.ids?.decrementTrigger ?? `number-input:${ctx.id}:dec`,\n  getScrubberId: (ctx) => ctx.ids?.scrubber ?? `number-input:${ctx.id}:scrubber`,\n  getCursorId: (ctx) => `number-input:${ctx.id}:cursor`,\n  getLabelId: (ctx) => ctx.ids?.label ?? `number-input:${ctx.id}:label`,\n  getInputEl: (ctx) => dom.getById(ctx, dom.getInputId(ctx)),\n  getIncrementTriggerEl: (ctx) => dom.getById(ctx, dom.getIncrementTriggerId(ctx)),\n  getDecrementTriggerEl: (ctx) => dom.getById(ctx, dom.getDecrementTriggerId(ctx)),\n  getScrubberEl: (ctx) => dom.getById(ctx, dom.getScrubberId(ctx)),\n  getCursorEl: (ctx) => dom.getDoc(ctx).getElementById(dom.getCursorId(ctx)),\n  getPressedTriggerEl: (ctx, hint = ctx.hint) => {\n    let btnEl = null;\n    if (hint === \"increment\") {\n      btnEl = dom.getIncrementTriggerEl(ctx);\n    }\n    if (hint === \"decrement\") {\n      btnEl = dom.getDecrementTriggerEl(ctx);\n    }\n    return btnEl;\n  },\n  setupVirtualCursor(ctx) {\n    if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isSafari)()) return;\n    dom.createVirtualCursor(ctx);\n    return () => {\n      dom.getCursorEl(ctx)?.remove();\n    };\n  },\n  preventTextSelection(ctx) {\n    const doc = dom.getDoc(ctx);\n    const html = doc.documentElement;\n    const body = doc.body;\n    body.style.pointerEvents = \"none\";\n    html.style.userSelect = \"none\";\n    html.style.cursor = \"ew-resize\";\n    return () => {\n      body.style.pointerEvents = \"\";\n      html.style.userSelect = \"\";\n      html.style.cursor = \"\";\n      if (!html.style.length) {\n        html.removeAttribute(\"style\");\n      }\n      if (!body.style.length) {\n        body.removeAttribute(\"style\");\n      }\n    };\n  },\n  getMousemoveValue(ctx, event) {\n    const win = dom.getWin(ctx);\n    const x = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.roundToDpr)(event.movementX, win.devicePixelRatio);\n    const y = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.roundToDpr)(event.movementY, win.devicePixelRatio);\n    let hint = x > 0 ? \"increment\" : x < 0 ? \"decrement\" : null;\n    if (ctx.isRtl && hint === \"increment\") hint = \"decrement\";\n    if (ctx.isRtl && hint === \"decrement\") hint = \"increment\";\n    const point = {\n      x: ctx.scrubberCursorPoint.x + x,\n      y: ctx.scrubberCursorPoint.y + y\n    };\n    const width = win.innerWidth;\n    const half = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.roundToDpr)(7.5, win.devicePixelRatio);\n    point.x = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.wrap)(point.x + half, width) - half;\n    return { hint, point };\n  },\n  createVirtualCursor(ctx) {\n    const doc = dom.getDoc(ctx);\n    const el = doc.createElement(\"div\");\n    el.className = \"scrubber--cursor\";\n    el.id = dom.getCursorId(ctx);\n    Object.assign(el.style, {\n      width: \"15px\",\n      height: \"15px\",\n      position: \"fixed\",\n      pointerEvents: \"none\",\n      left: \"0px\",\n      top: \"0px\",\n      zIndex: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.MAX_Z_INDEX,\n      transform: ctx.scrubberCursorPoint ? `translate3d(${ctx.scrubberCursorPoint.x}px, ${ctx.scrubberCursorPoint.y}px, 0px)` : void 0,\n      willChange: \"transform\"\n    });\n    el.innerHTML = `\n        <svg width=\"46\" height=\"15\" style=\"left: -15.5px; position: absolute; top: 0; filter: drop-shadow(rgba(0, 0, 0, 0.4) 0px 1px 1.1px);\">\n          <g transform=\"translate(2 3)\">\n            <path fill-rule=\"evenodd\" d=\"M 15 4.5L 15 2L 11.5 5.5L 15 9L 15 6.5L 31 6.5L 31 9L 34.5 5.5L 31 2L 31 4.5Z\" style=\"stroke-width: 2px; stroke: white;\"></path>\n            <path fill-rule=\"evenodd\" d=\"M 15 4.5L 15 2L 11.5 5.5L 15 9L 15 6.5L 31 6.5L 31 9L 34.5 5.5L 31 2L 31 4.5Z\"></path>\n          </g>\n        </svg>`;\n    doc.body.appendChild(el);\n  }\n});\n\n// src/number-input.connect.ts\nfunction connect(state, send, normalize) {\n  const focused = state.hasTag(\"focus\");\n  const disabled = state.context.isDisabled;\n  const readOnly = state.context.readOnly;\n  const empty = state.context.isValueEmpty;\n  const invalid = state.context.isOutOfRange || !!state.context.invalid;\n  const isIncrementDisabled = disabled || !state.context.canIncrement || readOnly;\n  const isDecrementDisabled = disabled || !state.context.canDecrement || readOnly;\n  const translations = state.context.translations;\n  return {\n    focused,\n    invalid,\n    empty,\n    value: state.context.formattedValue,\n    valueAsNumber: state.context.valueAsNumber,\n    setValue(value) {\n      send({ type: \"VALUE.SET\", value });\n    },\n    clearValue() {\n      send(\"VALUE.CLEAR\");\n    },\n    increment() {\n      send(\"VALUE.INCREMENT\");\n    },\n    decrement() {\n      send(\"VALUE.DECREMENT\");\n    },\n    setToMax() {\n      send({ type: \"VALUE.SET\", value: state.context.max });\n    },\n    setToMin() {\n      send({ type: \"VALUE.SET\", value: state.context.min });\n    },\n    focus() {\n      dom.getInputEl(state.context)?.focus();\n    },\n    getRootProps() {\n      return normalize.element({\n        id: dom.getRootId(state.context),\n        ...parts.root.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid)\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        id: dom.getLabelId(state.context),\n        htmlFor: dom.getInputId(state.context)\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        dir: state.context.dir,\n        role: \"group\",\n        \"aria-disabled\": disabled,\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"aria-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(state.context.invalid)\n      });\n    },\n    getValueTextProps() {\n      return normalize.element({\n        ...parts.valueText.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused)\n      });\n    },\n    getInputProps() {\n      return normalize.input({\n        ...parts.input.attrs,\n        dir: state.context.dir,\n        name: state.context.name,\n        form: state.context.form,\n        id: dom.getInputId(state.context),\n        role: \"spinbutton\",\n        defaultValue: state.context.formattedValue,\n        pattern: state.context.pattern,\n        inputMode: state.context.inputMode,\n        \"aria-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(invalid),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        disabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        readOnly: state.context.readOnly,\n        required: state.context.required,\n        autoComplete: \"off\",\n        autoCorrect: \"off\",\n        spellCheck: \"false\",\n        type: \"text\",\n        \"aria-roledescription\": \"numberfield\",\n        \"aria-valuemin\": state.context.min,\n        \"aria-valuemax\": state.context.max,\n        \"aria-valuenow\": Number.isNaN(state.context.valueAsNumber) ? void 0 : state.context.valueAsNumber,\n        \"aria-valuetext\": state.context.valueText,\n        onFocus() {\n          send(\"INPUT.FOCUS\");\n        },\n        onBlur() {\n          send(\"INPUT.BLUR\");\n        },\n        onInput(event) {\n          send({ type: \"INPUT.CHANGE\", target: event.currentTarget, hint: \"set\" });\n        },\n        onBeforeInput(event) {\n          try {\n            const { selectionStart, selectionEnd, value } = event.currentTarget;\n            const nextValue = value.slice(0, selectionStart) + (event.data ?? \"\") + value.slice(selectionEnd);\n            const isValid = state.context.parser.isValidPartialNumber(nextValue);\n            if (!isValid) {\n              event.preventDefault();\n            }\n          } catch {\n          }\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (readOnly) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isComposingEvent)(event)) return;\n          const step = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventStep)(event) * state.context.step;\n          const keyMap = {\n            ArrowUp() {\n              send({ type: \"INPUT.ARROW_UP\", step });\n              event.preventDefault();\n            },\n            ArrowDown() {\n              send({ type: \"INPUT.ARROW_DOWN\", step });\n              event.preventDefault();\n            },\n            Home() {\n              if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isModifierKey)(event)) return;\n              send(\"INPUT.HOME\");\n              event.preventDefault();\n            },\n            End() {\n              if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isModifierKey)(event)) return;\n              send(\"INPUT.END\");\n              event.preventDefault();\n            },\n            Enter() {\n              send(\"INPUT.ENTER\");\n            }\n          };\n          const exec = keyMap[event.key];\n          exec?.(event);\n        }\n      });\n    },\n    getDecrementTriggerProps() {\n      return normalize.button({\n        ...parts.decrementTrigger.attrs,\n        dir: state.context.dir,\n        id: dom.getDecrementTriggerId(state.context),\n        disabled: isDecrementDisabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(isDecrementDisabled),\n        \"aria-label\": translations.decrementLabel,\n        type: \"button\",\n        tabIndex: -1,\n        \"aria-controls\": dom.getInputId(state.context),\n        onPointerDown(event) {\n          if (isDecrementDisabled || !(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isLeftClick)(event)) return;\n          send({ type: \"TRIGGER.PRESS_DOWN\", hint: \"decrement\", pointerType: event.pointerType });\n          if (event.pointerType === \"mouse\") {\n            event.preventDefault();\n          }\n          if (event.pointerType === \"touch\") {\n            event.currentTarget?.focus({ preventScroll: true });\n          }\n        },\n        onPointerUp(event) {\n          send({ type: \"TRIGGER.PRESS_UP\", hint: \"decrement\", pointerType: event.pointerType });\n        },\n        onPointerLeave() {\n          if (isDecrementDisabled) return;\n          send({ type: \"TRIGGER.PRESS_UP\", hint: \"decrement\" });\n        }\n      });\n    },\n    getIncrementTriggerProps() {\n      return normalize.button({\n        ...parts.incrementTrigger.attrs,\n        dir: state.context.dir,\n        id: dom.getIncrementTriggerId(state.context),\n        disabled: isIncrementDisabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(isIncrementDisabled),\n        \"aria-label\": translations.incrementLabel,\n        type: \"button\",\n        tabIndex: -1,\n        \"aria-controls\": dom.getInputId(state.context),\n        onPointerDown(event) {\n          if (isIncrementDisabled || !(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isLeftClick)(event)) return;\n          send({ type: \"TRIGGER.PRESS_DOWN\", hint: \"increment\", pointerType: event.pointerType });\n          if (event.pointerType === \"mouse\") {\n            event.preventDefault();\n          }\n          if (event.pointerType === \"touch\") {\n            event.currentTarget?.focus({ preventScroll: true });\n          }\n        },\n        onPointerUp(event) {\n          send({ type: \"TRIGGER.PRESS_UP\", hint: \"increment\", pointerType: event.pointerType });\n        },\n        onPointerLeave(event) {\n          send({ type: \"TRIGGER.PRESS_UP\", hint: \"increment\", pointerType: event.pointerType });\n        }\n      });\n    },\n    getScrubberProps() {\n      return normalize.element({\n        ...parts.scrubber.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        id: dom.getScrubberId(state.context),\n        role: \"presentation\",\n        onMouseDown(event) {\n          if (disabled) return;\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventPoint)(event);\n          const win = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getWindow)(event.currentTarget);\n          const dpr = win.devicePixelRatio;\n          point.x = point.x - (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.roundToDpr)(7.5, dpr);\n          point.y = point.y - (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.roundToDpr)(7.5, dpr);\n          send({ type: \"SCRUBBER.PRESS_DOWN\", point });\n          event.preventDefault();\n        },\n        style: {\n          cursor: disabled ? void 0 : \"ew-resize\"\n        }\n      });\n    }\n  };\n}\n\n// src/cursor.ts\nfunction recordCursor(inputEl) {\n  if (inputEl.ownerDocument.activeElement !== inputEl) return;\n  try {\n    const { selectionStart: start, selectionEnd: end, value } = inputEl;\n    const beforeTxt = value.substring(0, start);\n    const afterTxt = value.substring(end);\n    return {\n      start,\n      end,\n      value,\n      beforeTxt,\n      afterTxt\n    };\n  } catch {\n  }\n}\nfunction restoreCursor(inputEl, selection) {\n  if (inputEl.ownerDocument.activeElement !== inputEl) return;\n  if (!selection) {\n    inputEl.setSelectionRange(inputEl.value.length, inputEl.value.length);\n    return;\n  }\n  try {\n    const { value } = inputEl;\n    const { beforeTxt = \"\", afterTxt = \"\", start } = selection;\n    let startPos = value.length;\n    if (value.endsWith(afterTxt)) {\n      startPos = value.length - afterTxt.length;\n    } else if (value.startsWith(beforeTxt)) {\n      startPos = beforeTxt.length;\n    } else if (start != null) {\n      const beforeLastChar = beforeTxt[start - 1];\n      const newIndex = value.indexOf(beforeLastChar, start - 1);\n      if (newIndex !== -1) {\n        startPos = newIndex + 1;\n      }\n    }\n    inputEl.setSelectionRange(startPos, startPos);\n  } catch {\n  }\n}\nvar createFormatter = (locale, options = {}) => {\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.ref)(new Intl.NumberFormat(locale, options));\n};\nvar createParser = (locale, options = {}) => {\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.ref)(new _internationalized_number__WEBPACK_IMPORTED_MODULE_4__.NumberParser(locale, options));\n};\nvar parseValue = (ctx, value) => {\n  if (!ctx.formatOptions) return parseFloat(value);\n  return ctx.parser.parse(String(value));\n};\nvar formatValue = (ctx, value) => {\n  if (Number.isNaN(value)) return \"\";\n  if (!ctx.formatOptions) return value.toString();\n  return ctx.formatter.format(value);\n};\n\n// src/number-input.machine.ts\nvar { not, and } = _zag_js_core__WEBPACK_IMPORTED_MODULE_5__.guards;\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_5__.createMachine)(\n    {\n      id: \"number-input\",\n      initial: \"idle\",\n      context: {\n        dir: \"ltr\",\n        locale: \"en-US\",\n        focusInputOnChange: true,\n        clampValueOnBlur: true,\n        allowOverflow: false,\n        inputMode: \"decimal\",\n        pattern: \"[0-9]*(.[0-9]+)?\",\n        value: \"\",\n        step: 1,\n        min: Number.MIN_SAFE_INTEGER,\n        max: Number.MAX_SAFE_INTEGER,\n        invalid: false,\n        spinOnPress: true,\n        disabled: false,\n        readOnly: false,\n        ...ctx,\n        hint: null,\n        scrubberCursorPoint: null,\n        fieldsetDisabled: false,\n        formatter: createFormatter(ctx.locale || \"en-US\", ctx.formatOptions),\n        parser: createParser(ctx.locale || \"en-US\", ctx.formatOptions),\n        translations: {\n          incrementLabel: \"increment value\",\n          decrementLabel: \"decrease value\",\n          ...ctx.translations\n        }\n      },\n      computed: {\n        isRtl: (ctx2) => ctx2.dir === \"rtl\",\n        valueAsNumber: (ctx2) => parseValue(ctx2, ctx2.value),\n        formattedValue: (ctx2) => formatValue(ctx2, ctx2.valueAsNumber),\n        isAtMin: (ctx2) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isValueAtMin)(ctx2.valueAsNumber, ctx2.min),\n        isAtMax: (ctx2) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isValueAtMax)(ctx2.valueAsNumber, ctx2.max),\n        isOutOfRange: (ctx2) => !(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isValueWithinRange)(ctx2.valueAsNumber, ctx2.min, ctx2.max),\n        isValueEmpty: (ctx2) => ctx2.value === \"\",\n        isDisabled: (ctx2) => !!ctx2.disabled || ctx2.fieldsetDisabled,\n        canIncrement: (ctx2) => ctx2.allowOverflow || !ctx2.isAtMax,\n        canDecrement: (ctx2) => ctx2.allowOverflow || !ctx2.isAtMin,\n        valueText: (ctx2) => ctx2.translations.valueText?.(ctx2.value)\n      },\n      watch: {\n        formatOptions: [\"setFormatterAndParser\", \"syncInputElement\"],\n        locale: [\"setFormatterAndParser\", \"syncInputElement\"],\n        value: [\"syncInputElement\"],\n        isOutOfRange: [\"invokeOnInvalid\"],\n        scrubberCursorPoint: [\"setVirtualCursorPosition\"]\n      },\n      activities: [\"trackFormControl\"],\n      on: {\n        \"VALUE.SET\": {\n          actions: [\"setRawValue\", \"setHintToSet\"]\n        },\n        \"VALUE.CLEAR\": {\n          actions: [\"clearValue\"]\n        },\n        \"VALUE.INCREMENT\": {\n          actions: [\"increment\"]\n        },\n        \"VALUE.DECREMENT\": {\n          actions: [\"decrement\"]\n        }\n      },\n      states: {\n        idle: {\n          on: {\n            \"TRIGGER.PRESS_DOWN\": [\n              { guard: \"isTouchPointer\", target: \"before:spin\", actions: [\"setHint\"] },\n              {\n                target: \"before:spin\",\n                actions: [\"focusInput\", \"invokeOnFocus\", \"setHint\"]\n              }\n            ],\n            \"SCRUBBER.PRESS_DOWN\": {\n              target: \"scrubbing\",\n              actions: [\"focusInput\", \"invokeOnFocus\", \"setHint\", \"setCursorPoint\"]\n            },\n            \"INPUT.FOCUS\": {\n              target: \"focused\",\n              actions: [\"focusInput\", \"invokeOnFocus\"]\n            }\n          }\n        },\n        focused: {\n          tags: \"focus\",\n          activities: \"attachWheelListener\",\n          on: {\n            \"TRIGGER.PRESS_DOWN\": [\n              { guard: \"isTouchPointer\", target: \"before:spin\", actions: [\"setHint\"] },\n              { target: \"before:spin\", actions: [\"focusInput\", \"setHint\"] }\n            ],\n            \"SCRUBBER.PRESS_DOWN\": {\n              target: \"scrubbing\",\n              actions: [\"focusInput\", \"setHint\", \"setCursorPoint\"]\n            },\n            \"INPUT.ARROW_UP\": {\n              actions: \"increment\"\n            },\n            \"INPUT.ARROW_DOWN\": {\n              actions: \"decrement\"\n            },\n            \"INPUT.HOME\": {\n              actions: \"decrementToMin\"\n            },\n            \"INPUT.END\": {\n              actions: \"incrementToMax\"\n            },\n            \"INPUT.CHANGE\": {\n              actions: [\"setValue\", \"setHint\"]\n            },\n            \"INPUT.BLUR\": [\n              {\n                guard: and(\"clampValueOnBlur\", not(\"isInRange\")),\n                target: \"idle\",\n                actions: [\"setClampedValue\", \"clearHint\", \"invokeOnBlur\"]\n              },\n              {\n                target: \"idle\",\n                actions: [\"setFormattedValue\", \"clearHint\", \"invokeOnBlur\"]\n              }\n            ],\n            \"INPUT.ENTER\": {\n              actions: [\"setFormattedValue\", \"clearHint\", \"invokeOnBlur\"]\n            }\n          }\n        },\n        \"before:spin\": {\n          tags: \"focus\",\n          activities: \"trackButtonDisabled\",\n          entry: (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_5__.choose)([\n            { guard: \"isIncrementHint\", actions: \"increment\" },\n            { guard: \"isDecrementHint\", actions: \"decrement\" }\n          ]),\n          after: {\n            CHANGE_DELAY: {\n              target: \"spinning\",\n              guard: and(\"isInRange\", \"spinOnPress\")\n            }\n          },\n          on: {\n            \"TRIGGER.PRESS_UP\": [\n              { guard: \"isTouchPointer\", target: \"focused\", actions: \"clearHint\" },\n              { target: \"focused\", actions: [\"focusInput\", \"clearHint\"] }\n            ]\n          }\n        },\n        spinning: {\n          tags: \"focus\",\n          activities: \"trackButtonDisabled\",\n          every: [\n            {\n              delay: \"CHANGE_INTERVAL\",\n              guard: and(not(\"isAtMin\"), \"isIncrementHint\"),\n              actions: \"increment\"\n            },\n            {\n              delay: \"CHANGE_INTERVAL\",\n              guard: and(not(\"isAtMax\"), \"isDecrementHint\"),\n              actions: \"decrement\"\n            }\n          ],\n          on: {\n            \"TRIGGER.PRESS_UP\": {\n              target: \"focused\",\n              actions: [\"focusInput\", \"clearHint\"]\n            }\n          }\n        },\n        scrubbing: {\n          tags: \"focus\",\n          activities: [\"activatePointerLock\", \"trackMousemove\", \"setupVirtualCursor\", \"preventTextSelection\"],\n          on: {\n            \"SCRUBBER.POINTER_UP\": {\n              target: \"focused\",\n              actions: [\"focusInput\", \"clearCursorPoint\"]\n            },\n            \"SCRUBBER.POINTER_MOVE\": [\n              {\n                guard: \"isIncrementHint\",\n                actions: [\"increment\", \"setCursorPoint\"]\n              },\n              {\n                guard: \"isDecrementHint\",\n                actions: [\"decrement\", \"setCursorPoint\"]\n              }\n            ]\n          }\n        }\n      }\n    },\n    {\n      delays: {\n        CHANGE_INTERVAL: 50,\n        CHANGE_DELAY: 300\n      },\n      guards: {\n        clampValueOnBlur: (ctx2) => ctx2.clampValueOnBlur,\n        isAtMin: (ctx2) => ctx2.isAtMin,\n        spinOnPress: (ctx2) => !!ctx2.spinOnPress,\n        isAtMax: (ctx2) => ctx2.isAtMax,\n        isInRange: (ctx2) => !ctx2.isOutOfRange,\n        isDecrementHint: (ctx2, evt) => (evt.hint ?? ctx2.hint) === \"decrement\",\n        isIncrementHint: (ctx2, evt) => (evt.hint ?? ctx2.hint) === \"increment\",\n        isTouchPointer: (_ctx, evt) => evt.pointerType === \"touch\"\n      },\n      activities: {\n        trackFormControl(ctx2, _evt, { initialContext }) {\n          const inputEl = dom.getInputEl(ctx2);\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackFormControl)(inputEl, {\n            onFieldsetDisabledChange(disabled) {\n              ctx2.fieldsetDisabled = disabled;\n            },\n            onFormReset() {\n              set.value(ctx2, initialContext.value);\n            }\n          });\n        },\n        setupVirtualCursor(ctx2) {\n          return dom.setupVirtualCursor(ctx2);\n        },\n        preventTextSelection(ctx2) {\n          return dom.preventTextSelection(ctx2);\n        },\n        trackButtonDisabled(ctx2, _evt, { send }) {\n          const btn = dom.getPressedTriggerEl(ctx2, ctx2.hint);\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.observeAttributes)(btn, {\n            attributes: [\"disabled\"],\n            callback() {\n              send({ type: \"TRIGGER.PRESS_UP\", src: \"attr\" });\n            }\n          });\n        },\n        attachWheelListener(ctx2, _evt, { send }) {\n          const inputEl = dom.getInputEl(ctx2);\n          if (!inputEl || !dom.isActiveElement(ctx2, inputEl) || !ctx2.allowMouseWheel) return;\n          function onWheel(event) {\n            event.preventDefault();\n            const dir = Math.sign(event.deltaY) * -1;\n            if (dir === 1) {\n              send(\"VALUE.INCREMENT\");\n            } else if (dir === -1) {\n              send(\"VALUE.DECREMENT\");\n            }\n          }\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(inputEl, \"wheel\", onWheel, { passive: false });\n        },\n        activatePointerLock(ctx2) {\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isSafari)()) return;\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.requestPointerLock)(dom.getDoc(ctx2));\n        },\n        trackMousemove(ctx2, _evt, { send }) {\n          const doc = dom.getDoc(ctx2);\n          function onMousemove(event) {\n            if (!ctx2.scrubberCursorPoint) return;\n            const value = dom.getMousemoveValue(ctx2, event);\n            if (!value.hint) return;\n            send({\n              type: \"SCRUBBER.POINTER_MOVE\",\n              hint: value.hint,\n              point: value.point\n            });\n          }\n          function onMouseup() {\n            send(\"SCRUBBER.POINTER_UP\");\n          }\n          return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.callAll)(\n            (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(doc, \"mousemove\", onMousemove, false),\n            (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(doc, \"mouseup\", onMouseup, false)\n          );\n        }\n      },\n      actions: {\n        focusInput(ctx2) {\n          if (!ctx2.focusInputOnChange) return;\n          const inputEl = dom.getInputEl(ctx2);\n          if (dom.isActiveElement(ctx2, inputEl)) return;\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => inputEl?.focus({ preventScroll: true }));\n        },\n        increment(ctx2, evt) {\n          const nextValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.incrementValue)(ctx2.valueAsNumber, evt.step ?? ctx2.step);\n          const value = formatValue(ctx2, (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.clampValue)(nextValue, ctx2.min, ctx2.max));\n          set.value(ctx2, value);\n        },\n        decrement(ctx2, evt) {\n          const nextValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.decrementValue)(ctx2.valueAsNumber, evt.step ?? ctx2.step);\n          const value = formatValue(ctx2, (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.clampValue)(nextValue, ctx2.min, ctx2.max));\n          set.value(ctx2, value);\n        },\n        setClampedValue(ctx2) {\n          const nextValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.clampValue)(ctx2.valueAsNumber, ctx2.min, ctx2.max);\n          set.value(ctx2, formatValue(ctx2, nextValue));\n        },\n        setRawValue(ctx2, evt) {\n          const parsedValue = parseValue(ctx2, evt.value);\n          const value = formatValue(ctx2, (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.clampValue)(parsedValue, ctx2.min, ctx2.max));\n          set.value(ctx2, value);\n        },\n        setValue(ctx2, evt) {\n          const value = evt.target?.value ?? evt.value;\n          set.value(ctx2, value);\n        },\n        clearValue(ctx2) {\n          set.value(ctx2, \"\");\n        },\n        incrementToMax(ctx2) {\n          const value = formatValue(ctx2, ctx2.max);\n          set.value(ctx2, value);\n        },\n        decrementToMin(ctx2) {\n          const value = formatValue(ctx2, ctx2.min);\n          set.value(ctx2, value);\n        },\n        setHint(ctx2, evt) {\n          ctx2.hint = evt.hint;\n        },\n        clearHint(ctx2) {\n          ctx2.hint = null;\n        },\n        setHintToSet(ctx2) {\n          ctx2.hint = \"set\";\n        },\n        invokeOnFocus(ctx2) {\n          ctx2.onFocusChange?.({\n            focused: true,\n            value: ctx2.formattedValue,\n            valueAsNumber: ctx2.valueAsNumber\n          });\n        },\n        invokeOnBlur(ctx2) {\n          ctx2.onFocusChange?.({\n            focused: false,\n            value: ctx2.formattedValue,\n            valueAsNumber: ctx2.valueAsNumber\n          });\n        },\n        invokeOnInvalid(ctx2) {\n          if (!ctx2.isOutOfRange) return;\n          const reason = ctx2.valueAsNumber > ctx2.max ? \"rangeOverflow\" : \"rangeUnderflow\";\n          ctx2.onValueInvalid?.({\n            reason,\n            value: ctx2.formattedValue,\n            valueAsNumber: ctx2.valueAsNumber\n          });\n        },\n        syncInputElement(ctx2, evt) {\n          const value = evt.type.endsWith(\"CHANGE\") ? ctx2.value : ctx2.formattedValue;\n          sync.input(ctx2, value);\n        },\n        setFormattedValue(ctx2) {\n          set.value(ctx2, ctx2.formattedValue);\n        },\n        setCursorPoint(ctx2, evt) {\n          ctx2.scrubberCursorPoint = evt.point;\n        },\n        clearCursorPoint(ctx2) {\n          ctx2.scrubberCursorPoint = null;\n        },\n        setVirtualCursorPosition(ctx2) {\n          const cursorEl = dom.getCursorEl(ctx2);\n          if (!cursorEl || !ctx2.scrubberCursorPoint) return;\n          const { x, y } = ctx2.scrubberCursorPoint;\n          cursorEl.style.transform = `translate3d(${x}px, ${y}px, 0px)`;\n        },\n        setFormatterAndParser(ctx2) {\n          if (!ctx2.locale) return;\n          ctx2.formatter = createFormatter(ctx2.locale, ctx2.formatOptions);\n          ctx2.parser = createParser(ctx2.locale, ctx2.formatOptions);\n        }\n      },\n      compareFns: {\n        formatOptions: (a, b) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual)(a, b),\n        scrubberCursorPoint: (a, b) => (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual)(a, b)\n      }\n    }\n  );\n}\nvar sync = {\n  input(ctx, value) {\n    const inputEl = dom.getInputEl(ctx);\n    if (!inputEl) return;\n    const sel = recordCursor(inputEl);\n    (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n      (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.setElementValue)(inputEl, value);\n      restoreCursor(inputEl, sel);\n    });\n  }\n};\nvar invoke = {\n  onChange: (ctx) => {\n    ctx.onValueChange?.({\n      value: ctx.value,\n      valueAsNumber: ctx.valueAsNumber\n    });\n  }\n};\nvar set = {\n  value: (ctx, value) => {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual)(ctx.value, value)) return;\n    ctx.value = value;\n    invoke.onChange(ctx);\n  }\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/number-input/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/pin-input/dist/index.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/@zag-js/pin-input/dist/index.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n\n\n\n\n\n// src/pin-input.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"pinInput\").parts(\"root\", \"label\", \"input\", \"control\");\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getRootId: (ctx) => ctx.ids?.root ?? `pin-input:${ctx.id}`,\n  getInputId: (ctx, id) => ctx.ids?.input?.(id) ?? `pin-input:${ctx.id}:${id}`,\n  getHiddenInputId: (ctx) => ctx.ids?.hiddenInput ?? `pin-input:${ctx.id}:hidden`,\n  getLabelId: (ctx) => ctx.ids?.label ?? `pin-input:${ctx.id}:label`,\n  getControlId: (ctx) => ctx.ids?.control ?? `pin-input:${ctx.id}:control`,\n  getRootEl: (ctx) => dom.getById(ctx, dom.getRootId(ctx)),\n  getInputEls: (ctx) => {\n    const ownerId = CSS.escape(dom.getRootId(ctx));\n    const selector = `input[data-ownedby=${ownerId}]`;\n    return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.queryAll)(dom.getRootEl(ctx), selector);\n  },\n  getInputEl: (ctx, id) => dom.getById(ctx, dom.getInputId(ctx, id)),\n  getFocusedInputEl: (ctx) => dom.getInputEls(ctx)[ctx.focusedIndex],\n  getFirstInputEl: (ctx) => dom.getInputEls(ctx)[0],\n  getHiddenInputEl: (ctx) => dom.getById(ctx, dom.getHiddenInputId(ctx))\n});\n\n// src/pin-input.utils.ts\nvar REGEX = {\n  numeric: /^[0-9]+$/,\n  alphabetic: /^[A-Za-z]+$/,\n  alphanumeric: /^[a-zA-Z0-9]+$/i\n};\nfunction isValidType(ctx, value) {\n  if (!ctx.type) return true;\n  return !!REGEX[ctx.type]?.test(value);\n}\nfunction isValidValue(ctx, value) {\n  if (!ctx.pattern) return isValidType(ctx, value);\n  const regex = new RegExp(ctx.pattern, \"g\");\n  return regex.test(value);\n}\n\n// src/pin-input.connect.ts\nfunction connect(state, send, normalize) {\n  const complete = state.context.isValueComplete;\n  const invalid = state.context.invalid;\n  const focusedIndex = state.context.focusedIndex;\n  const translations = state.context.translations;\n  function focus() {\n    dom.getFirstInputEl(state.context)?.focus();\n  }\n  return {\n    focus,\n    value: state.context.value,\n    valueAsString: state.context.valueAsString,\n    complete,\n    setValue(value) {\n      if (!Array.isArray(value)) {\n        (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.invariant)(\"[pin-input/setValue] value must be an array\");\n      }\n      send({ type: \"VALUE.SET\", value });\n    },\n    clearValue() {\n      send({ type: \"VALUE.CLEAR\" });\n    },\n    setValueAtIndex(index, value) {\n      send({ type: \"VALUE.SET\", value, index });\n    },\n    getRootProps() {\n      return normalize.element({\n        dir: state.context.dir,\n        ...parts.root.attrs,\n        id: dom.getRootId(state.context),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.disabled),\n        \"data-complete\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(complete),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.readOnly)\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        dir: state.context.dir,\n        htmlFor: dom.getHiddenInputId(state.context),\n        id: dom.getLabelId(state.context),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.disabled),\n        \"data-complete\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(complete),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.readOnly),\n        onClick(event) {\n          event.preventDefault();\n          focus();\n        }\n      });\n    },\n    getHiddenInputProps() {\n      return normalize.input({\n        \"aria-hidden\": true,\n        type: \"text\",\n        tabIndex: -1,\n        id: dom.getHiddenInputId(state.context),\n        readOnly: state.context.readOnly,\n        disabled: state.context.disabled,\n        required: state.context.required,\n        name: state.context.name,\n        form: state.context.form,\n        style: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.visuallyHiddenStyle,\n        maxLength: state.context.valueLength,\n        defaultValue: state.context.valueAsString\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        dir: state.context.dir,\n        id: dom.getControlId(state.context)\n      });\n    },\n    getInputProps(props) {\n      const { index } = props;\n      const inputType = state.context.type === \"numeric\" ? \"tel\" : \"text\";\n      return normalize.input({\n        ...parts.input.attrs,\n        dir: state.context.dir,\n        disabled: state.context.disabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.disabled),\n        \"data-complete\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(complete),\n        id: dom.getInputId(state.context, index.toString()),\n        \"data-ownedby\": dom.getRootId(state.context),\n        \"aria-label\": translations.inputLabel(index, state.context.valueLength),\n        inputMode: state.context.otp || state.context.type === \"numeric\" ? \"numeric\" : \"text\",\n        \"aria-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(invalid),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid),\n        type: state.context.mask ? \"password\" : inputType,\n        defaultValue: state.context.value[index] || \"\",\n        readOnly: state.context.readOnly,\n        autoCapitalize: \"none\",\n        autoComplete: state.context.otp ? \"one-time-code\" : \"off\",\n        placeholder: focusedIndex === index ? \"\" : state.context.placeholder,\n        onBeforeInput(event) {\n          try {\n            const value = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getBeforeInputValue)(event);\n            const isValid = isValidValue(state.context, value);\n            if (!isValid) {\n              send({ type: \"VALUE.INVALID\", value });\n              event.preventDefault();\n            }\n            if (value.length > 2) {\n              event.currentTarget.setSelectionRange(0, 1, \"forward\");\n            }\n          } catch {\n          }\n        },\n        onChange(event) {\n          const evt = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getNativeEvent)(event);\n          const { value } = event.currentTarget;\n          if (evt.inputType === \"insertFromPaste\" || value.length > 2) {\n            send({ type: \"INPUT.PASTE\", value });\n            event.currentTarget.value = value[0];\n            event.preventDefault();\n            return;\n          }\n          if (evt.inputType === \"deleteContentBackward\") {\n            send(\"INPUT.BACKSPACE\");\n            return;\n          }\n          send({ type: \"INPUT.CHANGE\", value, index });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isComposingEvent)(event)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isModifierKey)(event)) return;\n          const keyMap = {\n            Backspace() {\n              send(\"INPUT.BACKSPACE\");\n            },\n            Delete() {\n              send(\"INPUT.DELETE\");\n            },\n            ArrowLeft() {\n              send(\"INPUT.ARROW_LEFT\");\n            },\n            ArrowRight() {\n              send(\"INPUT.ARROW_RIGHT\");\n            },\n            Enter() {\n              send(\"INPUT.ENTER\");\n            }\n          };\n          const exec = keyMap[(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventKey)(event, state.context)];\n          if (exec) {\n            exec(event);\n            event.preventDefault();\n          }\n        },\n        onFocus() {\n          send({ type: \"INPUT.FOCUS\", index });\n        },\n        onBlur() {\n          send({ type: \"INPUT.BLUR\", index });\n        }\n      });\n    }\n  };\n}\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)(\n    {\n      id: \"pin-input\",\n      initial: \"idle\",\n      context: {\n        value: [],\n        placeholder: \"\\u25CB\",\n        otp: false,\n        type: \"numeric\",\n        ...ctx,\n        focusedIndex: -1,\n        translations: {\n          inputLabel: (index, length) => `pin code ${index + 1} of ${length}`,\n          ...ctx.translations\n        }\n      },\n      computed: {\n        valueLength: (ctx2) => ctx2.value.length,\n        filledValueLength: (ctx2) => ctx2.value.filter((v) => v?.trim() !== \"\").length,\n        isValueComplete: (ctx2) => ctx2.valueLength === ctx2.filledValueLength,\n        valueAsString: (ctx2) => ctx2.value.join(\"\"),\n        focusedValue: (ctx2) => ctx2.value[ctx2.focusedIndex] || \"\"\n      },\n      entry: (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.choose)([\n        {\n          guard: \"autoFocus\",\n          actions: [\"setupValue\", \"setFocusIndexToFirst\"]\n        },\n        { actions: [\"setupValue\"] }\n      ]),\n      watch: {\n        focusedIndex: [\"focusInput\", \"selectInputIfNeeded\"],\n        value: [\"syncInputElements\"],\n        isValueComplete: [\"invokeOnComplete\", \"blurFocusedInputIfNeeded\"]\n      },\n      on: {\n        \"VALUE.SET\": [\n          {\n            guard: \"hasIndex\",\n            actions: [\"setValueAtIndex\"]\n          },\n          { actions: [\"setValue\"] }\n        ],\n        \"VALUE.CLEAR\": {\n          actions: [\"clearValue\", \"setFocusIndexToFirst\"]\n        }\n      },\n      states: {\n        idle: {\n          on: {\n            \"INPUT.FOCUS\": {\n              target: \"focused\",\n              actions: \"setFocusedIndex\"\n            }\n          }\n        },\n        focused: {\n          on: {\n            \"INPUT.CHANGE\": [\n              {\n                guard: \"isFinalValue\",\n                actions: [\"setFocusedValue\", \"syncInputValue\"]\n              },\n              {\n                actions: [\"setFocusedValue\", \"setNextFocusedIndex\", \"syncInputValue\"]\n              }\n            ],\n            \"INPUT.PASTE\": {\n              actions: [\"setPastedValue\", \"setLastValueFocusIndex\"]\n            },\n            \"INPUT.BLUR\": {\n              target: \"idle\",\n              actions: \"clearFocusedIndex\"\n            },\n            \"INPUT.DELETE\": {\n              guard: \"hasValue\",\n              actions: \"clearFocusedValue\"\n            },\n            \"INPUT.ARROW_LEFT\": {\n              actions: \"setPrevFocusedIndex\"\n            },\n            \"INPUT.ARROW_RIGHT\": {\n              actions: \"setNextFocusedIndex\"\n            },\n            \"INPUT.BACKSPACE\": [\n              {\n                guard: \"hasValue\",\n                actions: [\"clearFocusedValue\"]\n              },\n              {\n                actions: [\"setPrevFocusedIndex\", \"clearFocusedValue\"]\n              }\n            ],\n            \"INPUT.ENTER\": {\n              guard: \"isValueComplete\",\n              actions: \"requestFormSubmit\"\n            },\n            \"VALUE.INVALID\": {\n              actions: \"invokeOnInvalid\"\n            }\n          }\n        }\n      }\n    },\n    {\n      guards: {\n        autoFocus: (ctx2) => !!ctx2.autoFocus,\n        isValueEmpty: (_ctx, evt) => evt.value === \"\",\n        hasValue: (ctx2) => ctx2.value[ctx2.focusedIndex] !== \"\",\n        isValueComplete: (ctx2) => ctx2.isValueComplete,\n        isFinalValue: (ctx2) => ctx2.filledValueLength + 1 === ctx2.valueLength && ctx2.value.findIndex((v) => v.trim() === \"\") === ctx2.focusedIndex,\n        hasIndex: (_ctx, evt) => evt.index !== void 0,\n        isDisabled: (ctx2) => !!ctx2.disabled\n      },\n      actions: {\n        setupValue(ctx2) {\n          if (ctx2.value.length) return;\n          const inputEls = dom.getInputEls(ctx2);\n          const emptyValues = Array.from({ length: inputEls.length }).fill(\"\");\n          assignValue(ctx2, emptyValues);\n        },\n        focusInput(ctx2) {\n          if (ctx2.focusedIndex === -1) return;\n          dom.getFocusedInputEl(ctx2)?.focus({ preventScroll: true });\n        },\n        selectInputIfNeeded(ctx2) {\n          if (!ctx2.selectOnFocus || ctx2.focusedIndex === -1) return;\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            dom.getFocusedInputEl(ctx2)?.select();\n          });\n        },\n        invokeOnComplete(ctx2) {\n          if (!ctx2.isValueComplete) return;\n          ctx2.onValueComplete?.({\n            value: Array.from(ctx2.value),\n            valueAsString: ctx2.valueAsString\n          });\n        },\n        invokeOnInvalid(ctx2, evt) {\n          ctx2.onValueInvalid?.({\n            value: evt.value,\n            index: ctx2.focusedIndex\n          });\n        },\n        clearFocusedIndex(ctx2) {\n          ctx2.focusedIndex = -1;\n        },\n        setFocusedIndex(ctx2, evt) {\n          ctx2.focusedIndex = evt.index;\n        },\n        setValue(ctx2, evt) {\n          set.value(ctx2, evt.value);\n        },\n        setFocusedValue(ctx2, evt) {\n          const nextValue = getNextValue(ctx2.focusedValue, evt.value);\n          set.valueAtIndex(ctx2, ctx2.focusedIndex, nextValue);\n        },\n        revertInputValue(ctx2) {\n          const inputEl = dom.getFocusedInputEl(ctx2);\n          dom.setValue(inputEl, ctx2.focusedValue);\n        },\n        syncInputValue(ctx2, evt) {\n          const inputEl = dom.getInputEl(ctx2, evt.index.toString());\n          dom.setValue(inputEl, ctx2.value[evt.index]);\n        },\n        syncInputElements(ctx2) {\n          const inputEls = dom.getInputEls(ctx2);\n          inputEls.forEach((inputEl, index) => {\n            dom.setValue(inputEl, ctx2.value[index]);\n          });\n        },\n        setPastedValue(ctx2, evt) {\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            const startIndex = Math.min(ctx2.focusedIndex, ctx2.filledValueLength);\n            const left = startIndex > 0 ? ctx2.valueAsString.substring(0, ctx2.focusedIndex) : \"\";\n            const right = evt.value.substring(0, ctx2.valueLength - startIndex);\n            const value = left + right;\n            set.value(ctx2, value.split(\"\"));\n          });\n        },\n        setValueAtIndex(ctx2, evt) {\n          const nextValue = getNextValue(ctx2.focusedValue, evt.value);\n          set.valueAtIndex(ctx2, evt.index, nextValue);\n        },\n        clearValue(ctx2) {\n          const nextValue = Array.from({ length: ctx2.valueLength }).fill(\"\");\n          set.value(ctx2, nextValue);\n        },\n        clearFocusedValue(ctx2) {\n          set.valueAtIndex(ctx2, ctx2.focusedIndex, \"\");\n        },\n        setFocusIndexToFirst(ctx2) {\n          ctx2.focusedIndex = 0;\n        },\n        setNextFocusedIndex(ctx2) {\n          ctx2.focusedIndex = Math.min(ctx2.focusedIndex + 1, ctx2.valueLength - 1);\n        },\n        setPrevFocusedIndex(ctx2) {\n          ctx2.focusedIndex = Math.max(ctx2.focusedIndex - 1, 0);\n        },\n        setLastValueFocusIndex(ctx2) {\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            ctx2.focusedIndex = Math.min(ctx2.filledValueLength, ctx2.valueLength - 1);\n          });\n        },\n        blurFocusedInputIfNeeded(ctx2) {\n          if (!ctx2.blurOnComplete) return;\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            dom.getFocusedInputEl(ctx2)?.blur();\n          });\n        },\n        requestFormSubmit(ctx2) {\n          if (!ctx2.name || !ctx2.isValueComplete) return;\n          const inputEl = dom.getHiddenInputEl(ctx2);\n          inputEl?.form?.requestSubmit();\n        }\n      }\n    }\n  );\n}\nfunction assignValue(ctx, value) {\n  const arr = Array.isArray(value) ? value : value.split(\"\").filter(Boolean);\n  arr.forEach((value2, index) => {\n    ctx.value[index] = value2;\n  });\n}\nfunction getNextValue(current, next) {\n  let nextValue = next;\n  if (current[0] === next[0]) nextValue = next[1];\n  else if (current[0] === next[1]) nextValue = next[0];\n  return nextValue.split(\"\")[nextValue.length - 1];\n}\nvar invoke = {\n  change(ctx) {\n    ctx.onValueChange?.({\n      value: Array.from(ctx.value),\n      valueAsString: ctx.valueAsString\n    });\n    const inputEl = dom.getHiddenInputEl(ctx);\n    (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dispatchInputValueEvent)(inputEl, { value: ctx.valueAsString });\n  }\n};\nvar set = {\n  value(ctx, value) {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual)(ctx.value, value)) return;\n    assignValue(ctx, value);\n    invoke.change(ctx);\n  },\n  valueAtIndex(ctx, index, value) {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual)(ctx.value[index], value)) return;\n    ctx.value[index] = value;\n    invoke.change(ctx);\n  }\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/pin-input/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/popover/dist/index.mjs":
/*!*****************************************************!*\
  !*** ./node_modules/@zag-js/popover/dist/index.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_popper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/popper */ \"(ssr)/./node_modules/@zag-js/popper/dist/index.mjs\");\n/* harmony import */ var _zag_js_aria_hidden__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/aria-hidden */ \"(ssr)/./node_modules/@zag-js/aria-hidden/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_dismissable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/dismissable */ \"(ssr)/./node_modules/@zag-js/dismissable/dist/index.mjs\");\n/* harmony import */ var _zag_js_focus_trap__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @zag-js/focus-trap */ \"(ssr)/./node_modules/@zag-js/focus-trap/dist/index.mjs\");\n/* harmony import */ var _zag_js_remove_scroll__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @zag-js/remove-scroll */ \"(ssr)/./node_modules/@zag-js/remove-scroll/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n\n\n\n\n// src/popover.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"popover\").parts(\n  \"arrow\",\n  \"arrowTip\",\n  \"anchor\",\n  \"trigger\",\n  \"indicator\",\n  \"positioner\",\n  \"content\",\n  \"title\",\n  \"description\",\n  \"closeTrigger\"\n);\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getAnchorId: (ctx) => ctx.ids?.anchor ?? `popover:${ctx.id}:anchor`,\n  getTriggerId: (ctx) => ctx.ids?.trigger ?? `popover:${ctx.id}:trigger`,\n  getContentId: (ctx) => ctx.ids?.content ?? `popover:${ctx.id}:content`,\n  getPositionerId: (ctx) => ctx.ids?.positioner ?? `popover:${ctx.id}:popper`,\n  getArrowId: (ctx) => ctx.ids?.arrow ?? `popover:${ctx.id}:arrow`,\n  getTitleId: (ctx) => ctx.ids?.title ?? `popover:${ctx.id}:title`,\n  getDescriptionId: (ctx) => ctx.ids?.description ?? `popover:${ctx.id}:desc`,\n  getCloseTriggerId: (ctx) => ctx.ids?.closeTrigger ?? `popover:${ctx.id}:close`,\n  getAnchorEl: (ctx) => dom.getById(ctx, dom.getAnchorId(ctx)),\n  getTriggerEl: (ctx) => dom.getById(ctx, dom.getTriggerId(ctx)),\n  getContentEl: (ctx) => dom.getById(ctx, dom.getContentId(ctx)),\n  getPositionerEl: (ctx) => dom.getById(ctx, dom.getPositionerId(ctx)),\n  getTitleEl: (ctx) => dom.getById(ctx, dom.getTitleId(ctx)),\n  getDescriptionEl: (ctx) => dom.getById(ctx, dom.getDescriptionId(ctx)),\n  getFocusableEls: (ctx) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getFocusables)(dom.getContentEl(ctx)),\n  getFirstFocusableEl: (ctx) => dom.getFocusableEls(ctx)[0]\n});\n\n// src/popover.connect.ts\nfunction connect(state, send, normalize) {\n  const open = state.matches(\"open\");\n  const currentPlacement = state.context.currentPlacement;\n  const portalled = state.context.currentPortalled;\n  const rendered = state.context.renderedElements;\n  const popperStyles = (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_2__.getPlacementStyles)({\n    ...state.context.positioning,\n    placement: currentPlacement\n  });\n  return {\n    portalled,\n    open,\n    setOpen(nextOpen) {\n      if (nextOpen === open) return;\n      send(nextOpen ? \"OPEN\" : \"CLOSE\");\n    },\n    reposition(options = {}) {\n      send({ type: \"POSITIONING.SET\", options });\n    },\n    getArrowProps() {\n      return normalize.element({\n        id: dom.getArrowId(state.context),\n        ...parts.arrow.attrs,\n        dir: state.context.dir,\n        style: popperStyles.arrow\n      });\n    },\n    getArrowTipProps() {\n      return normalize.element({\n        ...parts.arrowTip.attrs,\n        dir: state.context.dir,\n        style: popperStyles.arrowTip\n      });\n    },\n    getAnchorProps() {\n      return normalize.element({\n        ...parts.anchor.attrs,\n        dir: state.context.dir,\n        id: dom.getAnchorId(state.context)\n      });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        dir: state.context.dir,\n        type: \"button\",\n        \"data-placement\": currentPlacement,\n        id: dom.getTriggerId(state.context),\n        \"aria-haspopup\": \"dialog\",\n        \"aria-expanded\": open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-controls\": dom.getContentId(state.context),\n        onPointerDown(event) {\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isSafari)()) {\n            event.currentTarget.focus();\n          }\n        },\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send(\"TOGGLE\");\n        },\n        onBlur(event) {\n          send({ type: \"TRIGGER_BLUR\", target: event.relatedTarget });\n        }\n      });\n    },\n    getIndicatorProps() {\n      return normalize.element({\n        ...parts.indicator.attrs,\n        dir: state.context.dir,\n        \"data-state\": open ? \"open\" : \"closed\"\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        id: dom.getPositionerId(state.context),\n        ...parts.positioner.attrs,\n        dir: state.context.dir,\n        style: popperStyles.floating\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: state.context.dir,\n        id: dom.getContentId(state.context),\n        tabIndex: -1,\n        role: \"dialog\",\n        hidden: !open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-expanded\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(open),\n        \"aria-labelledby\": rendered.title ? dom.getTitleId(state.context) : void 0,\n        \"aria-describedby\": rendered.description ? dom.getDescriptionId(state.context) : void 0,\n        \"data-placement\": currentPlacement\n      });\n    },\n    getTitleProps() {\n      return normalize.element({\n        ...parts.title.attrs,\n        id: dom.getTitleId(state.context),\n        dir: state.context.dir\n      });\n    },\n    getDescriptionProps() {\n      return normalize.element({\n        ...parts.description.attrs,\n        id: dom.getDescriptionId(state.context),\n        dir: state.context.dir\n      });\n    },\n    getCloseTriggerProps() {\n      return normalize.button({\n        ...parts.closeTrigger.attrs,\n        dir: state.context.dir,\n        id: dom.getCloseTriggerId(state.context),\n        type: \"button\",\n        \"aria-label\": \"close\",\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send(\"CLOSE\");\n        }\n      });\n    }\n  };\n}\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_3__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_4__.createMachine)(\n    {\n      id: \"popover\",\n      initial: ctx.open ? \"open\" : \"closed\",\n      context: {\n        closeOnInteractOutside: true,\n        closeOnEscape: true,\n        autoFocus: true,\n        modal: false,\n        portalled: true,\n        positioning: {\n          placement: \"bottom\",\n          ...ctx.positioning\n        },\n        currentPlacement: void 0,\n        ...ctx,\n        renderedElements: {\n          title: true,\n          description: true\n        }\n      },\n      computed: {\n        currentPortalled: (ctx2) => !!ctx2.modal || !!ctx2.portalled\n      },\n      watch: {\n        open: [\"toggleVisibility\"]\n      },\n      entry: [\"checkRenderedElements\"],\n      states: {\n        closed: {\n          on: {\n            \"CONTROLLED.OPEN\": {\n              target: \"open\",\n              actions: [\"setInitialFocus\"]\n            },\n            TOGGLE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\", \"setInitialFocus\"]\n              }\n            ],\n            OPEN: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\", \"setInitialFocus\"]\n              }\n            ]\n          }\n        },\n        open: {\n          activities: [\n            \"trapFocus\",\n            \"preventScroll\",\n            \"hideContentBelow\",\n            \"trackPositioning\",\n            \"trackDismissableElement\",\n            \"proxyTabFocus\"\n          ],\n          on: {\n            \"CONTROLLED.CLOSE\": {\n              target: \"closed\",\n              actions: [\"setFinalFocus\"]\n            },\n            CLOSE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                target: \"closed\",\n                actions: [\"invokeOnClose\", \"setFinalFocus\"]\n              }\n            ],\n            TOGGLE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                target: \"closed\",\n                actions: [\"invokeOnClose\"]\n              }\n            ],\n            \"POSITIONING.SET\": {\n              actions: \"reposition\"\n            }\n          }\n        }\n      }\n    },\n    {\n      guards: {\n        isOpenControlled: (ctx2) => !!ctx2[\"open.controlled\"]\n      },\n      activities: {\n        trackPositioning(ctx2) {\n          ctx2.currentPlacement = ctx2.positioning.placement;\n          const anchorEl = dom.getAnchorEl(ctx2) ?? dom.getTriggerEl(ctx2);\n          const getPositionerEl = () => dom.getPositionerEl(ctx2);\n          return (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_2__.getPlacement)(anchorEl, getPositionerEl, {\n            ...ctx2.positioning,\n            defer: true,\n            onComplete(data) {\n              ctx2.currentPlacement = data.placement;\n            }\n          });\n        },\n        trackDismissableElement(ctx2, _evt, { send }) {\n          const getContentEl = () => dom.getContentEl(ctx2);\n          let restoreFocus = true;\n          return (0,_zag_js_dismissable__WEBPACK_IMPORTED_MODULE_5__.trackDismissableElement)(getContentEl, {\n            pointerBlocking: ctx2.modal,\n            exclude: dom.getTriggerEl(ctx2),\n            defer: true,\n            onEscapeKeyDown(event) {\n              ctx2.onEscapeKeyDown?.(event);\n              if (ctx2.closeOnEscape) return;\n              event.preventDefault();\n            },\n            onInteractOutside(event) {\n              ctx2.onInteractOutside?.(event);\n              if (event.defaultPrevented) return;\n              restoreFocus = !(event.detail.focusable || event.detail.contextmenu);\n              if (!ctx2.closeOnInteractOutside) {\n                event.preventDefault();\n              }\n            },\n            onPointerDownOutside: ctx2.onPointerDownOutside,\n            onFocusOutside: ctx2.onFocusOutside,\n            persistentElements: ctx2.persistentElements,\n            onDismiss() {\n              send({ type: \"CLOSE\", src: \"interact-outside\", restoreFocus });\n            }\n          });\n        },\n        proxyTabFocus(ctx2) {\n          if (ctx2.modal || !ctx2.portalled) return;\n          const getContentEl = () => dom.getContentEl(ctx2);\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.proxyTabFocus)(getContentEl, {\n            triggerElement: dom.getTriggerEl(ctx2),\n            defer: true,\n            onFocus(el) {\n              el.focus({ preventScroll: true });\n            }\n          });\n        },\n        hideContentBelow(ctx2) {\n          if (!ctx2.modal) return;\n          const getElements = () => [dom.getContentEl(ctx2), dom.getTriggerEl(ctx2)];\n          return (0,_zag_js_aria_hidden__WEBPACK_IMPORTED_MODULE_6__.ariaHidden)(getElements, { defer: true });\n        },\n        preventScroll(ctx2) {\n          if (!ctx2.modal) return;\n          return (0,_zag_js_remove_scroll__WEBPACK_IMPORTED_MODULE_7__.preventBodyScroll)(dom.getDoc(ctx2));\n        },\n        trapFocus(ctx2) {\n          if (!ctx2.modal) return;\n          const contentEl = () => dom.getContentEl(ctx2);\n          return (0,_zag_js_focus_trap__WEBPACK_IMPORTED_MODULE_8__.trapFocus)(contentEl, {\n            initialFocus: () => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getInitialFocus)({\n              root: dom.getContentEl(ctx2),\n              getInitialEl: ctx2.initialFocusEl,\n              enabled: ctx2.autoFocus\n            })\n          });\n        }\n      },\n      actions: {\n        reposition(ctx2, evt) {\n          const anchorEl = dom.getAnchorEl(ctx2) ?? dom.getTriggerEl(ctx2);\n          const getPositionerEl = () => dom.getPositionerEl(ctx2);\n          (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_2__.getPlacement)(anchorEl, getPositionerEl, {\n            ...ctx2.positioning,\n            ...evt.options,\n            defer: true,\n            listeners: false,\n            onComplete(data) {\n              ctx2.currentPlacement = data.placement;\n            }\n          });\n        },\n        checkRenderedElements(ctx2) {\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            Object.assign(ctx2.renderedElements, {\n              title: !!dom.getTitleEl(ctx2),\n              description: !!dom.getDescriptionEl(ctx2)\n            });\n          });\n        },\n        setInitialFocus(ctx2) {\n          if (ctx2.modal) return;\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            const element = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getInitialFocus)({\n              root: dom.getContentEl(ctx2),\n              getInitialEl: ctx2.initialFocusEl,\n              enabled: ctx2.autoFocus\n            });\n            element?.focus({ preventScroll: true });\n          });\n        },\n        setFinalFocus(ctx2, evt) {\n          const restoreFocus = evt.restoreFocus ?? evt.previousEvent?.restoreFocus;\n          if (restoreFocus != null && !restoreFocus) return;\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => {\n            const element = dom.getTriggerEl(ctx2);\n            element?.focus({ preventScroll: true });\n          });\n        },\n        invokeOnOpen(ctx2) {\n          ctx2.onOpenChange?.({ open: true });\n        },\n        invokeOnClose(ctx2) {\n          ctx2.onOpenChange?.({ open: false });\n        },\n        toggleVisibility(ctx2, evt, { send }) {\n          send({ type: ctx2.open ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\", previousEvent: evt });\n        }\n      }\n    }\n  );\n}\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_9__.createProps)()([\n  \"autoFocus\",\n  \"closeOnEscape\",\n  \"closeOnInteractOutside\",\n  \"dir\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"initialFocusEl\",\n  \"modal\",\n  \"onEscapeKeyDown\",\n  \"onFocusOutside\",\n  \"onInteractOutside\",\n  \"onOpenChange\",\n  \"onPointerDownOutside\",\n  \"open.controlled\",\n  \"open\",\n  \"persistentElements\",\n  \"portalled\",\n  \"positioning\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_3__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/popover/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/popper/dist/index.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@zag-js/popper/dist/index.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getPlacement: () => (/* binding */ getPlacement),\n/* harmony export */   getPlacementSide: () => (/* binding */ getPlacementSide),\n/* harmony export */   getPlacementStyles: () => (/* binding */ getPlacementStyles),\n/* harmony export */   isValidPlacement: () => (/* binding */ isValidPlacement)\n/* harmony export */ });\n/* harmony import */ var _floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @floating-ui/dom */ \"(ssr)/./node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n// src/get-placement.ts\nfunction createDOMRect(x = 0, y = 0, width = 0, height = 0) {\n  if (typeof DOMRect === \"function\") {\n    return new DOMRect(x, y, width, height);\n  }\n  const rect = {\n    x,\n    y,\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x\n  };\n  return { ...rect, toJSON: () => rect };\n}\nfunction getDOMRect(anchorRect) {\n  if (!anchorRect) return createDOMRect();\n  const { x, y, width, height } = anchorRect;\n  return createDOMRect(x, y, width, height);\n}\nfunction getAnchorElement(anchorElement, getAnchorRect) {\n  return {\n    contextElement: (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isHTMLElement)(anchorElement) ? anchorElement : void 0,\n    getBoundingClientRect: () => {\n      const anchor = anchorElement;\n      const anchorRect = getAnchorRect?.(anchor);\n      if (anchorRect || !anchor) {\n        return getDOMRect(anchorRect);\n      }\n      return anchor.getBoundingClientRect();\n    }\n  };\n}\n\n// src/middleware.ts\nvar toVar = (value) => ({ variable: value, reference: `var(${value})` });\nvar cssVars = {\n  arrowSize: toVar(\"--arrow-size\"),\n  arrowSizeHalf: toVar(\"--arrow-size-half\"),\n  arrowBg: toVar(\"--arrow-background\"),\n  transformOrigin: toVar(\"--transform-origin\"),\n  arrowOffset: toVar(\"--arrow-offset\")\n};\nvar getTransformOrigin = (arrow2) => ({\n  top: \"bottom center\",\n  \"top-start\": arrow2 ? `${arrow2.x}px bottom` : \"left bottom\",\n  \"top-end\": arrow2 ? `${arrow2.x}px bottom` : \"right bottom\",\n  bottom: \"top center\",\n  \"bottom-start\": arrow2 ? `${arrow2.x}px top` : \"top left\",\n  \"bottom-end\": arrow2 ? `${arrow2.x}px top` : \"top right\",\n  left: \"right center\",\n  \"left-start\": arrow2 ? `right ${arrow2.y}px` : \"right top\",\n  \"left-end\": arrow2 ? `right ${arrow2.y}px` : \"right bottom\",\n  right: \"left center\",\n  \"right-start\": arrow2 ? `left ${arrow2.y}px` : \"left top\",\n  \"right-end\": arrow2 ? `left ${arrow2.y}px` : \"left bottom\"\n});\nvar transformOriginMiddleware = {\n  name: \"transformOrigin\",\n  fn({ placement, elements, middlewareData }) {\n    const { arrow: arrow2 } = middlewareData;\n    const transformOrigin = getTransformOrigin(arrow2)[placement];\n    const { floating } = elements;\n    floating.style.setProperty(cssVars.transformOrigin.variable, transformOrigin);\n    return {\n      data: { transformOrigin }\n    };\n  }\n};\nvar rectMiddleware = {\n  name: \"rects\",\n  fn({ rects }) {\n    return {\n      data: rects\n    };\n  }\n};\nvar shiftArrowMiddleware = (arrowEl) => {\n  if (!arrowEl) return;\n  return {\n    name: \"shiftArrow\",\n    fn({ placement, middlewareData }) {\n      if (!middlewareData.arrow) return {};\n      const { x, y } = middlewareData.arrow;\n      const dir = placement.split(\"-\")[0];\n      Object.assign(arrowEl.style, {\n        left: x != null ? `${x}px` : \"\",\n        top: y != null ? `${y}px` : \"\",\n        [dir]: `calc(100% + ${cssVars.arrowOffset.reference})`\n      });\n      return {};\n    }\n  };\n};\n\n// src/placement.ts\nfunction isValidPlacement(v) {\n  return /^(?:top|bottom|left|right)(?:-(?:start|end))?$/.test(v);\n}\nfunction getPlacementDetails(placement) {\n  const [side, align] = placement.split(\"-\");\n  return { side, align, hasAlign: align != null };\n}\nfunction getPlacementSide(placement) {\n  return placement.split(\"-\")[0];\n}\n\n// src/get-placement.ts\nvar defaultOptions = {\n  strategy: \"absolute\",\n  placement: \"bottom\",\n  listeners: true,\n  gutter: 8,\n  flip: true,\n  slide: true,\n  overlap: false,\n  sameWidth: false,\n  fitViewport: false,\n  overflowPadding: 8,\n  arrowPadding: 4\n};\nfunction roundByDpr(win, value) {\n  const dpr = win.devicePixelRatio || 1;\n  return Math.round(value * dpr) / dpr;\n}\nfunction getBoundaryMiddleware(opts) {\n  return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.runIfFn)(opts.boundary);\n}\nfunction getArrowMiddleware(arrowElement, opts) {\n  if (!arrowElement) return;\n  return (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.arrow)({\n    element: arrowElement,\n    padding: opts.arrowPadding\n  });\n}\nfunction getOffsetMiddleware(arrowElement, opts) {\n  if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isNull)(opts.offset ?? opts.gutter)) return;\n  return (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.offset)(({ placement }) => {\n    const arrowOffset = (arrowElement?.clientHeight || 0) / 2;\n    const gutter = opts.offset?.mainAxis ?? opts.gutter;\n    const mainAxis = typeof gutter === \"number\" ? gutter + arrowOffset : gutter ?? arrowOffset;\n    const { hasAlign } = getPlacementDetails(placement);\n    const shift2 = !hasAlign ? opts.shift : void 0;\n    const crossAxis = opts.offset?.crossAxis ?? shift2;\n    return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.compact)({\n      crossAxis,\n      mainAxis,\n      alignmentAxis: opts.shift\n    });\n  });\n}\nfunction getFlipMiddleware(opts) {\n  if (!opts.flip) return;\n  return (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.flip)({\n    boundary: getBoundaryMiddleware(opts),\n    padding: opts.overflowPadding,\n    fallbackPlacements: opts.flip === true ? void 0 : opts.flip\n  });\n}\nfunction getShiftMiddleware(opts) {\n  if (!opts.slide && !opts.overlap) return;\n  return (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.shift)({\n    boundary: getBoundaryMiddleware(opts),\n    mainAxis: opts.slide,\n    crossAxis: opts.overlap,\n    padding: opts.overflowPadding,\n    limiter: (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.limitShift)()\n  });\n}\nfunction getSizeMiddleware(opts) {\n  return (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.size)({\n    padding: opts.overflowPadding,\n    apply({ elements, rects, availableHeight, availableWidth }) {\n      const floating = elements.floating;\n      const referenceWidth = Math.round(rects.reference.width);\n      availableWidth = Math.floor(availableWidth);\n      availableHeight = Math.floor(availableHeight);\n      floating.style.setProperty(\"--reference-width\", `${referenceWidth}px`);\n      floating.style.setProperty(\"--available-width\", `${availableWidth}px`);\n      floating.style.setProperty(\"--available-height\", `${availableHeight}px`);\n    }\n  });\n}\nfunction hideWhenDetachedMiddleware(opts) {\n  if (!opts.hideWhenDetached) return;\n  return (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.hide)({ strategy: \"referenceHidden\", boundary: opts.boundary?.() ?? \"clippingAncestors\" });\n}\nfunction getAutoUpdateOptions(opts) {\n  if (!opts) return {};\n  if (opts === true) {\n    return { ancestorResize: true, ancestorScroll: true, elementResize: true, layoutShift: true };\n  }\n  return opts;\n}\nfunction getPlacementImpl(referenceOrVirtual, floating, opts = {}) {\n  const reference = getAnchorElement(referenceOrVirtual, opts.getAnchorRect);\n  if (!floating || !reference) return;\n  const options = Object.assign({}, defaultOptions, opts);\n  const arrowEl = floating.querySelector(\"[data-part=arrow]\");\n  const middleware = [\n    getOffsetMiddleware(arrowEl, options),\n    getFlipMiddleware(options),\n    getShiftMiddleware(options),\n    getArrowMiddleware(arrowEl, options),\n    shiftArrowMiddleware(arrowEl),\n    transformOriginMiddleware,\n    getSizeMiddleware(options),\n    hideWhenDetachedMiddleware(options),\n    rectMiddleware\n  ];\n  const { placement, strategy, onComplete, onPositioned } = options;\n  const updatePosition = async () => {\n    if (!reference || !floating) return;\n    const pos = await (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.computePosition)(reference, floating, {\n      placement,\n      middleware,\n      strategy\n    });\n    onComplete?.(pos);\n    onPositioned?.({ placed: true });\n    const win = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getWindow)(floating);\n    const x = roundByDpr(win, pos.x);\n    const y = roundByDpr(win, pos.y);\n    floating.style.setProperty(\"--x\", `${x}px`);\n    floating.style.setProperty(\"--y\", `${y}px`);\n    if (options.hideWhenDetached) {\n      const isHidden = pos.middlewareData.hide?.referenceHidden;\n      if (isHidden) {\n        floating.style.setProperty(\"visibility\", \"hidden\");\n        floating.style.setProperty(\"pointer-events\", \"none\");\n      } else {\n        floating.style.removeProperty(\"visibility\");\n        floating.style.removeProperty(\"pointer-events\");\n      }\n    }\n    const contentEl = floating.firstElementChild;\n    if (contentEl) {\n      const styles = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.getComputedStyle)(contentEl);\n      floating.style.setProperty(\"--z-index\", styles.zIndex);\n    }\n  };\n  const update = async () => {\n    if (opts.updatePosition) {\n      await opts.updatePosition({ updatePosition });\n      onPositioned?.({ placed: true });\n    } else {\n      await updatePosition();\n    }\n  };\n  const autoUpdateOptions = getAutoUpdateOptions(options.listeners);\n  const cancelAutoUpdate = options.listeners ? (0,_floating_ui_dom__WEBPACK_IMPORTED_MODULE_2__.autoUpdate)(reference, floating, update, autoUpdateOptions) : _zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.noop;\n  update();\n  return () => {\n    cancelAutoUpdate?.();\n    onPositioned?.({ placed: false });\n  };\n}\nfunction getPlacement(referenceOrFn, floatingOrFn, opts = {}) {\n  const { defer, ...options } = opts;\n  const func = defer ? _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.raf : (v) => v();\n  const cleanups = [];\n  cleanups.push(\n    func(() => {\n      const reference = typeof referenceOrFn === \"function\" ? referenceOrFn() : referenceOrFn;\n      const floating = typeof floatingOrFn === \"function\" ? floatingOrFn() : floatingOrFn;\n      cleanups.push(getPlacementImpl(reference, floating, options));\n    })\n  );\n  return () => {\n    cleanups.forEach((fn) => fn?.());\n  };\n}\n\n// src/get-styles.ts\nvar ARROW_FLOATING_STYLE = {\n  bottom: \"rotate(45deg)\",\n  left: \"rotate(135deg)\",\n  top: \"rotate(225deg)\",\n  right: \"rotate(315deg)\"\n};\nfunction getPlacementStyles(options = {}) {\n  const { placement, sameWidth, fitViewport, strategy = \"absolute\" } = options;\n  return {\n    arrow: {\n      position: \"absolute\",\n      width: cssVars.arrowSize.reference,\n      height: cssVars.arrowSize.reference,\n      [cssVars.arrowSizeHalf.variable]: `calc(${cssVars.arrowSize.reference} / 2)`,\n      [cssVars.arrowOffset.variable]: `calc(${cssVars.arrowSizeHalf.reference} * -1)`\n    },\n    arrowTip: {\n      // @ts-expect-error - Fix this\n      transform: placement ? ARROW_FLOATING_STYLE[placement.split(\"-\")[0]] : void 0,\n      background: cssVars.arrowBg.reference,\n      top: \"0\",\n      left: \"0\",\n      width: \"100%\",\n      height: \"100%\",\n      position: \"absolute\",\n      zIndex: \"inherit\"\n    },\n    floating: {\n      position: strategy,\n      isolation: \"isolate\",\n      minWidth: sameWidth ? void 0 : \"max-content\",\n      width: sameWidth ? \"var(--reference-width)\" : void 0,\n      maxWidth: fitViewport ? \"var(--available-width)\" : void 0,\n      maxHeight: fitViewport ? \"var(--available-height)\" : void 0,\n      top: \"0px\",\n      left: \"0px\",\n      // move off-screen if placement is not defined\n      transform: placement ? \"translate3d(var(--x), var(--y), 0)\" : \"translate3d(0, -100vh, 0)\",\n      zIndex: \"var(--z-index)\"\n    }\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/popper/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/progress/dist/index.mjs":
/*!******************************************************!*\
  !*** ./node_modules/@zag-js/progress/dist/index.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n// src/progress.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"progress\").parts(\n  \"root\",\n  \"label\",\n  \"track\",\n  \"range\",\n  \"valueText\",\n  \"view\",\n  \"circle\",\n  \"circleTrack\",\n  \"circleRange\"\n);\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getRootId: (ctx) => ctx.ids?.root ?? `progress-${ctx.id}`,\n  getTrackId: (ctx) => ctx.ids?.track ?? `progress-${ctx.id}-track`,\n  getLabelId: (ctx) => ctx.ids?.label ?? `progress-${ctx.id}-label`,\n  getCircleId: (ctx) => ctx.ids?.circle ?? `progress-${ctx.id}-circle`\n});\n\n// src/progress.connect.ts\nfunction connect(state, send, normalize) {\n  const percent = state.context.percent;\n  const percentAsString = state.context.isIndeterminate ? \"\" : `${percent}%`;\n  const max = state.context.max;\n  const min = state.context.min;\n  const orientation = state.context.orientation;\n  const translations = state.context.translations;\n  const indeterminate = state.context.isIndeterminate;\n  const value = state.context.value;\n  const valueAsString = translations.value({ value, max, percent, min });\n  const progressState = getProgressState(value, max);\n  const progressbarProps = {\n    role: \"progressbar\",\n    \"aria-label\": valueAsString,\n    \"data-max\": max,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    \"aria-valuenow\": value ?? void 0,\n    \"data-orientation\": orientation,\n    \"data-state\": progressState\n  };\n  const circleProps = getCircleProps(state.context);\n  return {\n    value,\n    valueAsString,\n    min,\n    max,\n    percent,\n    percentAsString,\n    indeterminate,\n    setValue(value2) {\n      send({ type: \"VALUE.SET\", value: value2 });\n    },\n    setToMax() {\n      send({ type: \"VALUE.SET\", value: max });\n    },\n    setToMin() {\n      send({ type: \"VALUE.SET\", value: min });\n    },\n    getRootProps() {\n      return normalize.element({\n        dir: state.context.dir,\n        ...parts.root.attrs,\n        id: dom.getRootId(state.context),\n        \"data-max\": max,\n        \"data-value\": value ?? void 0,\n        \"data-state\": progressState,\n        \"data-orientation\": orientation,\n        style: {\n          \"--percent\": indeterminate ? void 0 : percent\n        }\n      });\n    },\n    getLabelProps() {\n      return normalize.element({\n        dir: state.context.dir,\n        id: dom.getLabelId(state.context),\n        ...parts.label.attrs,\n        \"data-orientation\": orientation\n      });\n    },\n    getValueTextProps() {\n      return normalize.element({\n        dir: state.context.dir,\n        \"aria-live\": \"polite\",\n        ...parts.valueText.attrs\n      });\n    },\n    getTrackProps() {\n      return normalize.element({\n        dir: state.context.dir,\n        id: dom.getTrackId(state.context),\n        ...parts.track.attrs,\n        ...progressbarProps\n      });\n    },\n    getRangeProps() {\n      return normalize.element({\n        dir: state.context.dir,\n        ...parts.range.attrs,\n        \"data-orientation\": orientation,\n        \"data-state\": progressState,\n        style: {\n          [state.context.isHorizontal ? \"width\" : \"height\"]: indeterminate ? void 0 : `${percent}%`\n        }\n      });\n    },\n    getCircleProps() {\n      return normalize.element({\n        dir: state.context.dir,\n        id: dom.getCircleId(state.context),\n        ...parts.circle.attrs,\n        ...progressbarProps,\n        ...circleProps.root\n      });\n    },\n    getCircleTrackProps() {\n      return normalize.element({\n        dir: state.context.dir,\n        \"data-orientation\": orientation,\n        ...parts.circleTrack.attrs,\n        ...circleProps.track\n      });\n    },\n    getCircleRangeProps() {\n      return normalize.element({\n        dir: state.context.dir,\n        ...parts.circleRange.attrs,\n        ...circleProps.range,\n        \"data-state\": progressState\n      });\n    },\n    getViewProps(props2) {\n      return normalize.element({\n        dir: state.context.dir,\n        ...parts.view.attrs,\n        \"data-state\": props2.state,\n        hidden: props2.state !== progressState\n      });\n    }\n  };\n}\nfunction getProgressState(value, maxValue) {\n  return value == null ? \"indeterminate\" : value === maxValue ? \"complete\" : \"loading\";\n}\nfunction getCircleProps(ctx) {\n  const circleProps = {\n    style: {\n      \"--radius\": \"calc(var(--size) / 2 - var(--thickness) / 2)\",\n      cx: \"calc(var(--size) / 2)\",\n      cy: \"calc(var(--size) / 2)\",\n      r: \"var(--radius)\",\n      fill: \"transparent\",\n      strokeWidth: \"var(--thickness)\"\n    }\n  };\n  return {\n    root: {\n      style: {\n        width: \"var(--size)\",\n        height: \"var(--size)\"\n      }\n    },\n    track: circleProps,\n    range: {\n      opacity: ctx.value === 0 ? 0 : void 0,\n      style: {\n        ...circleProps.style,\n        \"--percent\": ctx.percent,\n        \"--circumference\": `calc(2 * 3.14159 * var(--radius))`,\n        \"--offset\": `calc(var(--circumference) * (100 - var(--percent)) / 100)`,\n        strokeDashoffset: `calc(var(--circumference) * ((100 - var(--percent)) / 100))`,\n        strokeDasharray: ctx.isIndeterminate ? void 0 : `var(--circumference)`,\n        transformOrigin: \"center\",\n        transform: \"rotate(-90deg)\"\n      }\n    }\n  };\n}\nfunction midValue(min, max) {\n  return min + (max - min) / 2;\n}\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)(\n    {\n      id: \"progress\",\n      initial: \"idle\",\n      context: {\n        max: ctx.max ?? 100,\n        min: ctx.min ?? 0,\n        value: midValue(ctx.min ?? 0, ctx.max ?? 100),\n        orientation: \"horizontal\",\n        translations: {\n          value: ({ percent }) => percent === -1 ? \"loading...\" : `${percent} percent`,\n          ...ctx.translations\n        },\n        ...ctx\n      },\n      created: [\"validateContext\"],\n      computed: {\n        isIndeterminate: (ctx2) => ctx2.value === null,\n        percent(ctx2) {\n          if (!(0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isNumber)(ctx2.value)) return -1;\n          return Math.round((ctx2.value - ctx2.min) / (ctx2.max - ctx2.min) * 100);\n        },\n        isAtMax: (ctx2) => ctx2.value === ctx2.max,\n        isHorizontal: (ctx2) => ctx2.orientation === \"horizontal\",\n        isRtl: (ctx2) => ctx2.dir === \"rtl\"\n      },\n      states: {\n        idle: {\n          on: {\n            \"VALUE.SET\": {\n              actions: [\"setValue\"]\n            }\n          }\n        }\n      }\n    },\n    {\n      actions: {\n        setValue: (ctx2, evt) => {\n          set.value(ctx2, evt.value);\n        },\n        validateContext: (ctx2) => {\n          if (ctx2.value == null) return;\n          if (!isValidNumber(ctx2.max)) {\n            throw new Error(`[progress] The max value passed \\`${ctx2.max}\\` is not a valid number`);\n          }\n          if (!isValidMax(ctx2.value, ctx2.max)) {\n            throw new Error(`[progress] The value passed \\`${ctx2.value}\\` exceeds the max value \\`${ctx2.max}\\``);\n          }\n          if (!isValidMin(ctx2.value, ctx2.min)) {\n            throw new Error(`[progress] The value passed \\`${ctx2.value}\\` exceeds the min value \\`${ctx2.min}\\``);\n          }\n        }\n      }\n    }\n  );\n}\nfunction isValidNumber(max) {\n  return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isNumber)(max) && !isNaN(max);\n}\nfunction isValidMax(value, max) {\n  return isValidNumber(value) && value <= max;\n}\nfunction isValidMin(value, min) {\n  return isValidNumber(value) && value >= min;\n}\nvar set = {\n  value(ctx, value) {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual)(ctx.value, value)) return;\n    ctx.value = value === null ? null : Math.max(0, Math.min(value, ctx.max));\n    ctx.onValueChange?.({ value });\n  }\n};\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\n  \"dir\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"max\",\n  \"min\",\n  \"orientation\",\n  \"translations\",\n  \"value\",\n  \"onValueChange\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/progress/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/qr-code/dist/index.mjs":
/*!*****************************************************!*\
  !*** ./node_modules/@zag-js/qr-code/dist/index.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var proxy_memoize__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! proxy-memoize */ \"(ssr)/./node_modules/proxy-memoize/dist/memoize.js\");\n/* harmony import */ var uqr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uqr */ \"(ssr)/./node_modules/uqr/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n\n// src/qr-code.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"qr-code\").parts(\"root\", \"frame\", \"pattern\", \"overlay\", \"downloadTrigger\");\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getRootId: (ctx) => ctx.ids?.root ?? `qrcode:${ctx.id}:root`,\n  getFrameId: (ctx) => ctx.ids?.frame ?? `qrcode:${ctx.id}:frame`,\n  getFrameEl: (ctx) => dom.getById(ctx, dom.getFrameId(ctx))\n});\n\n// src/qr-code.connect.ts\nfunction connect(state, send, normalize) {\n  const encoded = state.context.encoded;\n  const pixelSize = state.context.pixelSize;\n  const height = encoded.size * pixelSize;\n  const width = encoded.size * pixelSize;\n  const paths = [];\n  for (let row = 0; row < encoded.size; row++) {\n    for (let col = 0; col < encoded.size; col++) {\n      const x = col * pixelSize;\n      const y = row * pixelSize;\n      if (encoded.data[row][col]) {\n        paths.push(`M${x},${y}h${pixelSize}v${pixelSize}h-${pixelSize}z`);\n      }\n    }\n  }\n  return {\n    value: state.context.value,\n    setValue(value) {\n      send({ type: \"VALUE.SET\", value });\n    },\n    getDataUrl(type, quality) {\n      const svgEl = dom.getFrameEl(state.context);\n      return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getDataUrl)(svgEl, { type, quality });\n    },\n    getRootProps() {\n      return normalize.element({\n        id: dom.getRootId(state.context),\n        ...parts.root.attrs,\n        style: {\n          \"--qrcode-pixel-size\": `${pixelSize}px`,\n          \"--qrcode-width\": `${width}px`,\n          \"--qrcode-height\": `${height}px`,\n          position: \"relative\"\n        }\n      });\n    },\n    getFrameProps() {\n      return normalize.svg({\n        id: dom.getFrameId(state.context),\n        ...parts.frame.attrs,\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: `0 0 ${width} ${height}`\n      });\n    },\n    getPatternProps() {\n      return normalize.path({\n        d: paths.join(\"\"),\n        ...parts.pattern.attrs\n      });\n    },\n    getOverlayProps() {\n      return normalize.element({\n        ...parts.overlay.attrs,\n        style: {\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          translate: \"-50% -50%\"\n        }\n      });\n    },\n    getDownloadTriggerProps(props2) {\n      return normalize.button({\n        type: \"button\",\n        ...parts.downloadTrigger.attrs,\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send({ type: \"DOWNLOAD_TRIGGER.CLICK\", ...props2 });\n        }\n      });\n    }\n  };\n}\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)(\n    {\n      id: \"qr-code\",\n      initial: \"idle\",\n      context: {\n        value: \"\",\n        ...ctx,\n        pixelSize: 10\n      },\n      computed: {\n        encoded: (0,proxy_memoize__WEBPACK_IMPORTED_MODULE_4__.memoize)((ctx2) => (0,uqr__WEBPACK_IMPORTED_MODULE_5__.encode)(ctx2.value, ctx2.encoding))\n      },\n      on: {\n        \"VALUE.SET\": {\n          actions: [\"setValue\"]\n        },\n        \"DOWNLOAD_TRIGGER.CLICK\": {\n          actions: [\"downloadQrCode\"]\n        }\n      }\n    },\n    {\n      actions: {\n        setValue(ctx2, evt) {\n          set.value(ctx2, evt.value);\n        },\n        downloadQrCode(ctx2, evt) {\n          const { mimeType, quality, fileName } = evt;\n          const svgEl = dom.getFrameEl(ctx2);\n          const doc = dom.getDoc(ctx2);\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getDataUrl)(svgEl, { type: mimeType, quality }).then((dataUri) => {\n            const a = doc.createElement(\"a\");\n            a.href = dataUri;\n            a.rel = \"noopener\";\n            a.download = fileName;\n            a.click();\n            setTimeout(() => {\n              a.remove();\n            }, 0);\n          });\n        }\n      }\n    }\n  );\n}\nvar set = {\n  value(ctx, value) {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual)(ctx.value, value)) return;\n    ctx.value = value;\n    ctx.onValueChange?.({ value });\n  }\n};\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_6__.createProps)()([\n  \"ids\",\n  \"value\",\n  \"id\",\n  \"encoding\",\n  \"dir\",\n  \"getRootNode\",\n  \"onValueChange\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/qr-code/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/radio-group/dist/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@zag-js/radio-group/dist/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   itemProps: () => (/* binding */ itemProps),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitItemProps: () => (/* binding */ splitItemProps),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/focus-visible */ \"(ssr)/./node_modules/@zag-js/focus-visible/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_element_rect__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/element-rect */ \"(ssr)/./node_modules/@zag-js/element-rect/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n\n// src/radio-group.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"radio-group\").parts(\n  \"root\",\n  \"label\",\n  \"item\",\n  \"itemText\",\n  \"itemControl\",\n  \"indicator\"\n);\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getRootId: (ctx) => ctx.ids?.root ?? `radio-group:${ctx.id}`,\n  getLabelId: (ctx) => ctx.ids?.label ?? `radio-group:${ctx.id}:label`,\n  getItemId: (ctx, value) => ctx.ids?.item?.(value) ?? `radio-group:${ctx.id}:radio:${value}`,\n  getItemHiddenInputId: (ctx, value) => ctx.ids?.itemHiddenInput?.(value) ?? `radio-group:${ctx.id}:radio:input:${value}`,\n  getItemControlId: (ctx, value) => ctx.ids?.itemControl?.(value) ?? `radio-group:${ctx.id}:radio:control:${value}`,\n  getItemLabelId: (ctx, value) => ctx.ids?.itemLabel?.(value) ?? `radio-group:${ctx.id}:radio:label:${value}`,\n  getIndicatorId: (ctx) => ctx.ids?.indicator ?? `radio-group:${ctx.id}:indicator`,\n  getRootEl: (ctx) => dom.getById(ctx, dom.getRootId(ctx)),\n  getItemHiddenInputEl: (ctx, value) => dom.getById(ctx, dom.getItemHiddenInputId(ctx, value)),\n  getIndicatorEl: (ctx) => dom.getById(ctx, dom.getIndicatorId(ctx)),\n  getFirstEnabledInputEl: (ctx) => dom.getRootEl(ctx)?.querySelector(\"input:not(:disabled)\"),\n  getFirstEnabledAndCheckedInputEl: (ctx) => dom.getRootEl(ctx)?.querySelector(\"input:not(:disabled):checked\"),\n  getInputEls: (ctx) => {\n    const ownerId = CSS.escape(dom.getRootId(ctx));\n    const selector = `input[type=radio][data-ownedby='${ownerId}']:not([disabled])`;\n    return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.queryAll)(dom.getRootEl(ctx), selector);\n  },\n  getActiveRadioEl: (ctx) => {\n    if (!ctx.value) return;\n    return dom.getById(ctx, dom.getItemId(ctx, ctx.value));\n  },\n  getOffsetRect: (el) => ({\n    left: el?.offsetLeft ?? 0,\n    top: el?.offsetTop ?? 0,\n    width: el?.offsetWidth ?? 0,\n    height: el?.offsetHeight ?? 0\n  }),\n  getRectById: (ctx, id) => {\n    const radioEl = dom.getById(ctx, dom.getItemId(ctx, id));\n    if (!radioEl) return;\n    return dom.resolveRect(dom.getOffsetRect(radioEl));\n  },\n  resolveRect: (rect) => ({\n    width: `${rect.width}px`,\n    height: `${rect.height}px`,\n    left: `${rect.left}px`,\n    top: `${rect.top}px`\n  })\n});\n\n// src/radio-group.connect.ts\nfunction connect(state, send, normalize) {\n  const groupDisabled = state.context.isDisabled;\n  const readOnly = state.context.readOnly;\n  function getItemState(props2) {\n    return {\n      invalid: !!props2.invalid,\n      disabled: !!props2.disabled || groupDisabled,\n      checked: state.context.value === props2.value,\n      focused: state.context.focusedValue === props2.value,\n      hovered: state.context.hoveredValue === props2.value,\n      active: state.context.activeValue === props2.value\n    };\n  }\n  function getItemDataAttrs(props2) {\n    const radioState = getItemState(props2);\n    return {\n      \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(radioState.focused),\n      \"data-focus-visible\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(radioState.focused && state.context.focusVisible),\n      \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(radioState.disabled),\n      \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(readOnly),\n      \"data-state\": radioState.checked ? \"checked\" : \"unchecked\",\n      \"data-hover\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(radioState.hovered),\n      \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(radioState.invalid),\n      \"data-orientation\": state.context.orientation,\n      \"data-ssr\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.ssr)\n    };\n  }\n  const focus = () => {\n    const firstEnabledAndCheckedInput = dom.getFirstEnabledAndCheckedInputEl(state.context);\n    if (firstEnabledAndCheckedInput) {\n      firstEnabledAndCheckedInput.focus();\n      return;\n    }\n    const firstEnabledInput = dom.getFirstEnabledInputEl(state.context);\n    firstEnabledInput?.focus();\n  };\n  return {\n    focus,\n    value: state.context.value,\n    setValue(value) {\n      send({ type: \"SET_VALUE\", value, isTrusted: false });\n    },\n    clearValue() {\n      send({ type: \"SET_VALUE\", value: null, isTrusted: false });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        role: \"radiogroup\",\n        id: dom.getRootId(state.context),\n        \"aria-labelledby\": dom.getLabelId(state.context),\n        \"data-orientation\": state.context.orientation,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(groupDisabled),\n        \"aria-orientation\": state.context.orientation,\n        dir: state.context.dir,\n        style: {\n          position: \"relative\"\n        }\n      });\n    },\n    getLabelProps() {\n      return normalize.element({\n        ...parts.label.attrs,\n        dir: state.context.dir,\n        \"data-orientation\": state.context.orientation,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(groupDisabled),\n        id: dom.getLabelId(state.context),\n        onClick: focus\n      });\n    },\n    getItemState,\n    getItemProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.label({\n        ...parts.item.attrs,\n        dir: state.context.dir,\n        id: dom.getItemId(state.context, props2.value),\n        htmlFor: dom.getItemHiddenInputId(state.context, props2.value),\n        ...getItemDataAttrs(props2),\n        onPointerMove() {\n          if (itemState.disabled) return;\n          if (itemState.hovered) return;\n          send({ type: \"SET_HOVERED\", value: props2.value, hovered: true });\n        },\n        onPointerLeave() {\n          if (itemState.disabled) return;\n          send({ type: \"SET_HOVERED\", value: null });\n        },\n        onPointerDown(event) {\n          if (itemState.disabled) return;\n          if (itemState.focused && event.pointerType === \"mouse\") {\n            event.preventDefault();\n          }\n          send({ type: \"SET_ACTIVE\", value: props2.value, active: true });\n        },\n        onPointerUp() {\n          if (itemState.disabled) return;\n          send({ type: \"SET_ACTIVE\", value: null });\n        }\n      });\n    },\n    getItemTextProps(props2) {\n      return normalize.element({\n        ...parts.itemText.attrs,\n        dir: state.context.dir,\n        id: dom.getItemLabelId(state.context, props2.value),\n        ...getItemDataAttrs(props2)\n      });\n    },\n    getItemControlProps(props2) {\n      const controlState = getItemState(props2);\n      return normalize.element({\n        ...parts.itemControl.attrs,\n        dir: state.context.dir,\n        id: dom.getItemControlId(state.context, props2.value),\n        \"data-active\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(controlState.active),\n        \"aria-hidden\": true,\n        ...getItemDataAttrs(props2)\n      });\n    },\n    getItemHiddenInputProps(props2) {\n      const inputState = getItemState(props2);\n      return normalize.input({\n        \"data-ownedby\": dom.getRootId(state.context),\n        id: dom.getItemHiddenInputId(state.context, props2.value),\n        type: \"radio\",\n        name: state.context.name || state.context.id,\n        form: state.context.form,\n        value: props2.value,\n        onClick(event) {\n          if (readOnly) {\n            event.preventDefault();\n            return;\n          }\n          if (event.currentTarget.checked) {\n            send({ type: \"SET_VALUE\", value: props2.value, isTrusted: true });\n          }\n        },\n        onBlur() {\n          send({ type: \"SET_FOCUSED\", value: null, focused: false, focusVisible: false });\n        },\n        onFocus() {\n          const focusVisible = (0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__.isFocusVisible)();\n          send({ type: \"SET_FOCUSED\", value: props2.value, focused: true, focusVisible });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (event.key === \" \") {\n            send({ type: \"SET_ACTIVE\", value: props2.value, active: true });\n          }\n        },\n        onKeyUp(event) {\n          if (event.defaultPrevented) return;\n          if (event.key === \" \") {\n            send({ type: \"SET_ACTIVE\", value: null });\n          }\n        },\n        disabled: inputState.disabled,\n        defaultChecked: inputState.checked,\n        style: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.visuallyHiddenStyle\n      });\n    },\n    getIndicatorProps() {\n      return normalize.element({\n        id: dom.getIndicatorId(state.context),\n        ...parts.indicator.attrs,\n        dir: state.context.dir,\n        hidden: state.context.value == null,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(groupDisabled),\n        \"data-orientation\": state.context.orientation,\n        style: {\n          \"--transition-property\": \"left, top, width, height\",\n          \"--left\": state.context.indicatorRect?.left,\n          \"--top\": state.context.indicatorRect?.top,\n          \"--width\": state.context.indicatorRect?.width,\n          \"--height\": state.context.indicatorRect?.height,\n          position: \"absolute\",\n          willChange: \"var(--transition-property)\",\n          transitionProperty: \"var(--transition-property)\",\n          transitionDuration: state.context.canIndicatorTransition ? \"var(--transition-duration, 150ms)\" : \"0ms\",\n          transitionTimingFunction: \"var(--transition-timing-function)\",\n          [state.context.orientation === \"horizontal\" ? \"left\" : \"top\"]: state.context.orientation === \"horizontal\" ? \"var(--left)\" : \"var(--top)\"\n        }\n      });\n    }\n  };\n}\nvar { not } = _zag_js_core__WEBPACK_IMPORTED_MODULE_3__.guards;\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)(\n    {\n      id: \"radio\",\n      initial: \"idle\",\n      context: {\n        value: null,\n        activeValue: null,\n        focusedValue: null,\n        hoveredValue: null,\n        disabled: false,\n        orientation: \"vertical\",\n        ...ctx,\n        indicatorRect: {},\n        canIndicatorTransition: false,\n        fieldsetDisabled: false,\n        focusVisible: false,\n        ssr: true\n      },\n      computed: {\n        isDisabled: (ctx2) => !!ctx2.disabled || ctx2.fieldsetDisabled\n      },\n      entry: [\"syncIndicatorRect\", \"syncSsr\"],\n      exit: [\"cleanupObserver\"],\n      activities: [\"trackFormControlState\", \"trackFocusVisible\"],\n      watch: {\n        value: [\"setIndicatorTransition\", \"syncIndicatorRect\", \"syncInputElements\"]\n      },\n      on: {\n        SET_VALUE: [\n          {\n            guard: not(\"isTrusted\"),\n            actions: [\"setValue\", \"dispatchChangeEvent\"]\n          },\n          {\n            actions: [\"setValue\"]\n          }\n        ],\n        SET_HOVERED: {\n          actions: \"setHovered\"\n        },\n        SET_ACTIVE: {\n          actions: \"setActive\"\n        },\n        SET_FOCUSED: {\n          actions: \"setFocused\"\n        }\n      },\n      states: {\n        idle: {}\n      }\n    },\n    {\n      guards: {\n        isTrusted: (_ctx, evt) => !!evt.isTrusted\n      },\n      activities: {\n        trackFormControlState(ctx2, _evt, { send, initialContext }) {\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackFormControl)(dom.getRootEl(ctx2), {\n            onFieldsetDisabledChange(disabled) {\n              ctx2.fieldsetDisabled = disabled;\n            },\n            onFormReset() {\n              send({ type: \"SET_VALUE\", value: initialContext.value });\n            }\n          });\n        },\n        trackFocusVisible(ctx2) {\n          return (0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__.trackFocusVisible)({ root: dom.getRootNode(ctx2) });\n        }\n      },\n      actions: {\n        setValue(ctx2, evt) {\n          set.value(ctx2, evt.value);\n        },\n        setHovered(ctx2, evt) {\n          ctx2.hoveredValue = evt.value;\n        },\n        setActive(ctx2, evt) {\n          ctx2.activeValue = evt.value;\n        },\n        setFocused(ctx2, evt) {\n          ctx2.focusedValue = evt.value;\n          ctx2.focusVisible = evt.focusVisible;\n        },\n        syncInputElements(ctx2) {\n          const inputs = dom.getInputEls(ctx2);\n          inputs.forEach((input) => {\n            input.checked = input.value === ctx2.value;\n          });\n        },\n        setIndicatorTransition(ctx2) {\n          ctx2.canIndicatorTransition = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.isString)(ctx2.value);\n        },\n        cleanupObserver(ctx2) {\n          ctx2.indicatorCleanup?.();\n        },\n        syncSsr(ctx2) {\n          ctx2.ssr = false;\n        },\n        syncIndicatorRect(ctx2) {\n          ctx2.indicatorCleanup?.();\n          if (!dom.getIndicatorEl(ctx2)) return;\n          const value = ctx2.value;\n          const radioEl = dom.getActiveRadioEl(ctx2);\n          if (value == null || !radioEl) {\n            ctx2.indicatorRect = {};\n            return;\n          }\n          ctx2.indicatorCleanup = (0,_zag_js_element_rect__WEBPACK_IMPORTED_MODULE_5__.trackElementRect)(radioEl, {\n            getRect(el) {\n              return dom.getOffsetRect(el);\n            },\n            onChange(rect) {\n              ctx2.indicatorRect = dom.resolveRect(rect);\n              (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.nextTick)(() => {\n                ctx2.canIndicatorTransition = false;\n              });\n            }\n          });\n        },\n        dispatchChangeEvent(ctx2) {\n          const inputEls = dom.getInputEls(ctx2);\n          inputEls.forEach((inputEl) => {\n            const checked = inputEl.value === ctx2.value;\n            if (checked === inputEl.checked) return;\n            (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dispatchInputCheckedEvent)(inputEl, { checked });\n          });\n        }\n      }\n    }\n  );\n}\nvar invoke = {\n  change: (ctx) => {\n    if (ctx.value == null) return;\n    ctx.onValueChange?.({ value: ctx.value });\n  }\n};\nvar set = {\n  value: (ctx, value) => {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.isEqual)(ctx.value, value)) return;\n    ctx.value = value;\n    invoke.change(ctx);\n  }\n};\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_6__.createProps)()([\n  \"dir\",\n  \"disabled\",\n  \"form\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"name\",\n  \"onValueChange\",\n  \"orientation\",\n  \"readOnly\",\n  \"value\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(props);\nvar itemProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_6__.createProps)()([\"value\", \"disabled\", \"invalid\"]);\nvar splitItemProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(itemProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/radio-group/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/rating-group/dist/index.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/@zag-js/rating-group/dist/index.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   itemProps: () => (/* binding */ itemProps),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitItemProps: () => (/* binding */ splitItemProps),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n// src/rating-group.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"rating-group\").parts(\"root\", \"label\", \"item\", \"control\");\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getRootId: (ctx) => ctx.ids?.root ?? `rating:${ctx.id}`,\n  getLabelId: (ctx) => ctx.ids?.label ?? `rating:${ctx.id}:label`,\n  getHiddenInputId: (ctx) => ctx.ids?.hiddenInput ?? `rating:${ctx.id}:input`,\n  getControlId: (ctx) => ctx.ids?.control ?? `rating:${ctx.id}:control`,\n  getItemId: (ctx, id) => ctx.ids?.item?.(id) ?? `rating:${ctx.id}:item:${id}`,\n  getRootEl: (ctx) => dom.getById(ctx, dom.getRootId(ctx)),\n  getControlEl: (ctx) => dom.getById(ctx, dom.getControlId(ctx)),\n  getRadioEl: (ctx, value = ctx.value) => {\n    const selector = `[role=radio][aria-posinset='${Math.ceil(value)}']`;\n    return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.query)(dom.getControlEl(ctx), selector);\n  },\n  getHiddenInputEl: (ctx) => dom.getById(ctx, dom.getHiddenInputId(ctx)),\n  dispatchChangeEvent: (ctx) => {\n    const inputEl = dom.getHiddenInputEl(ctx);\n    if (!inputEl) return;\n    (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dispatchInputValueEvent)(inputEl, { value: ctx.value });\n  }\n});\n\n// src/rating-group.connect.ts\nfunction connect(state, send, normalize) {\n  const interactive = state.context.isInteractive;\n  const disabled = state.context.isDisabled;\n  const readOnly = state.context.readOnly;\n  const value = state.context.value;\n  const hoveredValue = state.context.hoveredValue;\n  const translations = state.context.translations;\n  function getItemState(props2) {\n    const value2 = state.context.isHovering ? state.context.hoveredValue : state.context.value;\n    const equal = Math.ceil(value2) === props2.index;\n    const highlighted = props2.index <= value2 || equal;\n    const half = equal && Math.abs(value2 - props2.index) === 0.5;\n    return {\n      highlighted,\n      half,\n      checked: equal || state.context.value === -1 && props2.index === 1\n    };\n  }\n  return {\n    hovering: state.context.isHovering,\n    value,\n    hoveredValue,\n    count: state.context.count,\n    items: Array.from({ length: state.context.count }).map((_, index) => index + 1),\n    setValue(value2) {\n      send({ type: \"SET_VALUE\", value: value2 });\n    },\n    clearValue() {\n      send(\"CLEAR_VALUE\");\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: state.context.dir,\n        id: dom.getRootId(state.context)\n      });\n    },\n    getHiddenInputProps() {\n      return normalize.input({\n        name: state.context.name,\n        form: state.context.form,\n        type: \"text\",\n        hidden: true,\n        disabled,\n        readOnly,\n        required: state.context.required,\n        id: dom.getHiddenInputId(state.context),\n        defaultValue: state.context.value\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        dir: state.context.dir,\n        id: dom.getLabelId(state.context),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        htmlFor: dom.getHiddenInputId(state.context),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          event.preventDefault();\n          const radioEl = dom.getRadioEl(state.context, 1);\n          radioEl?.focus({ preventScroll: true });\n        }\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        id: dom.getControlId(state.context),\n        ...parts.control.attrs,\n        dir: state.context.dir,\n        role: \"radiogroup\",\n        \"aria-orientation\": \"horizontal\",\n        \"aria-labelledby\": dom.getLabelId(state.context),\n        \"aria-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.ariaAttr)(readOnly),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(readOnly),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        onPointerMove(event) {\n          if (!interactive) return;\n          if (event.pointerType === \"touch\") return;\n          send(\"GROUP_POINTER_OVER\");\n        },\n        onPointerLeave(event) {\n          if (!interactive) return;\n          if (event.pointerType === \"touch\") return;\n          send(\"GROUP_POINTER_LEAVE\");\n        }\n      });\n    },\n    getItemState,\n    getItemProps(props2) {\n      const { index } = props2;\n      const itemState = getItemState(props2);\n      const valueText = translations.ratingValueText(index);\n      return normalize.element({\n        ...parts.item.attrs,\n        dir: state.context.dir,\n        id: dom.getItemId(state.context, index.toString()),\n        role: \"radio\",\n        tabIndex: (() => {\n          if (readOnly) return itemState.checked ? 0 : void 0;\n          if (disabled) return void 0;\n          return itemState.checked ? 0 : -1;\n        })(),\n        \"aria-roledescription\": \"rating\",\n        \"aria-label\": valueText,\n        \"aria-disabled\": disabled,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(readOnly),\n        \"aria-setsize\": state.context.count,\n        \"aria-checked\": itemState.checked,\n        \"data-checked\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.checked),\n        \"aria-posinset\": index,\n        \"data-highlighted\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.highlighted),\n        \"data-half\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(itemState.half),\n        onPointerDown(event) {\n          if (!interactive) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isLeftClick)(event)) return;\n          event.preventDefault();\n        },\n        onPointerMove(event) {\n          if (!interactive) return;\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventPoint)(event);\n          const relativePoint = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getRelativePoint)(point, event.currentTarget);\n          const percentX = relativePoint.getPercentValue({\n            orientation: \"horizontal\",\n            dir: state.context.dir\n          });\n          const isMidway = percentX < 0.5;\n          send({ type: \"POINTER_OVER\", index, isMidway });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          const keyMap = {\n            ArrowLeft() {\n              send(\"ARROW_LEFT\");\n            },\n            ArrowRight() {\n              send(\"ARROW_RIGHT\");\n            },\n            ArrowUp() {\n              send(\"ARROW_LEFT\");\n            },\n            ArrowDown() {\n              send(\"ARROW_RIGHT\");\n            },\n            Space() {\n              send({ type: \"SPACE\", value: index });\n            },\n            Home() {\n              send(\"HOME\");\n            },\n            End() {\n              send(\"END\");\n            }\n          };\n          const key = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventKey)(event, state.context);\n          const exec = keyMap[key];\n          if (exec) {\n            event.preventDefault();\n            exec(event);\n          }\n        },\n        onClick() {\n          if (!interactive) return;\n          send({ type: \"CLICK\", value: index });\n        },\n        onFocus() {\n          if (!interactive) return;\n          send(\"FOCUS\");\n        },\n        onBlur() {\n          if (!interactive) return;\n          send(\"BLUR\");\n        }\n      });\n    }\n  };\n}\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)(\n    {\n      id: \"rating\",\n      initial: \"idle\",\n      context: {\n        name: \"rating\",\n        count: 5,\n        dir: \"ltr\",\n        value: -1,\n        readOnly: false,\n        disabled: false,\n        ...ctx,\n        hoveredValue: -1,\n        fieldsetDisabled: false,\n        translations: {\n          ratingValueText: (index) => `${index} stars`,\n          ...ctx.translations\n        }\n      },\n      created: [\"roundValueIfNeeded\"],\n      watch: {\n        allowHalf: [\"roundValueIfNeeded\"]\n      },\n      computed: {\n        isDisabled: (ctx2) => !!ctx2.disabled || ctx2.fieldsetDisabled,\n        isInteractive: (ctx2) => !(ctx2.isDisabled || ctx2.readOnly),\n        isHovering: (ctx2) => ctx2.hoveredValue > -1\n      },\n      activities: [\"trackFormControlState\"],\n      on: {\n        SET_VALUE: {\n          actions: [\"setValue\"]\n        },\n        CLEAR_VALUE: {\n          actions: [\"clearValue\"]\n        }\n      },\n      states: {\n        idle: {\n          entry: \"clearHoveredValue\",\n          on: {\n            GROUP_POINTER_OVER: \"hover\",\n            FOCUS: \"focus\",\n            CLICK: {\n              actions: [\"setValue\", \"focusActiveRadio\"]\n            }\n          }\n        },\n        focus: {\n          on: {\n            POINTER_OVER: {\n              actions: \"setHoveredValue\"\n            },\n            GROUP_POINTER_LEAVE: {\n              actions: \"clearHoveredValue\"\n            },\n            BLUR: \"idle\",\n            SPACE: {\n              guard: \"isValueEmpty\",\n              actions: [\"setValue\"]\n            },\n            CLICK: {\n              actions: [\"setValue\", \"focusActiveRadio\"]\n            },\n            ARROW_LEFT: {\n              actions: [\"setPrevValue\", \"focusActiveRadio\"]\n            },\n            ARROW_RIGHT: {\n              actions: [\"setNextValue\", \"focusActiveRadio\"]\n            },\n            HOME: {\n              actions: [\"setValueToMin\", \"focusActiveRadio\"]\n            },\n            END: {\n              actions: [\"setValueToMax\", \"focusActiveRadio\"]\n            }\n          }\n        },\n        hover: {\n          on: {\n            POINTER_OVER: {\n              actions: \"setHoveredValue\"\n            },\n            GROUP_POINTER_LEAVE: [\n              {\n                guard: \"isRadioFocused\",\n                target: \"focus\",\n                actions: \"clearHoveredValue\"\n              },\n              {\n                target: \"idle\",\n                actions: \"clearHoveredValue\"\n              }\n            ],\n            CLICK: {\n              actions: [\"setValue\", \"focusActiveRadio\"]\n            }\n          }\n        }\n      }\n    },\n    {\n      guards: {\n        isInteractive: (ctx2) => !(ctx2.disabled || ctx2.readOnly),\n        isHoveredValueEmpty: (ctx2) => ctx2.hoveredValue === -1,\n        isValueEmpty: (ctx2) => ctx2.value <= 0,\n        isRadioFocused: (ctx2) => !!dom.getControlEl(ctx2)?.contains(dom.getActiveElement(ctx2))\n      },\n      activities: {\n        trackFormControlState(ctx2, _evt, { initialContext }) {\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackFormControl)(dom.getHiddenInputEl(ctx2), {\n            onFieldsetDisabledChange(disabled) {\n              ctx2.fieldsetDisabled = disabled;\n            },\n            onFormReset() {\n              set.value(ctx2, initialContext.value);\n            }\n          });\n        }\n      },\n      actions: {\n        clearHoveredValue(ctx2) {\n          set.hoveredValue(ctx2, -1);\n        },\n        focusActiveRadio(ctx2) {\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.raf)(() => dom.getRadioEl(ctx2)?.focus());\n        },\n        setPrevValue(ctx2) {\n          const factor = ctx2.allowHalf ? 0.5 : 1;\n          set.value(ctx2, Math.max(0, ctx2.value - factor));\n        },\n        setNextValue(ctx2) {\n          const factor = ctx2.allowHalf ? 0.5 : 1;\n          const value = ctx2.value === -1 ? 0 : ctx2.value;\n          set.value(ctx2, Math.min(ctx2.count, value + factor));\n        },\n        setValueToMin(ctx2) {\n          set.value(ctx2, 1);\n        },\n        setValueToMax(ctx2) {\n          set.value(ctx2, ctx2.count);\n        },\n        setValue(ctx2, evt) {\n          const value = ctx2.hoveredValue === -1 ? evt.value : ctx2.hoveredValue;\n          set.value(ctx2, value);\n        },\n        clearValue(ctx2) {\n          set.value(ctx2, -1);\n        },\n        setHoveredValue(ctx2, evt) {\n          const half = ctx2.allowHalf && evt.isMidway;\n          const factor = half ? 0.5 : 0;\n          set.hoveredValue(ctx2, evt.index - factor);\n        },\n        roundValueIfNeeded(ctx2) {\n          if (ctx2.allowHalf) return;\n          ctx2.value = Math.round(ctx2.value);\n        }\n      }\n    }\n  );\n}\nvar invoke = {\n  change: (ctx) => {\n    ctx.onValueChange?.({ value: ctx.value });\n    dom.dispatchChangeEvent(ctx);\n  },\n  hoverChange: (ctx) => {\n    ctx.onHoverChange?.({ hoveredValue: ctx.hoveredValue });\n  }\n};\nvar set = {\n  value: (ctx, value) => {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual)(ctx.value, value)) return;\n    ctx.value = value;\n    invoke.change(ctx);\n  },\n  hoveredValue: (ctx, value) => {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.isEqual)(ctx.hoveredValue, value)) return;\n    ctx.hoveredValue = value;\n    invoke.hoverChange(ctx);\n  }\n};\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\n  \"allowHalf\",\n  \"autoFocus\",\n  \"count\",\n  \"dir\",\n  \"disabled\",\n  \"form\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"name\",\n  \"onHoverChange\",\n  \"onValueChange\",\n  \"required\",\n  \"readOnly\",\n  \"translations\",\n  \"value\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(props);\nvar itemProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\"index\"]);\nvar splitItemProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_2__.createSplitProps)(itemProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/rating-group/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/rect-utils/dist/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@zag-js/rect-utils/dist/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AffineTransform: () => (/* binding */ AffineTransform),\n/* harmony export */   addPoints: () => (/* binding */ addPoints),\n/* harmony export */   alignRect: () => (/* binding */ alignRect),\n/* harmony export */   clampPoint: () => (/* binding */ clampPoint),\n/* harmony export */   clampSize: () => (/* binding */ clampSize),\n/* harmony export */   closest: () => (/* binding */ closest),\n/* harmony export */   closestSideToPoint: () => (/* binding */ closestSideToPoint),\n/* harmony export */   closestSideToRect: () => (/* binding */ closestSideToRect),\n/* harmony export */   collisions: () => (/* binding */ collisions),\n/* harmony export */   constrainRect: () => (/* binding */ constrainRect),\n/* harmony export */   contains: () => (/* binding */ contains),\n/* harmony export */   containsPoint: () => (/* binding */ containsPoint),\n/* harmony export */   containsRect: () => (/* binding */ containsRect),\n/* harmony export */   createPoint: () => (/* binding */ createPoint),\n/* harmony export */   createRect: () => (/* binding */ createRect),\n/* harmony export */   debugPolygon: () => (/* binding */ debugPolygon),\n/* harmony export */   distance: () => (/* binding */ distance),\n/* harmony export */   distanceBtwEdges: () => (/* binding */ distanceBtwEdges),\n/* harmony export */   distanceFromPoint: () => (/* binding */ distanceFromPoint),\n/* harmony export */   distanceFromRect: () => (/* binding */ distanceFromRect),\n/* harmony export */   expand: () => (/* binding */ expand),\n/* harmony export */   fromRange: () => (/* binding */ fromRange),\n/* harmony export */   getElementPolygon: () => (/* binding */ getElementPolygon),\n/* harmony export */   getElementRect: () => (/* binding */ getElementRect),\n/* harmony export */   getPointAngle: () => (/* binding */ getPointAngle),\n/* harmony export */   getRectCenters: () => (/* binding */ getRectCenters),\n/* harmony export */   getRectCorners: () => (/* binding */ getRectCorners),\n/* harmony export */   getRectEdges: () => (/* binding */ getRectEdges),\n/* harmony export */   getRectFromPoints: () => (/* binding */ getRectFromPoints),\n/* harmony export */   getRotationRect: () => (/* binding */ getRotationRect),\n/* harmony export */   getViewportRect: () => (/* binding */ getViewportRect),\n/* harmony export */   getWindowRect: () => (/* binding */ getWindowRect),\n/* harmony export */   inset: () => (/* binding */ inset),\n/* harmony export */   intersection: () => (/* binding */ intersection),\n/* harmony export */   intersects: () => (/* binding */ intersects),\n/* harmony export */   isPoint: () => (/* binding */ isPoint),\n/* harmony export */   isPointEqual: () => (/* binding */ isPointEqual),\n/* harmony export */   isPointInPolygon: () => (/* binding */ isPointInPolygon),\n/* harmony export */   isRect: () => (/* binding */ isRect),\n/* harmony export */   isRectEqual: () => (/* binding */ isRectEqual),\n/* harmony export */   isSizeEqual: () => (/* binding */ isSizeEqual),\n/* harmony export */   isSymmetric: () => (/* binding */ isSymmetric),\n/* harmony export */   resizeRect: () => (/* binding */ resizeRect),\n/* harmony export */   rotate: () => (/* binding */ rotate),\n/* harmony export */   shift: () => (/* binding */ shift),\n/* harmony export */   shrink: () => (/* binding */ shrink),\n/* harmony export */   subtractPoints: () => (/* binding */ subtractPoints),\n/* harmony export */   toRad: () => (/* binding */ toRad),\n/* harmony export */   union: () => (/* binding */ union)\n/* harmony export */ });\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n// src/affine-transform.ts\nvar AffineTransform = class _AffineTransform {\n  constructor([m00, m01, m02, m10, m11, m12] = [0, 0, 0, 0, 0, 0]) {\n    __publicField(this, \"m00\");\n    __publicField(this, \"m01\");\n    __publicField(this, \"m02\");\n    __publicField(this, \"m10\");\n    __publicField(this, \"m11\");\n    __publicField(this, \"m12\");\n    __publicField(this, \"rotate\", (...args) => {\n      return this.prepend(_AffineTransform.rotate(...args));\n    });\n    __publicField(this, \"scale\", (...args) => {\n      return this.prepend(_AffineTransform.scale(...args));\n    });\n    __publicField(this, \"translate\", (...args) => {\n      return this.prepend(_AffineTransform.translate(...args));\n    });\n    this.m00 = m00;\n    this.m01 = m01;\n    this.m02 = m02;\n    this.m10 = m10;\n    this.m11 = m11;\n    this.m12 = m12;\n  }\n  applyTo(point) {\n    const { x, y } = point;\n    const { m00, m01, m02, m10, m11, m12 } = this;\n    return {\n      x: m00 * x + m01 * y + m02,\n      y: m10 * x + m11 * y + m12\n    };\n  }\n  prepend(other) {\n    return new _AffineTransform([\n      this.m00 * other.m00 + this.m01 * other.m10,\n      // m00\n      this.m00 * other.m01 + this.m01 * other.m11,\n      // m01\n      this.m00 * other.m02 + this.m01 * other.m12 + this.m02,\n      // m02\n      this.m10 * other.m00 + this.m11 * other.m10,\n      // m10\n      this.m10 * other.m01 + this.m11 * other.m11,\n      // m11\n      this.m10 * other.m02 + this.m11 * other.m12 + this.m12\n      // m12\n    ]);\n  }\n  append(other) {\n    return new _AffineTransform([\n      other.m00 * this.m00 + other.m01 * this.m10,\n      // m00\n      other.m00 * this.m01 + other.m01 * this.m11,\n      // m01\n      other.m00 * this.m02 + other.m01 * this.m12 + other.m02,\n      // m02\n      other.m10 * this.m00 + other.m11 * this.m10,\n      // m10\n      other.m10 * this.m01 + other.m11 * this.m11,\n      // m11\n      other.m10 * this.m02 + other.m11 * this.m12 + other.m12\n      // m12\n    ]);\n  }\n  get determinant() {\n    return this.m00 * this.m11 - this.m01 * this.m10;\n  }\n  get isInvertible() {\n    const det = this.determinant;\n    return isFinite(det) && isFinite(this.m02) && isFinite(this.m12) && det !== 0;\n  }\n  invert() {\n    const det = this.determinant;\n    return new _AffineTransform([\n      this.m11 / det,\n      // m00\n      -this.m01 / det,\n      // m01\n      (this.m01 * this.m12 - this.m11 * this.m02) / det,\n      // m02\n      -this.m10 / det,\n      // m10\n      this.m00 / det,\n      // m11\n      (this.m10 * this.m02 - this.m00 * this.m12) / det\n      // m12\n    ]);\n  }\n  get array() {\n    return [this.m00, this.m01, this.m02, this.m10, this.m11, this.m12, 0, 0, 1];\n  }\n  get float32Array() {\n    return new Float32Array(this.array);\n  }\n  // Static\n  static get identity() {\n    return new _AffineTransform([1, 0, 0, 0, 1, 0]);\n  }\n  static rotate(theta, origin) {\n    const rotation = new _AffineTransform([Math.cos(theta), -Math.sin(theta), 0, Math.sin(theta), Math.cos(theta), 0]);\n    if (origin && (origin.x !== 0 || origin.y !== 0)) {\n      return _AffineTransform.multiply(\n        _AffineTransform.translate(origin.x, origin.y),\n        rotation,\n        _AffineTransform.translate(-origin.x, -origin.y)\n      );\n    }\n    return rotation;\n  }\n  static scale(sx, sy = sx, origin = { x: 0, y: 0 }) {\n    const scale = new _AffineTransform([sx, 0, 0, 0, sy, 0]);\n    if (origin.x !== 0 || origin.y !== 0) {\n      return _AffineTransform.multiply(\n        _AffineTransform.translate(origin.x, origin.y),\n        scale,\n        _AffineTransform.translate(-origin.x, -origin.y)\n      );\n    }\n    return scale;\n  }\n  static translate(tx, ty) {\n    return new _AffineTransform([1, 0, tx, 0, 1, ty]);\n  }\n  static multiply(...[first, ...rest]) {\n    if (!first) return _AffineTransform.identity;\n    return rest.reduce((result, item) => result.prepend(item), first);\n  }\n  get a() {\n    return this.m00;\n  }\n  get b() {\n    return this.m10;\n  }\n  get c() {\n    return this.m01;\n  }\n  get d() {\n    return this.m11;\n  }\n  get tx() {\n    return this.m02;\n  }\n  get ty() {\n    return this.m12;\n  }\n  get scaleComponents() {\n    return { x: this.a, y: this.d };\n  }\n  get translationComponents() {\n    return { x: this.tx, y: this.ty };\n  }\n  get skewComponents() {\n    return { x: this.c, y: this.b };\n  }\n  toString() {\n    return `matrix(${this.a}, ${this.b}, ${this.c}, ${this.d}, ${this.tx}, ${this.ty})`;\n  }\n};\n\n// src/align.ts\nfunction hAlign(a, ref, h) {\n  let x = ref.minX;\n  if (h === \"left-inside\") x = ref.minX;\n  if (h === \"left-outside\") x = ref.minX - ref.width;\n  if (h === \"right-inside\") x = ref.maxX - ref.width;\n  if (h === \"right-outside\") x = ref.maxX;\n  if (h === \"center\") x = ref.midX - ref.width / 2;\n  return { ...a, x };\n}\nfunction vAlign(a, ref, v) {\n  let y = ref.minY;\n  if (v === \"top-inside\") y = ref.minY;\n  if (v === \"top-outside\") y = ref.minY - a.height;\n  if (v === \"bottom-inside\") y = ref.maxY - a.height;\n  if (v === \"bottom-outside\") y = ref.maxY;\n  if (v === \"center\") y = ref.midY - a.height / 2;\n  return { ...a, y };\n}\nfunction alignRect(a, ref, options) {\n  const { h, v } = options;\n  return vAlign(hAlign(a, ref, h), ref, v);\n}\n\n// src/angle.ts\nfunction getPointAngle(rect, point, reference = rect.center) {\n  const x = point.x - reference.x;\n  const y = point.y - reference.y;\n  const deg = Math.atan2(x, y) * (180 / Math.PI) + 180;\n  return 360 - deg;\n}\n\n// src/clamp.ts\nvar clamp = (value, min3, max2) => Math.min(Math.max(value, min3), max2);\nvar clampPoint = (position, size, boundaryRect) => {\n  const x = clamp(position.x, boundaryRect.x, boundaryRect.x + boundaryRect.width - size.width);\n  const y = clamp(position.y, boundaryRect.y, boundaryRect.y + boundaryRect.height - size.height);\n  return { x, y };\n};\nvar defaultMinSize = {\n  width: 0,\n  height: 0\n};\nvar defaultMaxSize = {\n  width: Infinity,\n  height: Infinity\n};\nvar clampSize = (size, minSize = defaultMinSize, maxSize = defaultMaxSize) => {\n  return {\n    width: Math.min(Math.max(size.width, minSize.width), maxSize.width),\n    height: Math.min(Math.max(size.height, minSize.height), maxSize.height)\n  };\n};\n\n// src/rect.ts\nvar createPoint = (x, y) => ({ x, y });\nvar subtractPoints = (a, b) => createPoint(a.x - b.x, a.y - b.y);\nvar addPoints = (a, b) => createPoint(a.x + b.x, a.y + b.y);\nfunction isPoint(v) {\n  return Reflect.has(v, \"x\") && Reflect.has(v, \"y\");\n}\nfunction createRect(r) {\n  const { x, y, width, height } = r;\n  const midX = x + width / 2;\n  const midY = y + height / 2;\n  return {\n    x,\n    y,\n    width,\n    height,\n    minX: x,\n    minY: y,\n    maxX: x + width,\n    maxY: y + height,\n    midX,\n    midY,\n    center: createPoint(midX, midY)\n  };\n}\nfunction isRect(v) {\n  return Reflect.has(v, \"x\") && Reflect.has(v, \"y\") && Reflect.has(v, \"width\") && Reflect.has(v, \"height\");\n}\nfunction getRectCenters(v) {\n  const top = createPoint(v.midX, v.minY);\n  const right = createPoint(v.maxX, v.midY);\n  const bottom = createPoint(v.midX, v.maxY);\n  const left = createPoint(v.minX, v.midY);\n  return { top, right, bottom, left };\n}\nfunction getRectCorners(v) {\n  const top = createPoint(v.minX, v.minY);\n  const right = createPoint(v.maxX, v.minY);\n  const bottom = createPoint(v.maxX, v.maxY);\n  const left = createPoint(v.minX, v.maxY);\n  return { top, right, bottom, left };\n}\nfunction getRectEdges(v) {\n  const c = getRectCorners(v);\n  const top = [c.top, c.right];\n  const right = [c.right, c.bottom];\n  const bottom = [c.left, c.bottom];\n  const left = [c.top, c.left];\n  return { top, right, bottom, left };\n}\n\n// src/intersection.ts\nfunction intersects(a, b) {\n  return a.x < b.maxX && a.y < b.maxY && a.maxX > b.x && a.maxY > b.y;\n}\nfunction intersection(a, b) {\n  const x = Math.max(a.x, b.x);\n  const y = Math.max(a.y, b.y);\n  const x2 = Math.min(a.x + a.width, b.x + b.width);\n  const y2 = Math.min(a.y + a.height, b.y + b.height);\n  return createRect({ x, y, width: x2 - x, height: y2 - y });\n}\nfunction collisions(a, b) {\n  return {\n    top: a.minY <= b.minY,\n    right: a.maxX >= b.maxX,\n    bottom: a.maxY >= b.maxY,\n    left: a.minX <= b.minX\n  };\n}\n\n// src/distance.ts\nfunction distance(a, b = { x: 0, y: 0 }) {\n  return Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));\n}\nfunction distanceFromPoint(r, p) {\n  let x = 0;\n  let y = 0;\n  if (p.x < r.x) x = r.x - p.x;\n  else if (p.x > r.maxX) x = p.x - r.maxX;\n  if (p.y < r.y) y = r.y - p.y;\n  else if (p.y > r.maxY) y = p.y - r.maxY;\n  return { x, y, value: distance({ x, y }) };\n}\nfunction distanceFromRect(a, b) {\n  if (intersects(a, b)) return { x: 0, y: 0, value: 0 };\n  const left = a.x < b.x ? a : b;\n  const right = b.x < a.x ? a : b;\n  const upper = a.y < b.y ? a : b;\n  const lower = b.y < a.y ? a : b;\n  let x = left.x === right.x ? 0 : right.x - left.maxX;\n  x = Math.max(0, x);\n  let y = upper.y === lower.y ? 0 : lower.y - upper.maxY;\n  y = Math.max(0, y);\n  return { x, y, value: distance({ x, y }) };\n}\nfunction distanceBtwEdges(a, b) {\n  return {\n    left: b.x - a.x,\n    top: b.y - a.y,\n    right: a.maxX - b.maxX,\n    bottom: a.maxY - b.maxY\n  };\n}\n\n// src/closest.ts\nfunction closest(...pts) {\n  return (a) => {\n    const ds = pts.map((b) => distance(b, a));\n    const c = Math.min.apply(Math, ds);\n    return pts[ds.indexOf(c)];\n  };\n}\nfunction closestSideToRect(ref, r) {\n  if (r.maxX <= ref.minX) return \"left\";\n  if (r.minX >= ref.maxX) return \"right\";\n  if (r.maxY <= ref.minY) return \"top\";\n  if (r.minY >= ref.maxY) return \"bottom\";\n  return \"left\";\n}\nfunction closestSideToPoint(ref, p) {\n  const { x, y } = p;\n  const dl = x - ref.minX;\n  const dr = ref.maxX - x;\n  const dt = y - ref.minY;\n  const db = ref.maxY - y;\n  let closest2 = dl;\n  let side = \"left\";\n  if (dr < closest2) {\n    closest2 = dr;\n    side = \"right\";\n  }\n  if (dt < closest2) {\n    closest2 = dt;\n    side = \"top\";\n  }\n  if (db < closest2) {\n    side = \"bottom\";\n  }\n  return side;\n}\n\n// src/constrain.ts\nvar constrainRect = (rect, boundary) => {\n  const left = Math.max(boundary.x, Math.min(rect.x, boundary.x + boundary.width - rect.width));\n  const top = Math.max(boundary.y, Math.min(rect.y, boundary.y + boundary.height - rect.height));\n  return {\n    x: left,\n    y: top,\n    width: Math.min(rect.width, boundary.width),\n    height: Math.min(rect.height, boundary.height)\n  };\n};\n\n// src/contains.ts\nfunction containsPoint(r, p) {\n  return r.minX <= p.x && p.x <= r.maxX && r.minY <= p.y && p.y <= r.maxY;\n}\nfunction containsRect(a, b) {\n  return Object.values(getRectCorners(b)).every((c) => containsPoint(a, c));\n}\nfunction contains(r, v) {\n  return isRect(v) ? containsRect(r, v) : containsPoint(r, v);\n}\n\n// src/equality.ts\nvar isSizeEqual = (a, b) => {\n  return a.width === b.width && a.height === b.height;\n};\nvar isPointEqual = (a, b) => {\n  return a.x === b.x && a.y === b.y;\n};\nvar isRectEqual = (a, b) => {\n  return isPointEqual(a, b) && isSizeEqual(a, b);\n};\n\n// src/from-element.ts\nvar styleCache = /* @__PURE__ */ new WeakMap();\nfunction getCacheComputedStyle(el) {\n  if (!styleCache.has(el)) {\n    const win = el.ownerDocument.defaultView || window;\n    styleCache.set(el, win.getComputedStyle(el));\n  }\n  return styleCache.get(el);\n}\nfunction getElementRect(el, opts = {}) {\n  return createRect(getClientRect(el, opts));\n}\nfunction getClientRect(el, opts = {}) {\n  const { excludeScrollbar = false, excludeBorders = false } = opts;\n  const { x, y, width, height } = el.getBoundingClientRect();\n  const r = { x, y, width, height };\n  const style = getCacheComputedStyle(el);\n  const { borderLeftWidth, borderTopWidth, borderRightWidth, borderBottomWidth } = style;\n  const borderXWidth = sum(borderLeftWidth, borderRightWidth);\n  const borderYWidth = sum(borderTopWidth, borderBottomWidth);\n  if (excludeBorders) {\n    r.width -= borderXWidth;\n    r.height -= borderYWidth;\n    r.x += px(borderLeftWidth);\n    r.y += px(borderTopWidth);\n  }\n  if (excludeScrollbar) {\n    const scrollbarWidth = el.offsetWidth - el.clientWidth - borderXWidth;\n    const scrollbarHeight = el.offsetHeight - el.clientHeight - borderYWidth;\n    r.width -= scrollbarWidth;\n    r.height -= scrollbarHeight;\n  }\n  return r;\n}\nvar px = (v) => parseFloat(v.replace(\"px\", \"\"));\nvar sum = (...vals) => vals.reduce((sum2, v) => sum2 + (v ? px(v) : 0), 0);\n\n// src/from-points.ts\nfunction getRectFromPoints(...pts) {\n  const xs = pts.map((p) => p.x);\n  const ys = pts.map((p) => p.y);\n  const x = Math.min(...xs);\n  const y = Math.min(...ys);\n  const width = Math.max(...xs) - x;\n  const height = Math.max(...ys) - y;\n  return createRect({ x, y, width, height });\n}\n\n// src/union.ts\nvar { min, max } = Math;\nfunction union(...rs) {\n  const pMin = {\n    x: min(...rs.map((r) => r.minX)),\n    y: min(...rs.map((r) => r.minY))\n  };\n  const pMax = {\n    x: max(...rs.map((r) => r.maxX)),\n    y: max(...rs.map((r) => r.maxY))\n  };\n  return getRectFromPoints(pMin, pMax);\n}\n\n// src/from-range.ts\nfunction fromRange(range) {\n  let rs = [];\n  const rects = Array.from(range.getClientRects());\n  if (rects.length) {\n    rs = rs.concat(rects.map(createRect));\n    return union.apply(void 0, rs);\n  }\n  let start = range.startContainer;\n  if (start.nodeType === Node.TEXT_NODE) {\n    start = start.parentNode;\n  }\n  if (start instanceof HTMLElement) {\n    const r = getElementRect(start);\n    rs.push({ ...r, x: r.maxX, width: 0 });\n  }\n  return union.apply(void 0, rs);\n}\n\n// src/from-rotation.ts\nfunction toRad(d) {\n  return d % 360 * Math.PI / 180;\n}\nfunction rotate(a, d, c) {\n  const r = toRad(d);\n  const sin = Math.sin(r);\n  const cos = Math.cos(r);\n  const x = a.x - c.x;\n  const y = a.y - c.y;\n  return {\n    x: c.x + x * cos - y * sin,\n    y: c.y + x * sin + y * cos\n  };\n}\nfunction getRotationRect(r, deg) {\n  const rr = Object.values(getRectCorners(r)).map((p) => rotate(p, deg, r.center));\n  const xs = rr.map((p) => p.x);\n  const ys = rr.map((p) => p.y);\n  const minX = Math.min(...xs);\n  const minY = Math.min(...ys);\n  const maxX = Math.max(...xs);\n  const maxY = Math.max(...ys);\n  return createRect({\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  });\n}\n\n// src/from-window.ts\nfunction getWindowRect(win, opts = {}) {\n  return createRect(getViewportRect(win, opts));\n}\nfunction getViewportRect(win, opts) {\n  const { excludeScrollbar = false } = opts;\n  const { innerWidth, innerHeight, document: doc, visualViewport } = win;\n  const width = visualViewport?.width || innerWidth;\n  const height = visualViewport?.height || innerHeight;\n  const rect = { x: 0, y: 0, width, height };\n  if (excludeScrollbar) {\n    const scrollbarWidth = innerWidth - doc.documentElement.clientWidth;\n    const scrollbarHeight = innerHeight - doc.documentElement.clientHeight;\n    rect.width -= scrollbarWidth;\n    rect.height -= scrollbarHeight;\n  }\n  return rect;\n}\n\n// src/operations.ts\nvar isSymmetric = (v) => \"dx\" in v || \"dy\" in v;\nfunction inset(r, i) {\n  const v = isSymmetric(i) ? { left: i.dx, right: i.dx, top: i.dy, bottom: i.dy } : i;\n  const { top = 0, right = 0, bottom = 0, left = 0 } = v;\n  return createRect({\n    x: r.x + left,\n    y: r.y + top,\n    width: r.width - left - right,\n    height: r.height - top - bottom\n  });\n}\nfunction expand(r, v) {\n  const value = typeof v === \"number\" ? { dx: -v, dy: -v } : v;\n  return inset(r, value);\n}\nfunction shrink(r, v) {\n  const value = typeof v === \"number\" ? { dx: -v, dy: -v } : v;\n  return inset(r, value);\n}\nfunction shift(r, o) {\n  const { x = 0, y = 0 } = o;\n  return createRect({\n    x: r.x + x,\n    y: r.y + y,\n    width: r.width,\n    height: r.height\n  });\n}\n\n// src/polygon.ts\nfunction getElementPolygon(rectValue, placement) {\n  const rect = createRect(rectValue);\n  const { top, right, left, bottom } = getRectCorners(rect);\n  const [base] = placement.split(\"-\");\n  return {\n    top: [left, top, right, bottom],\n    right: [top, right, bottom, left],\n    bottom: [top, left, bottom, right],\n    left: [right, top, left, bottom]\n  }[base];\n}\nfunction isPointInPolygon(polygon, point) {\n  const { x, y } = point;\n  let c = false;\n  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n    const xi = polygon[i].x;\n    const yi = polygon[i].y;\n    const xj = polygon[j].x;\n    const yj = polygon[j].y;\n    if (yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi) {\n      c = !c;\n    }\n  }\n  return c;\n}\nfunction createPolygonElement() {\n  const id = \"debug-polygon\";\n  const existingPolygon = document.getElementById(id);\n  if (existingPolygon) {\n    return existingPolygon;\n  }\n  const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n  Object.assign(svg.style, {\n    top: \"0\",\n    left: \"0\",\n    width: \"100%\",\n    height: \"100%\",\n    opacity: \"0.15\",\n    position: \"fixed\",\n    pointerEvents: \"none\",\n    fill: \"red\"\n  });\n  const polygon = document.createElementNS(\"http://www.w3.org/2000/svg\", \"polygon\");\n  polygon.setAttribute(\"id\", id);\n  polygon.setAttribute(\"points\", \"0,0 0,0\");\n  svg.appendChild(polygon);\n  document.body.appendChild(svg);\n  return polygon;\n}\nfunction debugPolygon(polygon) {\n  const el = createPolygonElement();\n  const points = polygon.map((point) => `${point.x},${point.y}`).join(\" \");\n  el.setAttribute(\"points\", points);\n  return () => {\n    el.remove();\n  };\n}\n\n// src/compass.ts\nvar compassDirectionMap = {\n  n: { x: 0.5, y: 0 },\n  ne: { x: 1, y: 0 },\n  e: { x: 1, y: 0.5 },\n  se: { x: 1, y: 1 },\n  s: { x: 0.5, y: 1 },\n  sw: { x: 0, y: 1 },\n  w: { x: 0, y: 0.5 },\n  nw: { x: 0, y: 0 }\n};\nvar oppositeDirectionMap = {\n  n: \"s\",\n  ne: \"sw\",\n  e: \"w\",\n  se: \"nw\",\n  s: \"n\",\n  sw: \"ne\",\n  w: \"e\",\n  nw: \"se\"\n};\n\n// src/resize.ts\nvar { sign, abs, min: min2 } = Math;\nfunction getRectExtentPoint(rect, direction) {\n  const { minX, minY, maxX, maxY, midX, midY } = rect;\n  const x = direction.includes(\"w\") ? minX : direction.includes(\"e\") ? maxX : midX;\n  const y = direction.includes(\"n\") ? minY : direction.includes(\"s\") ? maxY : midY;\n  return { x, y };\n}\nfunction getOppositeDirection(direction) {\n  return oppositeDirectionMap[direction];\n}\nfunction resizeRect(rect, offset, direction, opts) {\n  const { scalingOriginMode, lockAspectRatio } = opts;\n  const extent = getRectExtentPoint(rect, direction);\n  const oppositeDirection = getOppositeDirection(direction);\n  const oppositeExtent = getRectExtentPoint(rect, oppositeDirection);\n  if (scalingOriginMode === \"center\") {\n    offset = { x: offset.x * 2, y: offset.y * 2 };\n  }\n  const newExtent = {\n    x: extent.x + offset.x,\n    y: extent.y + offset.y\n  };\n  const multiplier = {\n    x: compassDirectionMap[direction].x * 2 - 1,\n    y: compassDirectionMap[direction].y * 2 - 1\n  };\n  const newSize = {\n    width: newExtent.x - oppositeExtent.x,\n    height: newExtent.y - oppositeExtent.y\n  };\n  const scaleX = multiplier.x * newSize.width / rect.width;\n  const scaleY = multiplier.y * newSize.height / rect.height;\n  const largestMagnitude = abs(scaleX) > abs(scaleY) ? scaleX : scaleY;\n  const scale = lockAspectRatio ? { x: largestMagnitude, y: largestMagnitude } : {\n    x: extent.x === oppositeExtent.x ? 1 : scaleX,\n    y: extent.y === oppositeExtent.y ? 1 : scaleY\n  };\n  if (extent.y === oppositeExtent.y) {\n    scale.y = abs(scale.y);\n  } else if (sign(scale.y) !== sign(scaleY)) {\n    scale.y *= -1;\n  }\n  if (extent.x === oppositeExtent.x) {\n    scale.x = abs(scale.x);\n  } else if (sign(scale.x) !== sign(scaleX)) {\n    scale.x *= -1;\n  }\n  switch (scalingOriginMode) {\n    case \"extent\":\n      return transformRect(rect, AffineTransform.scale(scale.x, scale.y, oppositeExtent), false);\n    case \"center\":\n      return transformRect(\n        rect,\n        AffineTransform.scale(scale.x, scale.y, {\n          x: rect.midX,\n          y: rect.midY\n        }),\n        false\n      );\n  }\n}\nfunction createRectFromPoints(initialPoint, finalPoint, normalized = true) {\n  if (normalized) {\n    return {\n      x: min2(finalPoint.x, initialPoint.x),\n      y: min2(finalPoint.y, initialPoint.y),\n      width: abs(finalPoint.x - initialPoint.x),\n      height: abs(finalPoint.y - initialPoint.y)\n    };\n  }\n  return {\n    x: initialPoint.x,\n    y: initialPoint.y,\n    width: finalPoint.x - initialPoint.x,\n    height: finalPoint.y - initialPoint.y\n  };\n}\nfunction transformRect(rect, transform, normalized = true) {\n  const p1 = transform.applyTo({ x: rect.minX, y: rect.minY });\n  const p2 = transform.applyTo({ x: rect.maxX, y: rect.maxY });\n  return createRectFromPoints(p1, p2, normalized);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9yZWN0LXV0aWxzL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBLDhFQUE4RSw2REFBNkQ7QUFDM0k7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksT0FBTztBQUNuQixZQUFZLCtCQUErQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxZQUFZO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLHFCQUFxQixPQUFPLElBQUksT0FBTyxJQUFJLE9BQU8sSUFBSSxPQUFPLElBQUksUUFBUSxJQUFJLFFBQVE7QUFDckY7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBLFVBQVUsT0FBTztBQUNqQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsK0JBQStCLE1BQU07QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxzQkFBc0I7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IscUNBQXFDO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDJCQUEyQixZQUFZO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsd0JBQXdCLE1BQU07QUFDekM7QUFDQTtBQUNBLGlDQUFpQztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyx3QkFBd0IsTUFBTTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLE9BQU87QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUM7QUFDckM7QUFDQTtBQUNBLG9DQUFvQztBQUNwQyxVQUFVLG1EQUFtRDtBQUM3RCxVQUFVLHNCQUFzQjtBQUNoQyxjQUFjO0FBQ2Q7QUFDQSxVQUFVLHVFQUF1RTtBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixxQkFBcUI7QUFDM0M7O0FBRUE7QUFDQSxNQUFNLFdBQVc7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYywyQkFBMkI7QUFDekM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0EscUNBQXFDO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBLFVBQVUsMkJBQTJCO0FBQ3JDLFVBQVUseURBQXlEO0FBQ25FO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsbURBQW1EO0FBQ2xGLFVBQVUsMkNBQTJDO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLDBDQUEwQyxpQkFBaUI7QUFDM0Q7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLGlCQUFpQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQSxVQUFVLGVBQWU7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLDJCQUEyQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLFVBQVUsT0FBTztBQUNqQjtBQUNBLDBDQUEwQyxvQkFBb0I7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsUUFBUSxHQUFHLFFBQVE7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsT0FBTyxjQUFjO0FBQ3JCLFFBQVEsWUFBWTtBQUNwQixPQUFPLGNBQWM7QUFDckIsUUFBUSxZQUFZO0FBQ3BCLE9BQU8sY0FBYztBQUNyQixRQUFRLFlBQVk7QUFDcEIsT0FBTyxjQUFjO0FBQ3JCLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsTUFBTSx1QkFBdUI7QUFDN0I7QUFDQSxVQUFVLHFDQUFxQztBQUMvQztBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLHFDQUFxQztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQywyQ0FBMkM7QUFDL0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyw0QkFBNEI7QUFDN0QsaUNBQWlDLDRCQUE0QjtBQUM3RDtBQUNBOztBQUVtcEIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9waGlsaWFoYW1tb25kL0Rlc2t0b3AvbGVhcm5lci1hcHAtc3lzdGVtL25vZGVfbW9kdWxlcy9AemFnLWpzL3JlY3QtdXRpbHMvZGlzdC9pbmRleC5tanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBfX2RlZk5vcm1hbFByb3AgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBrZXkgaW4gb2JqID8gX19kZWZQcm9wKG9iaiwga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUsIHZhbHVlIH0pIDogb2JqW2tleV0gPSB2YWx1ZTtcbnZhciBfX3B1YmxpY0ZpZWxkID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4gX19kZWZOb3JtYWxQcm9wKG9iaiwgdHlwZW9mIGtleSAhPT0gXCJzeW1ib2xcIiA/IGtleSArIFwiXCIgOiBrZXksIHZhbHVlKTtcblxuLy8gc3JjL2FmZmluZS10cmFuc2Zvcm0udHNcbnZhciBBZmZpbmVUcmFuc2Zvcm0gPSBjbGFzcyBfQWZmaW5lVHJhbnNmb3JtIHtcbiAgY29uc3RydWN0b3IoW20wMCwgbTAxLCBtMDIsIG0xMCwgbTExLCBtMTJdID0gWzAsIDAsIDAsIDAsIDAsIDBdKSB7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcIm0wMFwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwibTAxXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJtMDJcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcIm0xMFwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwibTExXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJtMTJcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInJvdGF0ZVwiLCAoLi4uYXJncykgPT4ge1xuICAgICAgcmV0dXJuIHRoaXMucHJlcGVuZChfQWZmaW5lVHJhbnNmb3JtLnJvdGF0ZSguLi5hcmdzKSk7XG4gICAgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInNjYWxlXCIsICguLi5hcmdzKSA9PiB7XG4gICAgICByZXR1cm4gdGhpcy5wcmVwZW5kKF9BZmZpbmVUcmFuc2Zvcm0uc2NhbGUoLi4uYXJncykpO1xuICAgIH0pO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJ0cmFuc2xhdGVcIiwgKC4uLmFyZ3MpID0+IHtcbiAgICAgIHJldHVybiB0aGlzLnByZXBlbmQoX0FmZmluZVRyYW5zZm9ybS50cmFuc2xhdGUoLi4uYXJncykpO1xuICAgIH0pO1xuICAgIHRoaXMubTAwID0gbTAwO1xuICAgIHRoaXMubTAxID0gbTAxO1xuICAgIHRoaXMubTAyID0gbTAyO1xuICAgIHRoaXMubTEwID0gbTEwO1xuICAgIHRoaXMubTExID0gbTExO1xuICAgIHRoaXMubTEyID0gbTEyO1xuICB9XG4gIGFwcGx5VG8ocG9pbnQpIHtcbiAgICBjb25zdCB7IHgsIHkgfSA9IHBvaW50O1xuICAgIGNvbnN0IHsgbTAwLCBtMDEsIG0wMiwgbTEwLCBtMTEsIG0xMiB9ID0gdGhpcztcbiAgICByZXR1cm4ge1xuICAgICAgeDogbTAwICogeCArIG0wMSAqIHkgKyBtMDIsXG4gICAgICB5OiBtMTAgKiB4ICsgbTExICogeSArIG0xMlxuICAgIH07XG4gIH1cbiAgcHJlcGVuZChvdGhlcikge1xuICAgIHJldHVybiBuZXcgX0FmZmluZVRyYW5zZm9ybShbXG4gICAgICB0aGlzLm0wMCAqIG90aGVyLm0wMCArIHRoaXMubTAxICogb3RoZXIubTEwLFxuICAgICAgLy8gbTAwXG4gICAgICB0aGlzLm0wMCAqIG90aGVyLm0wMSArIHRoaXMubTAxICogb3RoZXIubTExLFxuICAgICAgLy8gbTAxXG4gICAgICB0aGlzLm0wMCAqIG90aGVyLm0wMiArIHRoaXMubTAxICogb3RoZXIubTEyICsgdGhpcy5tMDIsXG4gICAgICAvLyBtMDJcbiAgICAgIHRoaXMubTEwICogb3RoZXIubTAwICsgdGhpcy5tMTEgKiBvdGhlci5tMTAsXG4gICAgICAvLyBtMTBcbiAgICAgIHRoaXMubTEwICogb3RoZXIubTAxICsgdGhpcy5tMTEgKiBvdGhlci5tMTEsXG4gICAgICAvLyBtMTFcbiAgICAgIHRoaXMubTEwICogb3RoZXIubTAyICsgdGhpcy5tMTEgKiBvdGhlci5tMTIgKyB0aGlzLm0xMlxuICAgICAgLy8gbTEyXG4gICAgXSk7XG4gIH1cbiAgYXBwZW5kKG90aGVyKSB7XG4gICAgcmV0dXJuIG5ldyBfQWZmaW5lVHJhbnNmb3JtKFtcbiAgICAgIG90aGVyLm0wMCAqIHRoaXMubTAwICsgb3RoZXIubTAxICogdGhpcy5tMTAsXG4gICAgICAvLyBtMDBcbiAgICAgIG90aGVyLm0wMCAqIHRoaXMubTAxICsgb3RoZXIubTAxICogdGhpcy5tMTEsXG4gICAgICAvLyBtMDFcbiAgICAgIG90aGVyLm0wMCAqIHRoaXMubTAyICsgb3RoZXIubTAxICogdGhpcy5tMTIgKyBvdGhlci5tMDIsXG4gICAgICAvLyBtMDJcbiAgICAgIG90aGVyLm0xMCAqIHRoaXMubTAwICsgb3RoZXIubTExICogdGhpcy5tMTAsXG4gICAgICAvLyBtMTBcbiAgICAgIG90aGVyLm0xMCAqIHRoaXMubTAxICsgb3RoZXIubTExICogdGhpcy5tMTEsXG4gICAgICAvLyBtMTFcbiAgICAgIG90aGVyLm0xMCAqIHRoaXMubTAyICsgb3RoZXIubTExICogdGhpcy5tMTIgKyBvdGhlci5tMTJcbiAgICAgIC8vIG0xMlxuICAgIF0pO1xuICB9XG4gIGdldCBkZXRlcm1pbmFudCgpIHtcbiAgICByZXR1cm4gdGhpcy5tMDAgKiB0aGlzLm0xMSAtIHRoaXMubTAxICogdGhpcy5tMTA7XG4gIH1cbiAgZ2V0IGlzSW52ZXJ0aWJsZSgpIHtcbiAgICBjb25zdCBkZXQgPSB0aGlzLmRldGVybWluYW50O1xuICAgIHJldHVybiBpc0Zpbml0ZShkZXQpICYmIGlzRmluaXRlKHRoaXMubTAyKSAmJiBpc0Zpbml0ZSh0aGlzLm0xMikgJiYgZGV0ICE9PSAwO1xuICB9XG4gIGludmVydCgpIHtcbiAgICBjb25zdCBkZXQgPSB0aGlzLmRldGVybWluYW50O1xuICAgIHJldHVybiBuZXcgX0FmZmluZVRyYW5zZm9ybShbXG4gICAgICB0aGlzLm0xMSAvIGRldCxcbiAgICAgIC8vIG0wMFxuICAgICAgLXRoaXMubTAxIC8gZGV0LFxuICAgICAgLy8gbTAxXG4gICAgICAodGhpcy5tMDEgKiB0aGlzLm0xMiAtIHRoaXMubTExICogdGhpcy5tMDIpIC8gZGV0LFxuICAgICAgLy8gbTAyXG4gICAgICAtdGhpcy5tMTAgLyBkZXQsXG4gICAgICAvLyBtMTBcbiAgICAgIHRoaXMubTAwIC8gZGV0LFxuICAgICAgLy8gbTExXG4gICAgICAodGhpcy5tMTAgKiB0aGlzLm0wMiAtIHRoaXMubTAwICogdGhpcy5tMTIpIC8gZGV0XG4gICAgICAvLyBtMTJcbiAgICBdKTtcbiAgfVxuICBnZXQgYXJyYXkoKSB7XG4gICAgcmV0dXJuIFt0aGlzLm0wMCwgdGhpcy5tMDEsIHRoaXMubTAyLCB0aGlzLm0xMCwgdGhpcy5tMTEsIHRoaXMubTEyLCAwLCAwLCAxXTtcbiAgfVxuICBnZXQgZmxvYXQzMkFycmF5KCkge1xuICAgIHJldHVybiBuZXcgRmxvYXQzMkFycmF5KHRoaXMuYXJyYXkpO1xuICB9XG4gIC8vIFN0YXRpY1xuICBzdGF0aWMgZ2V0IGlkZW50aXR5KCkge1xuICAgIHJldHVybiBuZXcgX0FmZmluZVRyYW5zZm9ybShbMSwgMCwgMCwgMCwgMSwgMF0pO1xuICB9XG4gIHN0YXRpYyByb3RhdGUodGhldGEsIG9yaWdpbikge1xuICAgIGNvbnN0IHJvdGF0aW9uID0gbmV3IF9BZmZpbmVUcmFuc2Zvcm0oW01hdGguY29zKHRoZXRhKSwgLU1hdGguc2luKHRoZXRhKSwgMCwgTWF0aC5zaW4odGhldGEpLCBNYXRoLmNvcyh0aGV0YSksIDBdKTtcbiAgICBpZiAob3JpZ2luICYmIChvcmlnaW4ueCAhPT0gMCB8fCBvcmlnaW4ueSAhPT0gMCkpIHtcbiAgICAgIHJldHVybiBfQWZmaW5lVHJhbnNmb3JtLm11bHRpcGx5KFxuICAgICAgICBfQWZmaW5lVHJhbnNmb3JtLnRyYW5zbGF0ZShvcmlnaW4ueCwgb3JpZ2luLnkpLFxuICAgICAgICByb3RhdGlvbixcbiAgICAgICAgX0FmZmluZVRyYW5zZm9ybS50cmFuc2xhdGUoLW9yaWdpbi54LCAtb3JpZ2luLnkpXG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm4gcm90YXRpb247XG4gIH1cbiAgc3RhdGljIHNjYWxlKHN4LCBzeSA9IHN4LCBvcmlnaW4gPSB7IHg6IDAsIHk6IDAgfSkge1xuICAgIGNvbnN0IHNjYWxlID0gbmV3IF9BZmZpbmVUcmFuc2Zvcm0oW3N4LCAwLCAwLCAwLCBzeSwgMF0pO1xuICAgIGlmIChvcmlnaW4ueCAhPT0gMCB8fCBvcmlnaW4ueSAhPT0gMCkge1xuICAgICAgcmV0dXJuIF9BZmZpbmVUcmFuc2Zvcm0ubXVsdGlwbHkoXG4gICAgICAgIF9BZmZpbmVUcmFuc2Zvcm0udHJhbnNsYXRlKG9yaWdpbi54LCBvcmlnaW4ueSksXG4gICAgICAgIHNjYWxlLFxuICAgICAgICBfQWZmaW5lVHJhbnNmb3JtLnRyYW5zbGF0ZSgtb3JpZ2luLngsIC1vcmlnaW4ueSlcbiAgICAgICk7XG4gICAgfVxuICAgIHJldHVybiBzY2FsZTtcbiAgfVxuICBzdGF0aWMgdHJhbnNsYXRlKHR4LCB0eSkge1xuICAgIHJldHVybiBuZXcgX0FmZmluZVRyYW5zZm9ybShbMSwgMCwgdHgsIDAsIDEsIHR5XSk7XG4gIH1cbiAgc3RhdGljIG11bHRpcGx5KC4uLltmaXJzdCwgLi4ucmVzdF0pIHtcbiAgICBpZiAoIWZpcnN0KSByZXR1cm4gX0FmZmluZVRyYW5zZm9ybS5pZGVudGl0eTtcbiAgICByZXR1cm4gcmVzdC5yZWR1Y2UoKHJlc3VsdCwgaXRlbSkgPT4gcmVzdWx0LnByZXBlbmQoaXRlbSksIGZpcnN0KTtcbiAgfVxuICBnZXQgYSgpIHtcbiAgICByZXR1cm4gdGhpcy5tMDA7XG4gIH1cbiAgZ2V0IGIoKSB7XG4gICAgcmV0dXJuIHRoaXMubTEwO1xuICB9XG4gIGdldCBjKCkge1xuICAgIHJldHVybiB0aGlzLm0wMTtcbiAgfVxuICBnZXQgZCgpIHtcbiAgICByZXR1cm4gdGhpcy5tMTE7XG4gIH1cbiAgZ2V0IHR4KCkge1xuICAgIHJldHVybiB0aGlzLm0wMjtcbiAgfVxuICBnZXQgdHkoKSB7XG4gICAgcmV0dXJuIHRoaXMubTEyO1xuICB9XG4gIGdldCBzY2FsZUNvbXBvbmVudHMoKSB7XG4gICAgcmV0dXJuIHsgeDogdGhpcy5hLCB5OiB0aGlzLmQgfTtcbiAgfVxuICBnZXQgdHJhbnNsYXRpb25Db21wb25lbnRzKCkge1xuICAgIHJldHVybiB7IHg6IHRoaXMudHgsIHk6IHRoaXMudHkgfTtcbiAgfVxuICBnZXQgc2tld0NvbXBvbmVudHMoKSB7XG4gICAgcmV0dXJuIHsgeDogdGhpcy5jLCB5OiB0aGlzLmIgfTtcbiAgfVxuICB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gYG1hdHJpeCgke3RoaXMuYX0sICR7dGhpcy5ifSwgJHt0aGlzLmN9LCAke3RoaXMuZH0sICR7dGhpcy50eH0sICR7dGhpcy50eX0pYDtcbiAgfVxufTtcblxuLy8gc3JjL2FsaWduLnRzXG5mdW5jdGlvbiBoQWxpZ24oYSwgcmVmLCBoKSB7XG4gIGxldCB4ID0gcmVmLm1pblg7XG4gIGlmIChoID09PSBcImxlZnQtaW5zaWRlXCIpIHggPSByZWYubWluWDtcbiAgaWYgKGggPT09IFwibGVmdC1vdXRzaWRlXCIpIHggPSByZWYubWluWCAtIHJlZi53aWR0aDtcbiAgaWYgKGggPT09IFwicmlnaHQtaW5zaWRlXCIpIHggPSByZWYubWF4WCAtIHJlZi53aWR0aDtcbiAgaWYgKGggPT09IFwicmlnaHQtb3V0c2lkZVwiKSB4ID0gcmVmLm1heFg7XG4gIGlmIChoID09PSBcImNlbnRlclwiKSB4ID0gcmVmLm1pZFggLSByZWYud2lkdGggLyAyO1xuICByZXR1cm4geyAuLi5hLCB4IH07XG59XG5mdW5jdGlvbiB2QWxpZ24oYSwgcmVmLCB2KSB7XG4gIGxldCB5ID0gcmVmLm1pblk7XG4gIGlmICh2ID09PSBcInRvcC1pbnNpZGVcIikgeSA9IHJlZi5taW5ZO1xuICBpZiAodiA9PT0gXCJ0b3Atb3V0c2lkZVwiKSB5ID0gcmVmLm1pblkgLSBhLmhlaWdodDtcbiAgaWYgKHYgPT09IFwiYm90dG9tLWluc2lkZVwiKSB5ID0gcmVmLm1heFkgLSBhLmhlaWdodDtcbiAgaWYgKHYgPT09IFwiYm90dG9tLW91dHNpZGVcIikgeSA9IHJlZi5tYXhZO1xuICBpZiAodiA9PT0gXCJjZW50ZXJcIikgeSA9IHJlZi5taWRZIC0gYS5oZWlnaHQgLyAyO1xuICByZXR1cm4geyAuLi5hLCB5IH07XG59XG5mdW5jdGlvbiBhbGlnblJlY3QoYSwgcmVmLCBvcHRpb25zKSB7XG4gIGNvbnN0IHsgaCwgdiB9ID0gb3B0aW9ucztcbiAgcmV0dXJuIHZBbGlnbihoQWxpZ24oYSwgcmVmLCBoKSwgcmVmLCB2KTtcbn1cblxuLy8gc3JjL2FuZ2xlLnRzXG5mdW5jdGlvbiBnZXRQb2ludEFuZ2xlKHJlY3QsIHBvaW50LCByZWZlcmVuY2UgPSByZWN0LmNlbnRlcikge1xuICBjb25zdCB4ID0gcG9pbnQueCAtIHJlZmVyZW5jZS54O1xuICBjb25zdCB5ID0gcG9pbnQueSAtIHJlZmVyZW5jZS55O1xuICBjb25zdCBkZWcgPSBNYXRoLmF0YW4yKHgsIHkpICogKDE4MCAvIE1hdGguUEkpICsgMTgwO1xuICByZXR1cm4gMzYwIC0gZGVnO1xufVxuXG4vLyBzcmMvY2xhbXAudHNcbnZhciBjbGFtcCA9ICh2YWx1ZSwgbWluMywgbWF4MikgPT4gTWF0aC5taW4oTWF0aC5tYXgodmFsdWUsIG1pbjMpLCBtYXgyKTtcbnZhciBjbGFtcFBvaW50ID0gKHBvc2l0aW9uLCBzaXplLCBib3VuZGFyeVJlY3QpID0+IHtcbiAgY29uc3QgeCA9IGNsYW1wKHBvc2l0aW9uLngsIGJvdW5kYXJ5UmVjdC54LCBib3VuZGFyeVJlY3QueCArIGJvdW5kYXJ5UmVjdC53aWR0aCAtIHNpemUud2lkdGgpO1xuICBjb25zdCB5ID0gY2xhbXAocG9zaXRpb24ueSwgYm91bmRhcnlSZWN0LnksIGJvdW5kYXJ5UmVjdC55ICsgYm91bmRhcnlSZWN0LmhlaWdodCAtIHNpemUuaGVpZ2h0KTtcbiAgcmV0dXJuIHsgeCwgeSB9O1xufTtcbnZhciBkZWZhdWx0TWluU2l6ZSA9IHtcbiAgd2lkdGg6IDAsXG4gIGhlaWdodDogMFxufTtcbnZhciBkZWZhdWx0TWF4U2l6ZSA9IHtcbiAgd2lkdGg6IEluZmluaXR5LFxuICBoZWlnaHQ6IEluZmluaXR5XG59O1xudmFyIGNsYW1wU2l6ZSA9IChzaXplLCBtaW5TaXplID0gZGVmYXVsdE1pblNpemUsIG1heFNpemUgPSBkZWZhdWx0TWF4U2l6ZSkgPT4ge1xuICByZXR1cm4ge1xuICAgIHdpZHRoOiBNYXRoLm1pbihNYXRoLm1heChzaXplLndpZHRoLCBtaW5TaXplLndpZHRoKSwgbWF4U2l6ZS53aWR0aCksXG4gICAgaGVpZ2h0OiBNYXRoLm1pbihNYXRoLm1heChzaXplLmhlaWdodCwgbWluU2l6ZS5oZWlnaHQpLCBtYXhTaXplLmhlaWdodClcbiAgfTtcbn07XG5cbi8vIHNyYy9yZWN0LnRzXG52YXIgY3JlYXRlUG9pbnQgPSAoeCwgeSkgPT4gKHsgeCwgeSB9KTtcbnZhciBzdWJ0cmFjdFBvaW50cyA9IChhLCBiKSA9PiBjcmVhdGVQb2ludChhLnggLSBiLngsIGEueSAtIGIueSk7XG52YXIgYWRkUG9pbnRzID0gKGEsIGIpID0+IGNyZWF0ZVBvaW50KGEueCArIGIueCwgYS55ICsgYi55KTtcbmZ1bmN0aW9uIGlzUG9pbnQodikge1xuICByZXR1cm4gUmVmbGVjdC5oYXModiwgXCJ4XCIpICYmIFJlZmxlY3QuaGFzKHYsIFwieVwiKTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZVJlY3Qocikge1xuICBjb25zdCB7IHgsIHksIHdpZHRoLCBoZWlnaHQgfSA9IHI7XG4gIGNvbnN0IG1pZFggPSB4ICsgd2lkdGggLyAyO1xuICBjb25zdCBtaWRZID0geSArIGhlaWdodCAvIDI7XG4gIHJldHVybiB7XG4gICAgeCxcbiAgICB5LFxuICAgIHdpZHRoLFxuICAgIGhlaWdodCxcbiAgICBtaW5YOiB4LFxuICAgIG1pblk6IHksXG4gICAgbWF4WDogeCArIHdpZHRoLFxuICAgIG1heFk6IHkgKyBoZWlnaHQsXG4gICAgbWlkWCxcbiAgICBtaWRZLFxuICAgIGNlbnRlcjogY3JlYXRlUG9pbnQobWlkWCwgbWlkWSlcbiAgfTtcbn1cbmZ1bmN0aW9uIGlzUmVjdCh2KSB7XG4gIHJldHVybiBSZWZsZWN0Lmhhcyh2LCBcInhcIikgJiYgUmVmbGVjdC5oYXModiwgXCJ5XCIpICYmIFJlZmxlY3QuaGFzKHYsIFwid2lkdGhcIikgJiYgUmVmbGVjdC5oYXModiwgXCJoZWlnaHRcIik7XG59XG5mdW5jdGlvbiBnZXRSZWN0Q2VudGVycyh2KSB7XG4gIGNvbnN0IHRvcCA9IGNyZWF0ZVBvaW50KHYubWlkWCwgdi5taW5ZKTtcbiAgY29uc3QgcmlnaHQgPSBjcmVhdGVQb2ludCh2Lm1heFgsIHYubWlkWSk7XG4gIGNvbnN0IGJvdHRvbSA9IGNyZWF0ZVBvaW50KHYubWlkWCwgdi5tYXhZKTtcbiAgY29uc3QgbGVmdCA9IGNyZWF0ZVBvaW50KHYubWluWCwgdi5taWRZKTtcbiAgcmV0dXJuIHsgdG9wLCByaWdodCwgYm90dG9tLCBsZWZ0IH07XG59XG5mdW5jdGlvbiBnZXRSZWN0Q29ybmVycyh2KSB7XG4gIGNvbnN0IHRvcCA9IGNyZWF0ZVBvaW50KHYubWluWCwgdi5taW5ZKTtcbiAgY29uc3QgcmlnaHQgPSBjcmVhdGVQb2ludCh2Lm1heFgsIHYubWluWSk7XG4gIGNvbnN0IGJvdHRvbSA9IGNyZWF0ZVBvaW50KHYubWF4WCwgdi5tYXhZKTtcbiAgY29uc3QgbGVmdCA9IGNyZWF0ZVBvaW50KHYubWluWCwgdi5tYXhZKTtcbiAgcmV0dXJuIHsgdG9wLCByaWdodCwgYm90dG9tLCBsZWZ0IH07XG59XG5mdW5jdGlvbiBnZXRSZWN0RWRnZXModikge1xuICBjb25zdCBjID0gZ2V0UmVjdENvcm5lcnModik7XG4gIGNvbnN0IHRvcCA9IFtjLnRvcCwgYy5yaWdodF07XG4gIGNvbnN0IHJpZ2h0ID0gW2MucmlnaHQsIGMuYm90dG9tXTtcbiAgY29uc3QgYm90dG9tID0gW2MubGVmdCwgYy5ib3R0b21dO1xuICBjb25zdCBsZWZ0ID0gW2MudG9wLCBjLmxlZnRdO1xuICByZXR1cm4geyB0b3AsIHJpZ2h0LCBib3R0b20sIGxlZnQgfTtcbn1cblxuLy8gc3JjL2ludGVyc2VjdGlvbi50c1xuZnVuY3Rpb24gaW50ZXJzZWN0cyhhLCBiKSB7XG4gIHJldHVybiBhLnggPCBiLm1heFggJiYgYS55IDwgYi5tYXhZICYmIGEubWF4WCA+IGIueCAmJiBhLm1heFkgPiBiLnk7XG59XG5mdW5jdGlvbiBpbnRlcnNlY3Rpb24oYSwgYikge1xuICBjb25zdCB4ID0gTWF0aC5tYXgoYS54LCBiLngpO1xuICBjb25zdCB5ID0gTWF0aC5tYXgoYS55LCBiLnkpO1xuICBjb25zdCB4MiA9IE1hdGgubWluKGEueCArIGEud2lkdGgsIGIueCArIGIud2lkdGgpO1xuICBjb25zdCB5MiA9IE1hdGgubWluKGEueSArIGEuaGVpZ2h0LCBiLnkgKyBiLmhlaWdodCk7XG4gIHJldHVybiBjcmVhdGVSZWN0KHsgeCwgeSwgd2lkdGg6IHgyIC0geCwgaGVpZ2h0OiB5MiAtIHkgfSk7XG59XG5mdW5jdGlvbiBjb2xsaXNpb25zKGEsIGIpIHtcbiAgcmV0dXJuIHtcbiAgICB0b3A6IGEubWluWSA8PSBiLm1pblksXG4gICAgcmlnaHQ6IGEubWF4WCA+PSBiLm1heFgsXG4gICAgYm90dG9tOiBhLm1heFkgPj0gYi5tYXhZLFxuICAgIGxlZnQ6IGEubWluWCA8PSBiLm1pblhcbiAgfTtcbn1cblxuLy8gc3JjL2Rpc3RhbmNlLnRzXG5mdW5jdGlvbiBkaXN0YW5jZShhLCBiID0geyB4OiAwLCB5OiAwIH0pIHtcbiAgcmV0dXJuIE1hdGguc3FydChNYXRoLnBvdyhhLnggLSBiLngsIDIpICsgTWF0aC5wb3coYS55IC0gYi55LCAyKSk7XG59XG5mdW5jdGlvbiBkaXN0YW5jZUZyb21Qb2ludChyLCBwKSB7XG4gIGxldCB4ID0gMDtcbiAgbGV0IHkgPSAwO1xuICBpZiAocC54IDwgci54KSB4ID0gci54IC0gcC54O1xuICBlbHNlIGlmIChwLnggPiByLm1heFgpIHggPSBwLnggLSByLm1heFg7XG4gIGlmIChwLnkgPCByLnkpIHkgPSByLnkgLSBwLnk7XG4gIGVsc2UgaWYgKHAueSA+IHIubWF4WSkgeSA9IHAueSAtIHIubWF4WTtcbiAgcmV0dXJuIHsgeCwgeSwgdmFsdWU6IGRpc3RhbmNlKHsgeCwgeSB9KSB9O1xufVxuZnVuY3Rpb24gZGlzdGFuY2VGcm9tUmVjdChhLCBiKSB7XG4gIGlmIChpbnRlcnNlY3RzKGEsIGIpKSByZXR1cm4geyB4OiAwLCB5OiAwLCB2YWx1ZTogMCB9O1xuICBjb25zdCBsZWZ0ID0gYS54IDwgYi54ID8gYSA6IGI7XG4gIGNvbnN0IHJpZ2h0ID0gYi54IDwgYS54ID8gYSA6IGI7XG4gIGNvbnN0IHVwcGVyID0gYS55IDwgYi55ID8gYSA6IGI7XG4gIGNvbnN0IGxvd2VyID0gYi55IDwgYS55ID8gYSA6IGI7XG4gIGxldCB4ID0gbGVmdC54ID09PSByaWdodC54ID8gMCA6IHJpZ2h0LnggLSBsZWZ0Lm1heFg7XG4gIHggPSBNYXRoLm1heCgwLCB4KTtcbiAgbGV0IHkgPSB1cHBlci55ID09PSBsb3dlci55ID8gMCA6IGxvd2VyLnkgLSB1cHBlci5tYXhZO1xuICB5ID0gTWF0aC5tYXgoMCwgeSk7XG4gIHJldHVybiB7IHgsIHksIHZhbHVlOiBkaXN0YW5jZSh7IHgsIHkgfSkgfTtcbn1cbmZ1bmN0aW9uIGRpc3RhbmNlQnR3RWRnZXMoYSwgYikge1xuICByZXR1cm4ge1xuICAgIGxlZnQ6IGIueCAtIGEueCxcbiAgICB0b3A6IGIueSAtIGEueSxcbiAgICByaWdodDogYS5tYXhYIC0gYi5tYXhYLFxuICAgIGJvdHRvbTogYS5tYXhZIC0gYi5tYXhZXG4gIH07XG59XG5cbi8vIHNyYy9jbG9zZXN0LnRzXG5mdW5jdGlvbiBjbG9zZXN0KC4uLnB0cykge1xuICByZXR1cm4gKGEpID0+IHtcbiAgICBjb25zdCBkcyA9IHB0cy5tYXAoKGIpID0+IGRpc3RhbmNlKGIsIGEpKTtcbiAgICBjb25zdCBjID0gTWF0aC5taW4uYXBwbHkoTWF0aCwgZHMpO1xuICAgIHJldHVybiBwdHNbZHMuaW5kZXhPZihjKV07XG4gIH07XG59XG5mdW5jdGlvbiBjbG9zZXN0U2lkZVRvUmVjdChyZWYsIHIpIHtcbiAgaWYgKHIubWF4WCA8PSByZWYubWluWCkgcmV0dXJuIFwibGVmdFwiO1xuICBpZiAoci5taW5YID49IHJlZi5tYXhYKSByZXR1cm4gXCJyaWdodFwiO1xuICBpZiAoci5tYXhZIDw9IHJlZi5taW5ZKSByZXR1cm4gXCJ0b3BcIjtcbiAgaWYgKHIubWluWSA+PSByZWYubWF4WSkgcmV0dXJuIFwiYm90dG9tXCI7XG4gIHJldHVybiBcImxlZnRcIjtcbn1cbmZ1bmN0aW9uIGNsb3Nlc3RTaWRlVG9Qb2ludChyZWYsIHApIHtcbiAgY29uc3QgeyB4LCB5IH0gPSBwO1xuICBjb25zdCBkbCA9IHggLSByZWYubWluWDtcbiAgY29uc3QgZHIgPSByZWYubWF4WCAtIHg7XG4gIGNvbnN0IGR0ID0geSAtIHJlZi5taW5ZO1xuICBjb25zdCBkYiA9IHJlZi5tYXhZIC0geTtcbiAgbGV0IGNsb3Nlc3QyID0gZGw7XG4gIGxldCBzaWRlID0gXCJsZWZ0XCI7XG4gIGlmIChkciA8IGNsb3Nlc3QyKSB7XG4gICAgY2xvc2VzdDIgPSBkcjtcbiAgICBzaWRlID0gXCJyaWdodFwiO1xuICB9XG4gIGlmIChkdCA8IGNsb3Nlc3QyKSB7XG4gICAgY2xvc2VzdDIgPSBkdDtcbiAgICBzaWRlID0gXCJ0b3BcIjtcbiAgfVxuICBpZiAoZGIgPCBjbG9zZXN0Mikge1xuICAgIHNpZGUgPSBcImJvdHRvbVwiO1xuICB9XG4gIHJldHVybiBzaWRlO1xufVxuXG4vLyBzcmMvY29uc3RyYWluLnRzXG52YXIgY29uc3RyYWluUmVjdCA9IChyZWN0LCBib3VuZGFyeSkgPT4ge1xuICBjb25zdCBsZWZ0ID0gTWF0aC5tYXgoYm91bmRhcnkueCwgTWF0aC5taW4ocmVjdC54LCBib3VuZGFyeS54ICsgYm91bmRhcnkud2lkdGggLSByZWN0LndpZHRoKSk7XG4gIGNvbnN0IHRvcCA9IE1hdGgubWF4KGJvdW5kYXJ5LnksIE1hdGgubWluKHJlY3QueSwgYm91bmRhcnkueSArIGJvdW5kYXJ5LmhlaWdodCAtIHJlY3QuaGVpZ2h0KSk7XG4gIHJldHVybiB7XG4gICAgeDogbGVmdCxcbiAgICB5OiB0b3AsXG4gICAgd2lkdGg6IE1hdGgubWluKHJlY3Qud2lkdGgsIGJvdW5kYXJ5LndpZHRoKSxcbiAgICBoZWlnaHQ6IE1hdGgubWluKHJlY3QuaGVpZ2h0LCBib3VuZGFyeS5oZWlnaHQpXG4gIH07XG59O1xuXG4vLyBzcmMvY29udGFpbnMudHNcbmZ1bmN0aW9uIGNvbnRhaW5zUG9pbnQociwgcCkge1xuICByZXR1cm4gci5taW5YIDw9IHAueCAmJiBwLnggPD0gci5tYXhYICYmIHIubWluWSA8PSBwLnkgJiYgcC55IDw9IHIubWF4WTtcbn1cbmZ1bmN0aW9uIGNvbnRhaW5zUmVjdChhLCBiKSB7XG4gIHJldHVybiBPYmplY3QudmFsdWVzKGdldFJlY3RDb3JuZXJzKGIpKS5ldmVyeSgoYykgPT4gY29udGFpbnNQb2ludChhLCBjKSk7XG59XG5mdW5jdGlvbiBjb250YWlucyhyLCB2KSB7XG4gIHJldHVybiBpc1JlY3QodikgPyBjb250YWluc1JlY3QociwgdikgOiBjb250YWluc1BvaW50KHIsIHYpO1xufVxuXG4vLyBzcmMvZXF1YWxpdHkudHNcbnZhciBpc1NpemVFcXVhbCA9IChhLCBiKSA9PiB7XG4gIHJldHVybiBhLndpZHRoID09PSBiLndpZHRoICYmIGEuaGVpZ2h0ID09PSBiLmhlaWdodDtcbn07XG52YXIgaXNQb2ludEVxdWFsID0gKGEsIGIpID0+IHtcbiAgcmV0dXJuIGEueCA9PT0gYi54ICYmIGEueSA9PT0gYi55O1xufTtcbnZhciBpc1JlY3RFcXVhbCA9IChhLCBiKSA9PiB7XG4gIHJldHVybiBpc1BvaW50RXF1YWwoYSwgYikgJiYgaXNTaXplRXF1YWwoYSwgYik7XG59O1xuXG4vLyBzcmMvZnJvbS1lbGVtZW50LnRzXG52YXIgc3R5bGVDYWNoZSA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgV2Vha01hcCgpO1xuZnVuY3Rpb24gZ2V0Q2FjaGVDb21wdXRlZFN0eWxlKGVsKSB7XG4gIGlmICghc3R5bGVDYWNoZS5oYXMoZWwpKSB7XG4gICAgY29uc3Qgd2luID0gZWwub3duZXJEb2N1bWVudC5kZWZhdWx0VmlldyB8fCB3aW5kb3c7XG4gICAgc3R5bGVDYWNoZS5zZXQoZWwsIHdpbi5nZXRDb21wdXRlZFN0eWxlKGVsKSk7XG4gIH1cbiAgcmV0dXJuIHN0eWxlQ2FjaGUuZ2V0KGVsKTtcbn1cbmZ1bmN0aW9uIGdldEVsZW1lbnRSZWN0KGVsLCBvcHRzID0ge30pIHtcbiAgcmV0dXJuIGNyZWF0ZVJlY3QoZ2V0Q2xpZW50UmVjdChlbCwgb3B0cykpO1xufVxuZnVuY3Rpb24gZ2V0Q2xpZW50UmVjdChlbCwgb3B0cyA9IHt9KSB7XG4gIGNvbnN0IHsgZXhjbHVkZVNjcm9sbGJhciA9IGZhbHNlLCBleGNsdWRlQm9yZGVycyA9IGZhbHNlIH0gPSBvcHRzO1xuICBjb25zdCB7IHgsIHksIHdpZHRoLCBoZWlnaHQgfSA9IGVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICBjb25zdCByID0geyB4LCB5LCB3aWR0aCwgaGVpZ2h0IH07XG4gIGNvbnN0IHN0eWxlID0gZ2V0Q2FjaGVDb21wdXRlZFN0eWxlKGVsKTtcbiAgY29uc3QgeyBib3JkZXJMZWZ0V2lkdGgsIGJvcmRlclRvcFdpZHRoLCBib3JkZXJSaWdodFdpZHRoLCBib3JkZXJCb3R0b21XaWR0aCB9ID0gc3R5bGU7XG4gIGNvbnN0IGJvcmRlclhXaWR0aCA9IHN1bShib3JkZXJMZWZ0V2lkdGgsIGJvcmRlclJpZ2h0V2lkdGgpO1xuICBjb25zdCBib3JkZXJZV2lkdGggPSBzdW0oYm9yZGVyVG9wV2lkdGgsIGJvcmRlckJvdHRvbVdpZHRoKTtcbiAgaWYgKGV4Y2x1ZGVCb3JkZXJzKSB7XG4gICAgci53aWR0aCAtPSBib3JkZXJYV2lkdGg7XG4gICAgci5oZWlnaHQgLT0gYm9yZGVyWVdpZHRoO1xuICAgIHIueCArPSBweChib3JkZXJMZWZ0V2lkdGgpO1xuICAgIHIueSArPSBweChib3JkZXJUb3BXaWR0aCk7XG4gIH1cbiAgaWYgKGV4Y2x1ZGVTY3JvbGxiYXIpIHtcbiAgICBjb25zdCBzY3JvbGxiYXJXaWR0aCA9IGVsLm9mZnNldFdpZHRoIC0gZWwuY2xpZW50V2lkdGggLSBib3JkZXJYV2lkdGg7XG4gICAgY29uc3Qgc2Nyb2xsYmFySGVpZ2h0ID0gZWwub2Zmc2V0SGVpZ2h0IC0gZWwuY2xpZW50SGVpZ2h0IC0gYm9yZGVyWVdpZHRoO1xuICAgIHIud2lkdGggLT0gc2Nyb2xsYmFyV2lkdGg7XG4gICAgci5oZWlnaHQgLT0gc2Nyb2xsYmFySGVpZ2h0O1xuICB9XG4gIHJldHVybiByO1xufVxudmFyIHB4ID0gKHYpID0+IHBhcnNlRmxvYXQodi5yZXBsYWNlKFwicHhcIiwgXCJcIikpO1xudmFyIHN1bSA9ICguLi52YWxzKSA9PiB2YWxzLnJlZHVjZSgoc3VtMiwgdikgPT4gc3VtMiArICh2ID8gcHgodikgOiAwKSwgMCk7XG5cbi8vIHNyYy9mcm9tLXBvaW50cy50c1xuZnVuY3Rpb24gZ2V0UmVjdEZyb21Qb2ludHMoLi4ucHRzKSB7XG4gIGNvbnN0IHhzID0gcHRzLm1hcCgocCkgPT4gcC54KTtcbiAgY29uc3QgeXMgPSBwdHMubWFwKChwKSA9PiBwLnkpO1xuICBjb25zdCB4ID0gTWF0aC5taW4oLi4ueHMpO1xuICBjb25zdCB5ID0gTWF0aC5taW4oLi4ueXMpO1xuICBjb25zdCB3aWR0aCA9IE1hdGgubWF4KC4uLnhzKSAtIHg7XG4gIGNvbnN0IGhlaWdodCA9IE1hdGgubWF4KC4uLnlzKSAtIHk7XG4gIHJldHVybiBjcmVhdGVSZWN0KHsgeCwgeSwgd2lkdGgsIGhlaWdodCB9KTtcbn1cblxuLy8gc3JjL3VuaW9uLnRzXG52YXIgeyBtaW4sIG1heCB9ID0gTWF0aDtcbmZ1bmN0aW9uIHVuaW9uKC4uLnJzKSB7XG4gIGNvbnN0IHBNaW4gPSB7XG4gICAgeDogbWluKC4uLnJzLm1hcCgocikgPT4gci5taW5YKSksXG4gICAgeTogbWluKC4uLnJzLm1hcCgocikgPT4gci5taW5ZKSlcbiAgfTtcbiAgY29uc3QgcE1heCA9IHtcbiAgICB4OiBtYXgoLi4ucnMubWFwKChyKSA9PiByLm1heFgpKSxcbiAgICB5OiBtYXgoLi4ucnMubWFwKChyKSA9PiByLm1heFkpKVxuICB9O1xuICByZXR1cm4gZ2V0UmVjdEZyb21Qb2ludHMocE1pbiwgcE1heCk7XG59XG5cbi8vIHNyYy9mcm9tLXJhbmdlLnRzXG5mdW5jdGlvbiBmcm9tUmFuZ2UocmFuZ2UpIHtcbiAgbGV0IHJzID0gW107XG4gIGNvbnN0IHJlY3RzID0gQXJyYXkuZnJvbShyYW5nZS5nZXRDbGllbnRSZWN0cygpKTtcbiAgaWYgKHJlY3RzLmxlbmd0aCkge1xuICAgIHJzID0gcnMuY29uY2F0KHJlY3RzLm1hcChjcmVhdGVSZWN0KSk7XG4gICAgcmV0dXJuIHVuaW9uLmFwcGx5KHZvaWQgMCwgcnMpO1xuICB9XG4gIGxldCBzdGFydCA9IHJhbmdlLnN0YXJ0Q29udGFpbmVyO1xuICBpZiAoc3RhcnQubm9kZVR5cGUgPT09IE5vZGUuVEVYVF9OT0RFKSB7XG4gICAgc3RhcnQgPSBzdGFydC5wYXJlbnROb2RlO1xuICB9XG4gIGlmIChzdGFydCBpbnN0YW5jZW9mIEhUTUxFbGVtZW50KSB7XG4gICAgY29uc3QgciA9IGdldEVsZW1lbnRSZWN0KHN0YXJ0KTtcbiAgICBycy5wdXNoKHsgLi4uciwgeDogci5tYXhYLCB3aWR0aDogMCB9KTtcbiAgfVxuICByZXR1cm4gdW5pb24uYXBwbHkodm9pZCAwLCBycyk7XG59XG5cbi8vIHNyYy9mcm9tLXJvdGF0aW9uLnRzXG5mdW5jdGlvbiB0b1JhZChkKSB7XG4gIHJldHVybiBkICUgMzYwICogTWF0aC5QSSAvIDE4MDtcbn1cbmZ1bmN0aW9uIHJvdGF0ZShhLCBkLCBjKSB7XG4gIGNvbnN0IHIgPSB0b1JhZChkKTtcbiAgY29uc3Qgc2luID0gTWF0aC5zaW4ocik7XG4gIGNvbnN0IGNvcyA9IE1hdGguY29zKHIpO1xuICBjb25zdCB4ID0gYS54IC0gYy54O1xuICBjb25zdCB5ID0gYS55IC0gYy55O1xuICByZXR1cm4ge1xuICAgIHg6IGMueCArIHggKiBjb3MgLSB5ICogc2luLFxuICAgIHk6IGMueSArIHggKiBzaW4gKyB5ICogY29zXG4gIH07XG59XG5mdW5jdGlvbiBnZXRSb3RhdGlvblJlY3QociwgZGVnKSB7XG4gIGNvbnN0IHJyID0gT2JqZWN0LnZhbHVlcyhnZXRSZWN0Q29ybmVycyhyKSkubWFwKChwKSA9PiByb3RhdGUocCwgZGVnLCByLmNlbnRlcikpO1xuICBjb25zdCB4cyA9IHJyLm1hcCgocCkgPT4gcC54KTtcbiAgY29uc3QgeXMgPSByci5tYXAoKHApID0+IHAueSk7XG4gIGNvbnN0IG1pblggPSBNYXRoLm1pbiguLi54cyk7XG4gIGNvbnN0IG1pblkgPSBNYXRoLm1pbiguLi55cyk7XG4gIGNvbnN0IG1heFggPSBNYXRoLm1heCguLi54cyk7XG4gIGNvbnN0IG1heFkgPSBNYXRoLm1heCguLi55cyk7XG4gIHJldHVybiBjcmVhdGVSZWN0KHtcbiAgICB4OiBtaW5YLFxuICAgIHk6IG1pblksXG4gICAgd2lkdGg6IG1heFggLSBtaW5YLFxuICAgIGhlaWdodDogbWF4WSAtIG1pbllcbiAgfSk7XG59XG5cbi8vIHNyYy9mcm9tLXdpbmRvdy50c1xuZnVuY3Rpb24gZ2V0V2luZG93UmVjdCh3aW4sIG9wdHMgPSB7fSkge1xuICByZXR1cm4gY3JlYXRlUmVjdChnZXRWaWV3cG9ydFJlY3Qod2luLCBvcHRzKSk7XG59XG5mdW5jdGlvbiBnZXRWaWV3cG9ydFJlY3Qod2luLCBvcHRzKSB7XG4gIGNvbnN0IHsgZXhjbHVkZVNjcm9sbGJhciA9IGZhbHNlIH0gPSBvcHRzO1xuICBjb25zdCB7IGlubmVyV2lkdGgsIGlubmVySGVpZ2h0LCBkb2N1bWVudDogZG9jLCB2aXN1YWxWaWV3cG9ydCB9ID0gd2luO1xuICBjb25zdCB3aWR0aCA9IHZpc3VhbFZpZXdwb3J0Py53aWR0aCB8fCBpbm5lcldpZHRoO1xuICBjb25zdCBoZWlnaHQgPSB2aXN1YWxWaWV3cG9ydD8uaGVpZ2h0IHx8IGlubmVySGVpZ2h0O1xuICBjb25zdCByZWN0ID0geyB4OiAwLCB5OiAwLCB3aWR0aCwgaGVpZ2h0IH07XG4gIGlmIChleGNsdWRlU2Nyb2xsYmFyKSB7XG4gICAgY29uc3Qgc2Nyb2xsYmFyV2lkdGggPSBpbm5lcldpZHRoIC0gZG9jLmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aDtcbiAgICBjb25zdCBzY3JvbGxiYXJIZWlnaHQgPSBpbm5lckhlaWdodCAtIGRvYy5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0O1xuICAgIHJlY3Qud2lkdGggLT0gc2Nyb2xsYmFyV2lkdGg7XG4gICAgcmVjdC5oZWlnaHQgLT0gc2Nyb2xsYmFySGVpZ2h0O1xuICB9XG4gIHJldHVybiByZWN0O1xufVxuXG4vLyBzcmMvb3BlcmF0aW9ucy50c1xudmFyIGlzU3ltbWV0cmljID0gKHYpID0+IFwiZHhcIiBpbiB2IHx8IFwiZHlcIiBpbiB2O1xuZnVuY3Rpb24gaW5zZXQociwgaSkge1xuICBjb25zdCB2ID0gaXNTeW1tZXRyaWMoaSkgPyB7IGxlZnQ6IGkuZHgsIHJpZ2h0OiBpLmR4LCB0b3A6IGkuZHksIGJvdHRvbTogaS5keSB9IDogaTtcbiAgY29uc3QgeyB0b3AgPSAwLCByaWdodCA9IDAsIGJvdHRvbSA9IDAsIGxlZnQgPSAwIH0gPSB2O1xuICByZXR1cm4gY3JlYXRlUmVjdCh7XG4gICAgeDogci54ICsgbGVmdCxcbiAgICB5OiByLnkgKyB0b3AsXG4gICAgd2lkdGg6IHIud2lkdGggLSBsZWZ0IC0gcmlnaHQsXG4gICAgaGVpZ2h0OiByLmhlaWdodCAtIHRvcCAtIGJvdHRvbVxuICB9KTtcbn1cbmZ1bmN0aW9uIGV4cGFuZChyLCB2KSB7XG4gIGNvbnN0IHZhbHVlID0gdHlwZW9mIHYgPT09IFwibnVtYmVyXCIgPyB7IGR4OiAtdiwgZHk6IC12IH0gOiB2O1xuICByZXR1cm4gaW5zZXQociwgdmFsdWUpO1xufVxuZnVuY3Rpb24gc2hyaW5rKHIsIHYpIHtcbiAgY29uc3QgdmFsdWUgPSB0eXBlb2YgdiA9PT0gXCJudW1iZXJcIiA/IHsgZHg6IC12LCBkeTogLXYgfSA6IHY7XG4gIHJldHVybiBpbnNldChyLCB2YWx1ZSk7XG59XG5mdW5jdGlvbiBzaGlmdChyLCBvKSB7XG4gIGNvbnN0IHsgeCA9IDAsIHkgPSAwIH0gPSBvO1xuICByZXR1cm4gY3JlYXRlUmVjdCh7XG4gICAgeDogci54ICsgeCxcbiAgICB5OiByLnkgKyB5LFxuICAgIHdpZHRoOiByLndpZHRoLFxuICAgIGhlaWdodDogci5oZWlnaHRcbiAgfSk7XG59XG5cbi8vIHNyYy9wb2x5Z29uLnRzXG5mdW5jdGlvbiBnZXRFbGVtZW50UG9seWdvbihyZWN0VmFsdWUsIHBsYWNlbWVudCkge1xuICBjb25zdCByZWN0ID0gY3JlYXRlUmVjdChyZWN0VmFsdWUpO1xuICBjb25zdCB7IHRvcCwgcmlnaHQsIGxlZnQsIGJvdHRvbSB9ID0gZ2V0UmVjdENvcm5lcnMocmVjdCk7XG4gIGNvbnN0IFtiYXNlXSA9IHBsYWNlbWVudC5zcGxpdChcIi1cIik7XG4gIHJldHVybiB7XG4gICAgdG9wOiBbbGVmdCwgdG9wLCByaWdodCwgYm90dG9tXSxcbiAgICByaWdodDogW3RvcCwgcmlnaHQsIGJvdHRvbSwgbGVmdF0sXG4gICAgYm90dG9tOiBbdG9wLCBsZWZ0LCBib3R0b20sIHJpZ2h0XSxcbiAgICBsZWZ0OiBbcmlnaHQsIHRvcCwgbGVmdCwgYm90dG9tXVxuICB9W2Jhc2VdO1xufVxuZnVuY3Rpb24gaXNQb2ludEluUG9seWdvbihwb2x5Z29uLCBwb2ludCkge1xuICBjb25zdCB7IHgsIHkgfSA9IHBvaW50O1xuICBsZXQgYyA9IGZhbHNlO1xuICBmb3IgKGxldCBpID0gMCwgaiA9IHBvbHlnb24ubGVuZ3RoIC0gMTsgaSA8IHBvbHlnb24ubGVuZ3RoOyBqID0gaSsrKSB7XG4gICAgY29uc3QgeGkgPSBwb2x5Z29uW2ldLng7XG4gICAgY29uc3QgeWkgPSBwb2x5Z29uW2ldLnk7XG4gICAgY29uc3QgeGogPSBwb2x5Z29uW2pdLng7XG4gICAgY29uc3QgeWogPSBwb2x5Z29uW2pdLnk7XG4gICAgaWYgKHlpID4geSAhPT0geWogPiB5ICYmIHggPCAoeGogLSB4aSkgKiAoeSAtIHlpKSAvICh5aiAtIHlpKSArIHhpKSB7XG4gICAgICBjID0gIWM7XG4gICAgfVxuICB9XG4gIHJldHVybiBjO1xufVxuZnVuY3Rpb24gY3JlYXRlUG9seWdvbkVsZW1lbnQoKSB7XG4gIGNvbnN0IGlkID0gXCJkZWJ1Zy1wb2x5Z29uXCI7XG4gIGNvbnN0IGV4aXN0aW5nUG9seWdvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKTtcbiAgaWYgKGV4aXN0aW5nUG9seWdvbikge1xuICAgIHJldHVybiBleGlzdGluZ1BvbHlnb247XG4gIH1cbiAgY29uc3Qgc3ZnID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiwgXCJzdmdcIik7XG4gIE9iamVjdC5hc3NpZ24oc3ZnLnN0eWxlLCB7XG4gICAgdG9wOiBcIjBcIixcbiAgICBsZWZ0OiBcIjBcIixcbiAgICB3aWR0aDogXCIxMDAlXCIsXG4gICAgaGVpZ2h0OiBcIjEwMCVcIixcbiAgICBvcGFjaXR5OiBcIjAuMTVcIixcbiAgICBwb3NpdGlvbjogXCJmaXhlZFwiLFxuICAgIHBvaW50ZXJFdmVudHM6IFwibm9uZVwiLFxuICAgIGZpbGw6IFwicmVkXCJcbiAgfSk7XG4gIGNvbnN0IHBvbHlnb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInBvbHlnb25cIik7XG4gIHBvbHlnb24uc2V0QXR0cmlidXRlKFwiaWRcIiwgaWQpO1xuICBwb2x5Z29uLnNldEF0dHJpYnV0ZShcInBvaW50c1wiLCBcIjAsMCAwLDBcIik7XG4gIHN2Zy5hcHBlbmRDaGlsZChwb2x5Z29uKTtcbiAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChzdmcpO1xuICByZXR1cm4gcG9seWdvbjtcbn1cbmZ1bmN0aW9uIGRlYnVnUG9seWdvbihwb2x5Z29uKSB7XG4gIGNvbnN0IGVsID0gY3JlYXRlUG9seWdvbkVsZW1lbnQoKTtcbiAgY29uc3QgcG9pbnRzID0gcG9seWdvbi5tYXAoKHBvaW50KSA9PiBgJHtwb2ludC54fSwke3BvaW50Lnl9YCkuam9pbihcIiBcIik7XG4gIGVsLnNldEF0dHJpYnV0ZShcInBvaW50c1wiLCBwb2ludHMpO1xuICByZXR1cm4gKCkgPT4ge1xuICAgIGVsLnJlbW92ZSgpO1xuICB9O1xufVxuXG4vLyBzcmMvY29tcGFzcy50c1xudmFyIGNvbXBhc3NEaXJlY3Rpb25NYXAgPSB7XG4gIG46IHsgeDogMC41LCB5OiAwIH0sXG4gIG5lOiB7IHg6IDEsIHk6IDAgfSxcbiAgZTogeyB4OiAxLCB5OiAwLjUgfSxcbiAgc2U6IHsgeDogMSwgeTogMSB9LFxuICBzOiB7IHg6IDAuNSwgeTogMSB9LFxuICBzdzogeyB4OiAwLCB5OiAxIH0sXG4gIHc6IHsgeDogMCwgeTogMC41IH0sXG4gIG53OiB7IHg6IDAsIHk6IDAgfVxufTtcbnZhciBvcHBvc2l0ZURpcmVjdGlvbk1hcCA9IHtcbiAgbjogXCJzXCIsXG4gIG5lOiBcInN3XCIsXG4gIGU6IFwid1wiLFxuICBzZTogXCJud1wiLFxuICBzOiBcIm5cIixcbiAgc3c6IFwibmVcIixcbiAgdzogXCJlXCIsXG4gIG53OiBcInNlXCJcbn07XG5cbi8vIHNyYy9yZXNpemUudHNcbnZhciB7IHNpZ24sIGFicywgbWluOiBtaW4yIH0gPSBNYXRoO1xuZnVuY3Rpb24gZ2V0UmVjdEV4dGVudFBvaW50KHJlY3QsIGRpcmVjdGlvbikge1xuICBjb25zdCB7IG1pblgsIG1pblksIG1heFgsIG1heFksIG1pZFgsIG1pZFkgfSA9IHJlY3Q7XG4gIGNvbnN0IHggPSBkaXJlY3Rpb24uaW5jbHVkZXMoXCJ3XCIpID8gbWluWCA6IGRpcmVjdGlvbi5pbmNsdWRlcyhcImVcIikgPyBtYXhYIDogbWlkWDtcbiAgY29uc3QgeSA9IGRpcmVjdGlvbi5pbmNsdWRlcyhcIm5cIikgPyBtaW5ZIDogZGlyZWN0aW9uLmluY2x1ZGVzKFwic1wiKSA/IG1heFkgOiBtaWRZO1xuICByZXR1cm4geyB4LCB5IH07XG59XG5mdW5jdGlvbiBnZXRPcHBvc2l0ZURpcmVjdGlvbihkaXJlY3Rpb24pIHtcbiAgcmV0dXJuIG9wcG9zaXRlRGlyZWN0aW9uTWFwW2RpcmVjdGlvbl07XG59XG5mdW5jdGlvbiByZXNpemVSZWN0KHJlY3QsIG9mZnNldCwgZGlyZWN0aW9uLCBvcHRzKSB7XG4gIGNvbnN0IHsgc2NhbGluZ09yaWdpbk1vZGUsIGxvY2tBc3BlY3RSYXRpbyB9ID0gb3B0cztcbiAgY29uc3QgZXh0ZW50ID0gZ2V0UmVjdEV4dGVudFBvaW50KHJlY3QsIGRpcmVjdGlvbik7XG4gIGNvbnN0IG9wcG9zaXRlRGlyZWN0aW9uID0gZ2V0T3Bwb3NpdGVEaXJlY3Rpb24oZGlyZWN0aW9uKTtcbiAgY29uc3Qgb3Bwb3NpdGVFeHRlbnQgPSBnZXRSZWN0RXh0ZW50UG9pbnQocmVjdCwgb3Bwb3NpdGVEaXJlY3Rpb24pO1xuICBpZiAoc2NhbGluZ09yaWdpbk1vZGUgPT09IFwiY2VudGVyXCIpIHtcbiAgICBvZmZzZXQgPSB7IHg6IG9mZnNldC54ICogMiwgeTogb2Zmc2V0LnkgKiAyIH07XG4gIH1cbiAgY29uc3QgbmV3RXh0ZW50ID0ge1xuICAgIHg6IGV4dGVudC54ICsgb2Zmc2V0LngsXG4gICAgeTogZXh0ZW50LnkgKyBvZmZzZXQueVxuICB9O1xuICBjb25zdCBtdWx0aXBsaWVyID0ge1xuICAgIHg6IGNvbXBhc3NEaXJlY3Rpb25NYXBbZGlyZWN0aW9uXS54ICogMiAtIDEsXG4gICAgeTogY29tcGFzc0RpcmVjdGlvbk1hcFtkaXJlY3Rpb25dLnkgKiAyIC0gMVxuICB9O1xuICBjb25zdCBuZXdTaXplID0ge1xuICAgIHdpZHRoOiBuZXdFeHRlbnQueCAtIG9wcG9zaXRlRXh0ZW50LngsXG4gICAgaGVpZ2h0OiBuZXdFeHRlbnQueSAtIG9wcG9zaXRlRXh0ZW50LnlcbiAgfTtcbiAgY29uc3Qgc2NhbGVYID0gbXVsdGlwbGllci54ICogbmV3U2l6ZS53aWR0aCAvIHJlY3Qud2lkdGg7XG4gIGNvbnN0IHNjYWxlWSA9IG11bHRpcGxpZXIueSAqIG5ld1NpemUuaGVpZ2h0IC8gcmVjdC5oZWlnaHQ7XG4gIGNvbnN0IGxhcmdlc3RNYWduaXR1ZGUgPSBhYnMoc2NhbGVYKSA+IGFicyhzY2FsZVkpID8gc2NhbGVYIDogc2NhbGVZO1xuICBjb25zdCBzY2FsZSA9IGxvY2tBc3BlY3RSYXRpbyA/IHsgeDogbGFyZ2VzdE1hZ25pdHVkZSwgeTogbGFyZ2VzdE1hZ25pdHVkZSB9IDoge1xuICAgIHg6IGV4dGVudC54ID09PSBvcHBvc2l0ZUV4dGVudC54ID8gMSA6IHNjYWxlWCxcbiAgICB5OiBleHRlbnQueSA9PT0gb3Bwb3NpdGVFeHRlbnQueSA/IDEgOiBzY2FsZVlcbiAgfTtcbiAgaWYgKGV4dGVudC55ID09PSBvcHBvc2l0ZUV4dGVudC55KSB7XG4gICAgc2NhbGUueSA9IGFicyhzY2FsZS55KTtcbiAgfSBlbHNlIGlmIChzaWduKHNjYWxlLnkpICE9PSBzaWduKHNjYWxlWSkpIHtcbiAgICBzY2FsZS55ICo9IC0xO1xuICB9XG4gIGlmIChleHRlbnQueCA9PT0gb3Bwb3NpdGVFeHRlbnQueCkge1xuICAgIHNjYWxlLnggPSBhYnMoc2NhbGUueCk7XG4gIH0gZWxzZSBpZiAoc2lnbihzY2FsZS54KSAhPT0gc2lnbihzY2FsZVgpKSB7XG4gICAgc2NhbGUueCAqPSAtMTtcbiAgfVxuICBzd2l0Y2ggKHNjYWxpbmdPcmlnaW5Nb2RlKSB7XG4gICAgY2FzZSBcImV4dGVudFwiOlxuICAgICAgcmV0dXJuIHRyYW5zZm9ybVJlY3QocmVjdCwgQWZmaW5lVHJhbnNmb3JtLnNjYWxlKHNjYWxlLngsIHNjYWxlLnksIG9wcG9zaXRlRXh0ZW50KSwgZmFsc2UpO1xuICAgIGNhc2UgXCJjZW50ZXJcIjpcbiAgICAgIHJldHVybiB0cmFuc2Zvcm1SZWN0KFxuICAgICAgICByZWN0LFxuICAgICAgICBBZmZpbmVUcmFuc2Zvcm0uc2NhbGUoc2NhbGUueCwgc2NhbGUueSwge1xuICAgICAgICAgIHg6IHJlY3QubWlkWCxcbiAgICAgICAgICB5OiByZWN0Lm1pZFlcbiAgICAgICAgfSksXG4gICAgICAgIGZhbHNlXG4gICAgICApO1xuICB9XG59XG5mdW5jdGlvbiBjcmVhdGVSZWN0RnJvbVBvaW50cyhpbml0aWFsUG9pbnQsIGZpbmFsUG9pbnQsIG5vcm1hbGl6ZWQgPSB0cnVlKSB7XG4gIGlmIChub3JtYWxpemVkKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHg6IG1pbjIoZmluYWxQb2ludC54LCBpbml0aWFsUG9pbnQueCksXG4gICAgICB5OiBtaW4yKGZpbmFsUG9pbnQueSwgaW5pdGlhbFBvaW50LnkpLFxuICAgICAgd2lkdGg6IGFicyhmaW5hbFBvaW50LnggLSBpbml0aWFsUG9pbnQueCksXG4gICAgICBoZWlnaHQ6IGFicyhmaW5hbFBvaW50LnkgLSBpbml0aWFsUG9pbnQueSlcbiAgICB9O1xuICB9XG4gIHJldHVybiB7XG4gICAgeDogaW5pdGlhbFBvaW50LngsXG4gICAgeTogaW5pdGlhbFBvaW50LnksXG4gICAgd2lkdGg6IGZpbmFsUG9pbnQueCAtIGluaXRpYWxQb2ludC54LFxuICAgIGhlaWdodDogZmluYWxQb2ludC55IC0gaW5pdGlhbFBvaW50LnlcbiAgfTtcbn1cbmZ1bmN0aW9uIHRyYW5zZm9ybVJlY3QocmVjdCwgdHJhbnNmb3JtLCBub3JtYWxpemVkID0gdHJ1ZSkge1xuICBjb25zdCBwMSA9IHRyYW5zZm9ybS5hcHBseVRvKHsgeDogcmVjdC5taW5YLCB5OiByZWN0Lm1pblkgfSk7XG4gIGNvbnN0IHAyID0gdHJhbnNmb3JtLmFwcGx5VG8oeyB4OiByZWN0Lm1heFgsIHk6IHJlY3QubWF4WSB9KTtcbiAgcmV0dXJuIGNyZWF0ZVJlY3RGcm9tUG9pbnRzKHAxLCBwMiwgbm9ybWFsaXplZCk7XG59XG5cbmV4cG9ydCB7IEFmZmluZVRyYW5zZm9ybSwgYWRkUG9pbnRzLCBhbGlnblJlY3QsIGNsYW1wUG9pbnQsIGNsYW1wU2l6ZSwgY2xvc2VzdCwgY2xvc2VzdFNpZGVUb1BvaW50LCBjbG9zZXN0U2lkZVRvUmVjdCwgY29sbGlzaW9ucywgY29uc3RyYWluUmVjdCwgY29udGFpbnMsIGNvbnRhaW5zUG9pbnQsIGNvbnRhaW5zUmVjdCwgY3JlYXRlUG9pbnQsIGNyZWF0ZVJlY3QsIGRlYnVnUG9seWdvbiwgZGlzdGFuY2UsIGRpc3RhbmNlQnR3RWRnZXMsIGRpc3RhbmNlRnJvbVBvaW50LCBkaXN0YW5jZUZyb21SZWN0LCBleHBhbmQsIGZyb21SYW5nZSwgZ2V0RWxlbWVudFBvbHlnb24sIGdldEVsZW1lbnRSZWN0LCBnZXRQb2ludEFuZ2xlLCBnZXRSZWN0Q2VudGVycywgZ2V0UmVjdENvcm5lcnMsIGdldFJlY3RFZGdlcywgZ2V0UmVjdEZyb21Qb2ludHMsIGdldFJvdGF0aW9uUmVjdCwgZ2V0Vmlld3BvcnRSZWN0LCBnZXRXaW5kb3dSZWN0LCBpbnNldCwgaW50ZXJzZWN0aW9uLCBpbnRlcnNlY3RzLCBpc1BvaW50LCBpc1BvaW50RXF1YWwsIGlzUG9pbnRJblBvbHlnb24sIGlzUmVjdCwgaXNSZWN0RXF1YWwsIGlzU2l6ZUVxdWFsLCBpc1N5bW1ldHJpYywgcmVzaXplUmVjdCwgcm90YXRlLCBzaGlmdCwgc2hyaW5rLCBzdWJ0cmFjdFBvaW50cywgdG9SYWQsIHVuaW9uIH07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/rect-utils/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/remove-scroll/dist/index.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@zag-js/remove-scroll/dist/index.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   preventBodyScroll: () => (/* binding */ preventBodyScroll)\n/* harmony export */ });\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n\n\n// src/index.ts\nvar LOCK_CLASSNAME = \"data-scroll-lock\";\nfunction assignStyle(el, style) {\n  if (!el) return;\n  const previousStyle = Object.keys(style).reduce(\n    (acc, key) => {\n      acc[key] = el.style.getPropertyValue(key);\n      return acc;\n    },\n    {}\n  );\n  Object.assign(el.style, style);\n  return () => {\n    Object.assign(el.style, previousStyle);\n  };\n}\nfunction setCSSProperty(el, property, value) {\n  if (!el) return;\n  const previousValue = el.style.getPropertyValue(property);\n  el.style.setProperty(property, value);\n  return () => {\n    if (previousValue) {\n      el.style.setProperty(property, previousValue);\n    } else {\n      el.style.removeProperty(property);\n    }\n  };\n}\nfunction getPaddingProperty(documentElement) {\n  const documentLeft = documentElement.getBoundingClientRect().left;\n  const scrollbarX = Math.round(documentLeft) + documentElement.scrollLeft;\n  return scrollbarX ? \"paddingLeft\" : \"paddingRight\";\n}\nfunction preventBodyScroll(_document) {\n  const doc = _document ?? document;\n  const win = doc.defaultView ?? window;\n  const { documentElement, body } = doc;\n  const locked = body.hasAttribute(LOCK_CLASSNAME);\n  if (locked) return;\n  body.setAttribute(LOCK_CLASSNAME, \"\");\n  const scrollbarWidth = win.innerWidth - documentElement.clientWidth;\n  const setScrollbarWidthProperty = () => setCSSProperty(documentElement, \"--scrollbar-width\", `${scrollbarWidth}px`);\n  const paddingProperty = getPaddingProperty(documentElement);\n  const setStyle = () => assignStyle(body, {\n    overflow: \"hidden\",\n    [paddingProperty]: `${scrollbarWidth}px`\n  });\n  const setIOSStyle = () => {\n    const { scrollX, scrollY, visualViewport } = win;\n    const offsetLeft = visualViewport?.offsetLeft ?? 0;\n    const offsetTop = visualViewport?.offsetTop ?? 0;\n    const restoreStyle = assignStyle(body, {\n      position: \"fixed\",\n      overflow: \"hidden\",\n      top: `${-(scrollY - Math.floor(offsetTop))}px`,\n      left: `${-(scrollX - Math.floor(offsetLeft))}px`,\n      right: \"0\",\n      [paddingProperty]: `${scrollbarWidth}px`\n    });\n    return () => {\n      restoreStyle?.();\n      win.scrollTo({ left: scrollX, top: scrollY, behavior: \"instant\" });\n    };\n  };\n  const cleanups = [setScrollbarWidthProperty(), (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isIos)() ? setIOSStyle() : setStyle()];\n  return () => {\n    cleanups.forEach((fn) => fn?.());\n    body.removeAttribute(LOCK_CLASSNAME);\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy9yZW1vdmUtc2Nyb2xsL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTBDOztBQUUxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSx3QkFBd0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrR0FBa0csZUFBZTtBQUNqSDtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsZUFBZTtBQUN6QyxHQUFHO0FBQ0g7QUFDQSxZQUFZLG1DQUFtQztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxtQ0FBbUM7QUFDakQsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQSw0QkFBNEIsZUFBZTtBQUMzQyxLQUFLO0FBQ0w7QUFDQTtBQUNBLHFCQUFxQixrREFBa0Q7QUFDdkU7QUFDQTtBQUNBLGlEQUFpRCx3REFBSztBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU2QiIsInNvdXJjZXMiOlsiL1VzZXJzL3BoaWxpYWhhbW1vbmQvRGVza3RvcC9sZWFybmVyLWFwcC1zeXN0ZW0vbm9kZV9tb2R1bGVzL0B6YWctanMvcmVtb3ZlLXNjcm9sbC9kaXN0L2luZGV4Lm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc0lvcyB9IGZyb20gJ0B6YWctanMvZG9tLXF1ZXJ5JztcblxuLy8gc3JjL2luZGV4LnRzXG52YXIgTE9DS19DTEFTU05BTUUgPSBcImRhdGEtc2Nyb2xsLWxvY2tcIjtcbmZ1bmN0aW9uIGFzc2lnblN0eWxlKGVsLCBzdHlsZSkge1xuICBpZiAoIWVsKSByZXR1cm47XG4gIGNvbnN0IHByZXZpb3VzU3R5bGUgPSBPYmplY3Qua2V5cyhzdHlsZSkucmVkdWNlKFxuICAgIChhY2MsIGtleSkgPT4ge1xuICAgICAgYWNjW2tleV0gPSBlbC5zdHlsZS5nZXRQcm9wZXJ0eVZhbHVlKGtleSk7XG4gICAgICByZXR1cm4gYWNjO1xuICAgIH0sXG4gICAge31cbiAgKTtcbiAgT2JqZWN0LmFzc2lnbihlbC5zdHlsZSwgc3R5bGUpO1xuICByZXR1cm4gKCkgPT4ge1xuICAgIE9iamVjdC5hc3NpZ24oZWwuc3R5bGUsIHByZXZpb3VzU3R5bGUpO1xuICB9O1xufVxuZnVuY3Rpb24gc2V0Q1NTUHJvcGVydHkoZWwsIHByb3BlcnR5LCB2YWx1ZSkge1xuICBpZiAoIWVsKSByZXR1cm47XG4gIGNvbnN0IHByZXZpb3VzVmFsdWUgPSBlbC5zdHlsZS5nZXRQcm9wZXJ0eVZhbHVlKHByb3BlcnR5KTtcbiAgZWwuc3R5bGUuc2V0UHJvcGVydHkocHJvcGVydHksIHZhbHVlKTtcbiAgcmV0dXJuICgpID0+IHtcbiAgICBpZiAocHJldmlvdXNWYWx1ZSkge1xuICAgICAgZWwuc3R5bGUuc2V0UHJvcGVydHkocHJvcGVydHksIHByZXZpb3VzVmFsdWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICBlbC5zdHlsZS5yZW1vdmVQcm9wZXJ0eShwcm9wZXJ0eSk7XG4gICAgfVxuICB9O1xufVxuZnVuY3Rpb24gZ2V0UGFkZGluZ1Byb3BlcnR5KGRvY3VtZW50RWxlbWVudCkge1xuICBjb25zdCBkb2N1bWVudExlZnQgPSBkb2N1bWVudEVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkubGVmdDtcbiAgY29uc3Qgc2Nyb2xsYmFyWCA9IE1hdGgucm91bmQoZG9jdW1lbnRMZWZ0KSArIGRvY3VtZW50RWxlbWVudC5zY3JvbGxMZWZ0O1xuICByZXR1cm4gc2Nyb2xsYmFyWCA/IFwicGFkZGluZ0xlZnRcIiA6IFwicGFkZGluZ1JpZ2h0XCI7XG59XG5mdW5jdGlvbiBwcmV2ZW50Qm9keVNjcm9sbChfZG9jdW1lbnQpIHtcbiAgY29uc3QgZG9jID0gX2RvY3VtZW50ID8/IGRvY3VtZW50O1xuICBjb25zdCB3aW4gPSBkb2MuZGVmYXVsdFZpZXcgPz8gd2luZG93O1xuICBjb25zdCB7IGRvY3VtZW50RWxlbWVudCwgYm9keSB9ID0gZG9jO1xuICBjb25zdCBsb2NrZWQgPSBib2R5Lmhhc0F0dHJpYnV0ZShMT0NLX0NMQVNTTkFNRSk7XG4gIGlmIChsb2NrZWQpIHJldHVybjtcbiAgYm9keS5zZXRBdHRyaWJ1dGUoTE9DS19DTEFTU05BTUUsIFwiXCIpO1xuICBjb25zdCBzY3JvbGxiYXJXaWR0aCA9IHdpbi5pbm5lcldpZHRoIC0gZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoO1xuICBjb25zdCBzZXRTY3JvbGxiYXJXaWR0aFByb3BlcnR5ID0gKCkgPT4gc2V0Q1NTUHJvcGVydHkoZG9jdW1lbnRFbGVtZW50LCBcIi0tc2Nyb2xsYmFyLXdpZHRoXCIsIGAke3Njcm9sbGJhcldpZHRofXB4YCk7XG4gIGNvbnN0IHBhZGRpbmdQcm9wZXJ0eSA9IGdldFBhZGRpbmdQcm9wZXJ0eShkb2N1bWVudEVsZW1lbnQpO1xuICBjb25zdCBzZXRTdHlsZSA9ICgpID0+IGFzc2lnblN0eWxlKGJvZHksIHtcbiAgICBvdmVyZmxvdzogXCJoaWRkZW5cIixcbiAgICBbcGFkZGluZ1Byb3BlcnR5XTogYCR7c2Nyb2xsYmFyV2lkdGh9cHhgXG4gIH0pO1xuICBjb25zdCBzZXRJT1NTdHlsZSA9ICgpID0+IHtcbiAgICBjb25zdCB7IHNjcm9sbFgsIHNjcm9sbFksIHZpc3VhbFZpZXdwb3J0IH0gPSB3aW47XG4gICAgY29uc3Qgb2Zmc2V0TGVmdCA9IHZpc3VhbFZpZXdwb3J0Py5vZmZzZXRMZWZ0ID8/IDA7XG4gICAgY29uc3Qgb2Zmc2V0VG9wID0gdmlzdWFsVmlld3BvcnQ/Lm9mZnNldFRvcCA/PyAwO1xuICAgIGNvbnN0IHJlc3RvcmVTdHlsZSA9IGFzc2lnblN0eWxlKGJvZHksIHtcbiAgICAgIHBvc2l0aW9uOiBcImZpeGVkXCIsXG4gICAgICBvdmVyZmxvdzogXCJoaWRkZW5cIixcbiAgICAgIHRvcDogYCR7LShzY3JvbGxZIC0gTWF0aC5mbG9vcihvZmZzZXRUb3ApKX1weGAsXG4gICAgICBsZWZ0OiBgJHstKHNjcm9sbFggLSBNYXRoLmZsb29yKG9mZnNldExlZnQpKX1weGAsXG4gICAgICByaWdodDogXCIwXCIsXG4gICAgICBbcGFkZGluZ1Byb3BlcnR5XTogYCR7c2Nyb2xsYmFyV2lkdGh9cHhgXG4gICAgfSk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHJlc3RvcmVTdHlsZT8uKCk7XG4gICAgICB3aW4uc2Nyb2xsVG8oeyBsZWZ0OiBzY3JvbGxYLCB0b3A6IHNjcm9sbFksIGJlaGF2aW9yOiBcImluc3RhbnRcIiB9KTtcbiAgICB9O1xuICB9O1xuICBjb25zdCBjbGVhbnVwcyA9IFtzZXRTY3JvbGxiYXJXaWR0aFByb3BlcnR5KCksIGlzSW9zKCkgPyBzZXRJT1NTdHlsZSgpIDogc2V0U3R5bGUoKV07XG4gIHJldHVybiAoKSA9PiB7XG4gICAgY2xlYW51cHMuZm9yRWFjaCgoZm4pID0+IGZuPy4oKSk7XG4gICAgYm9keS5yZW1vdmVBdHRyaWJ1dGUoTE9DS19DTEFTU05BTUUpO1xuICB9O1xufVxuXG5leHBvcnQgeyBwcmV2ZW50Qm9keVNjcm9sbCB9O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/remove-scroll/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/select/dist/index.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@zag-js/select/dist/index.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   collection: () => (/* binding */ collection),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   itemGroupLabelProps: () => (/* binding */ itemGroupLabelProps),\n/* harmony export */   itemGroupProps: () => (/* binding */ itemGroupProps),\n/* harmony export */   itemProps: () => (/* binding */ itemProps),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitItemGroupLabelProps: () => (/* binding */ splitItemGroupLabelProps),\n/* harmony export */   splitItemGroupProps: () => (/* binding */ splitItemGroupProps),\n/* harmony export */   splitItemProps: () => (/* binding */ splitItemProps),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_collection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/collection */ \"(ssr)/./node_modules/@zag-js/collection/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/store/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_popper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/popper */ \"(ssr)/./node_modules/@zag-js/popper/dist/index.mjs\");\n/* harmony import */ var _zag_js_dismissable__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @zag-js/dismissable */ \"(ssr)/./node_modules/@zag-js/dismissable/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n\n\n// src/select.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"select\").parts(\n  \"label\",\n  \"positioner\",\n  \"trigger\",\n  \"indicator\",\n  \"clearTrigger\",\n  \"item\",\n  \"itemText\",\n  \"itemIndicator\",\n  \"itemGroup\",\n  \"itemGroupLabel\",\n  \"list\",\n  \"content\",\n  \"root\",\n  \"control\",\n  \"valueText\"\n);\nvar parts = anatomy.build();\nvar collection = (options) => {\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_1__.ref)(new _zag_js_collection__WEBPACK_IMPORTED_MODULE_2__.ListCollection(options));\n};\ncollection.empty = () => {\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_1__.ref)(new _zag_js_collection__WEBPACK_IMPORTED_MODULE_2__.ListCollection({ items: [] }));\n};\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.createScope)({\n  getRootId: (ctx) => ctx.ids?.root ?? `select:${ctx.id}`,\n  getContentId: (ctx) => ctx.ids?.content ?? `select:${ctx.id}:content`,\n  getTriggerId: (ctx) => ctx.ids?.trigger ?? `select:${ctx.id}:trigger`,\n  getClearTriggerId: (ctx) => ctx.ids?.clearTrigger ?? `select:${ctx.id}:clear-trigger`,\n  getLabelId: (ctx) => ctx.ids?.label ?? `select:${ctx.id}:label`,\n  getControlId: (ctx) => ctx.ids?.control ?? `select:${ctx.id}:control`,\n  getItemId: (ctx, id) => ctx.ids?.item?.(id) ?? `select:${ctx.id}:option:${id}`,\n  getHiddenSelectId: (ctx) => ctx.ids?.hiddenSelect ?? `select:${ctx.id}:select`,\n  getPositionerId: (ctx) => ctx.ids?.positioner ?? `select:${ctx.id}:positioner`,\n  getItemGroupId: (ctx, id) => ctx.ids?.itemGroup?.(id) ?? `select:${ctx.id}:optgroup:${id}`,\n  getItemGroupLabelId: (ctx, id) => ctx.ids?.itemGroupLabel?.(id) ?? `select:${ctx.id}:optgroup-label:${id}`,\n  getHiddenSelectEl: (ctx) => dom.getById(ctx, dom.getHiddenSelectId(ctx)),\n  getContentEl: (ctx) => dom.getById(ctx, dom.getContentId(ctx)),\n  getControlEl: (ctx) => dom.getById(ctx, dom.getControlId(ctx)),\n  getTriggerEl: (ctx) => dom.getById(ctx, dom.getTriggerId(ctx)),\n  getClearTriggerEl: (ctx) => dom.getById(ctx, dom.getClearTriggerId(ctx)),\n  getPositionerEl: (ctx) => dom.getById(ctx, dom.getPositionerId(ctx)),\n  getHighlightedOptionEl(ctx) {\n    if (!ctx.highlightedValue) return null;\n    return dom.getById(ctx, dom.getItemId(ctx, ctx.highlightedValue));\n  }\n});\n\n// src/select.connect.ts\nfunction connect(state, send, normalize) {\n  const disabled = state.context.isDisabled;\n  const invalid = state.context.invalid;\n  const readOnly = state.context.readOnly;\n  const interactive = state.context.isInteractive;\n  const composite = state.context.composite;\n  const open = state.hasTag(\"open\");\n  const focused = state.matches(\"focused\");\n  const highlightedValue = state.context.highlightedValue;\n  const highlightedItem = state.context.highlightedItem;\n  const selectedItems = state.context.selectedItems;\n  const isTypingAhead = state.context.isTypingAhead;\n  const collection2 = state.context.collection;\n  const ariaActiveDescendant = highlightedValue ? dom.getItemId(state.context, highlightedValue) : void 0;\n  function getItemState(props2) {\n    const _disabled = collection2.getItemDisabled(props2.item);\n    const value = collection2.getItemValue(props2.item);\n    return {\n      value,\n      disabled: Boolean(disabled || _disabled),\n      highlighted: highlightedValue === value,\n      selected: state.context.value.includes(value)\n    };\n  }\n  const popperStyles = (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_4__.getPlacementStyles)({\n    ...state.context.positioning,\n    placement: state.context.currentPlacement\n  });\n  return {\n    open,\n    focused,\n    empty: state.context.value.length === 0,\n    highlightedItem,\n    highlightedValue,\n    selectedItems,\n    hasSelectedItems: state.context.hasSelectedItems,\n    value: state.context.value,\n    valueAsString: state.context.valueAsString,\n    collection: collection2,\n    multiple: !!state.context.multiple,\n    disabled: !!disabled,\n    setCollection(collection3) {\n      send({ type: \"COLLECTION.SET\", value: collection3 });\n    },\n    reposition(options = {}) {\n      send({ type: \"POSITIONING.SET\", options });\n    },\n    focus() {\n      dom.getTriggerEl(state.context)?.focus({ preventScroll: true });\n    },\n    setOpen(nextOpen) {\n      if (nextOpen === open) return;\n      send(nextOpen ? \"OPEN\" : \"CLOSE\");\n    },\n    selectValue(value) {\n      send({ type: \"ITEM.SELECT\", value });\n    },\n    setValue(value) {\n      send({ type: \"VALUE.SET\", value });\n    },\n    selectAll() {\n      send({ type: \"VALUE.SET\", value: collection2.getValues() });\n    },\n    highlightValue(value) {\n      send({ type: \"HIGHLIGHTED_VALUE.SET\", value });\n    },\n    clearValue(value) {\n      if (value) {\n        send({ type: \"ITEM.CLEAR\", value });\n      } else {\n        send({ type: \"VALUE.CLEAR\" });\n      }\n    },\n    getItemState,\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: state.context.dir,\n        id: dom.getRootId(state.context),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(invalid),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(readOnly)\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        dir: state.context.dir,\n        id: dom.getLabelId(state.context),\n        ...parts.label.attrs,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(invalid),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(readOnly),\n        htmlFor: dom.getHiddenSelectId(state.context),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          dom.getTriggerEl(state.context)?.focus({ preventScroll: true });\n        }\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        dir: state.context.dir,\n        id: dom.getControlId(state.context),\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(focused),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(invalid)\n      });\n    },\n    getValueTextProps() {\n      return normalize.element({\n        ...parts.valueText.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(invalid),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(focused)\n      });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        id: dom.getTriggerId(state.context),\n        disabled,\n        dir: state.context.dir,\n        type: \"button\",\n        role: \"combobox\",\n        \"aria-controls\": dom.getContentId(state.context),\n        \"aria-expanded\": open,\n        \"aria-haspopup\": \"listbox\",\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-invalid\": invalid,\n        \"aria-labelledby\": dom.getLabelId(state.context),\n        ...parts.trigger.attrs,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(invalid),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(readOnly),\n        \"data-placement\": state.context.currentPlacement,\n        \"data-placeholder-shown\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(!state.context.hasSelectedItems),\n        onClick(event) {\n          if (!interactive) return;\n          if (event.defaultPrevented) return;\n          send({ type: \"TRIGGER.CLICK\" });\n        },\n        onFocus() {\n          send(\"TRIGGER.FOCUS\");\n        },\n        onBlur() {\n          send(\"TRIGGER.BLUR\");\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          const keyMap = {\n            ArrowUp() {\n              send({ type: \"TRIGGER.ARROW_UP\" });\n            },\n            ArrowDown(event2) {\n              send({ type: event2.altKey ? \"OPEN\" : \"TRIGGER.ARROW_DOWN\" });\n            },\n            ArrowLeft() {\n              send({ type: \"TRIGGER.ARROW_LEFT\" });\n            },\n            ArrowRight() {\n              send({ type: \"TRIGGER.ARROW_RIGHT\" });\n            },\n            Home() {\n              send({ type: \"TRIGGER.HOME\" });\n            },\n            End() {\n              send({ type: \"TRIGGER.END\" });\n            },\n            Enter() {\n              send({ type: \"TRIGGER.ENTER\" });\n            },\n            Space(event2) {\n              if (isTypingAhead) {\n                send({ type: \"TRIGGER.TYPEAHEAD\", key: event2.key });\n              } else {\n                send({ type: \"TRIGGER.ENTER\" });\n              }\n            }\n          };\n          const exec = keyMap[(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.getEventKey)(event, state.context)];\n          if (exec) {\n            exec(event);\n            event.preventDefault();\n            return;\n          }\n          if (_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.getByTypeahead.isValidEvent(event)) {\n            send({ type: \"TRIGGER.TYPEAHEAD\", key: event.key });\n            event.preventDefault();\n          }\n        }\n      });\n    },\n    getIndicatorProps() {\n      return normalize.element({\n        ...parts.indicator.attrs,\n        dir: state.context.dir,\n        \"aria-hidden\": true,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(invalid),\n        \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(readOnly)\n      });\n    },\n    getItemProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        id: dom.getItemId(state.context, itemState.value),\n        role: \"option\",\n        ...parts.item.attrs,\n        dir: state.context.dir,\n        \"data-value\": itemState.value,\n        \"aria-selected\": itemState.selected,\n        \"data-state\": itemState.selected ? \"checked\" : \"unchecked\",\n        \"data-highlighted\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(itemState.highlighted),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(itemState.disabled),\n        \"aria-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.ariaAttr)(itemState.disabled),\n        onPointerMove(event) {\n          if (itemState.disabled || event.pointerType !== \"mouse\") return;\n          if (itemState.value === state.context.highlightedValue) return;\n          send({ type: \"ITEM.POINTER_MOVE\", value: itemState.value });\n        },\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (itemState.disabled) return;\n          send({ type: \"ITEM.CLICK\", src: \"pointerup\", value: itemState.value });\n        },\n        onPointerLeave(event) {\n          if (itemState.disabled) return;\n          if (props2.persistFocus) return;\n          if (event.pointerType !== \"mouse\") return;\n          const pointerMoved = state.previousEvent.type.includes(\"POINTER\");\n          if (!pointerMoved) return;\n          send({ type: \"ITEM.POINTER_LEAVE\" });\n        }\n      });\n    },\n    getItemTextProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        ...parts.itemText.attrs,\n        \"data-state\": itemState.selected ? \"checked\" : \"unchecked\",\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(itemState.disabled),\n        \"data-highlighted\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(itemState.highlighted)\n      });\n    },\n    getItemIndicatorProps(props2) {\n      const itemState = getItemState(props2);\n      return normalize.element({\n        \"aria-hidden\": true,\n        ...parts.itemIndicator.attrs,\n        \"data-state\": itemState.selected ? \"checked\" : \"unchecked\",\n        hidden: !itemState.selected\n      });\n    },\n    getItemGroupLabelProps(props2) {\n      const { htmlFor } = props2;\n      return normalize.element({\n        ...parts.itemGroupLabel.attrs,\n        id: dom.getItemGroupLabelId(state.context, htmlFor),\n        role: \"group\",\n        dir: state.context.dir\n      });\n    },\n    getItemGroupProps(props2) {\n      const { id } = props2;\n      return normalize.element({\n        ...parts.itemGroup.attrs,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(disabled),\n        id: dom.getItemGroupId(state.context, id),\n        \"aria-labelledby\": dom.getItemGroupLabelId(state.context, id),\n        dir: state.context.dir\n      });\n    },\n    getClearTriggerProps() {\n      return normalize.button({\n        ...parts.clearTrigger.attrs,\n        id: dom.getClearTriggerId(state.context),\n        type: \"button\",\n        \"aria-label\": \"Clear value\",\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.dataAttr)(invalid),\n        disabled,\n        hidden: !state.context.hasSelectedItems,\n        dir: state.context.dir,\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send(\"CLEAR.CLICK\");\n        }\n      });\n    },\n    getHiddenSelectProps() {\n      return normalize.select({\n        name: state.context.name,\n        form: state.context.form,\n        disabled,\n        multiple: state.context.multiple,\n        required: state.context.required,\n        \"aria-hidden\": true,\n        id: dom.getHiddenSelectId(state.context),\n        defaultValue: state.context.multiple ? state.context.value : state.context.value[0],\n        style: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.visuallyHiddenStyle,\n        tabIndex: -1,\n        // Some browser extensions will focus the hidden select.\n        // Let's forward the focus to the trigger.\n        onFocus() {\n          dom.getTriggerEl(state.context)?.focus({ preventScroll: true });\n        },\n        \"aria-labelledby\": dom.getLabelId(state.context)\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        ...parts.positioner.attrs,\n        dir: state.context.dir,\n        id: dom.getPositionerId(state.context),\n        style: popperStyles.floating\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        hidden: !open,\n        dir: state.context.dir,\n        id: dom.getContentId(state.context),\n        role: composite ? \"listbox\" : \"dialog\",\n        ...parts.content.attrs,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-placement\": state.context.currentPlacement,\n        \"data-activedescendant\": ariaActiveDescendant,\n        \"aria-activedescendant\": composite ? ariaActiveDescendant : void 0,\n        \"aria-multiselectable\": state.context.multiple && composite ? true : void 0,\n        \"aria-labelledby\": dom.getLabelId(state.context),\n        tabIndex: 0,\n        onKeyDown(event) {\n          if (!interactive) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.isSelfTarget)(event)) return;\n          if (event.key === \"Tab\") {\n            const valid = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.isValidTabEvent)(event);\n            if (!valid) {\n              event.preventDefault();\n              return;\n            }\n          }\n          const keyMap = {\n            ArrowUp() {\n              send({ type: \"CONTENT.ARROW_UP\" });\n            },\n            ArrowDown() {\n              send({ type: \"CONTENT.ARROW_DOWN\" });\n            },\n            Home() {\n              send({ type: \"CONTENT.HOME\" });\n            },\n            End() {\n              send({ type: \"CONTENT.END\" });\n            },\n            Enter() {\n              send({ type: \"ITEM.CLICK\", src: \"keydown.enter\" });\n            },\n            Space(event2) {\n              if (isTypingAhead) {\n                send({ type: \"CONTENT.TYPEAHEAD\", key: event2.key });\n              } else {\n                keyMap.Enter?.(event2);\n              }\n            }\n          };\n          const exec = keyMap[(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.getEventKey)(event)];\n          if (exec) {\n            exec(event);\n            event.preventDefault();\n            return;\n          }\n          const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.getEventTarget)(event);\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.isEditableElement)(target)) {\n            return;\n          }\n          if (_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.getByTypeahead.isValidEvent(event)) {\n            send({ type: \"CONTENT.TYPEAHEAD\", key: event.key });\n            event.preventDefault();\n          }\n        }\n      });\n    },\n    getListProps() {\n      return normalize.element({\n        ...parts.list.attrs,\n        tabIndex: 0,\n        role: !composite ? \"listbox\" : void 0,\n        \"aria-labelledby\": dom.getTriggerId(state.context),\n        \"aria-activedescendant\": !composite ? ariaActiveDescendant : void 0,\n        \"aria-multiselectable\": !composite && state.context.multiple ? true : void 0\n      });\n    }\n  };\n}\nvar { and, not, or } = _zag_js_core__WEBPACK_IMPORTED_MODULE_5__.guards;\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_5__.createMachine)(\n    {\n      id: \"select\",\n      context: {\n        value: [],\n        highlightedValue: null,\n        loopFocus: false,\n        closeOnSelect: !ctx.multiple,\n        disabled: false,\n        readOnly: false,\n        composite: true,\n        ...ctx,\n        highlightedItem: null,\n        selectedItems: [],\n        valueAsString: \"\",\n        collection: ctx.collection ?? collection.empty(),\n        typeahead: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.getByTypeahead.defaultOptions,\n        fieldsetDisabled: false,\n        positioning: {\n          placement: \"bottom-start\",\n          gutter: 8,\n          ...ctx.positioning\n        }\n      },\n      computed: {\n        hasSelectedItems: (ctx2) => ctx2.value.length > 0,\n        isTypingAhead: (ctx2) => ctx2.typeahead.keysSoFar !== \"\",\n        isDisabled: (ctx2) => !!ctx2.disabled || ctx2.fieldsetDisabled,\n        isInteractive: (ctx2) => !(ctx2.isDisabled || ctx2.readOnly)\n      },\n      initial: ctx.open ? \"open\" : \"idle\",\n      created: [\"syncCollection\"],\n      entry: [\"syncSelectElement\"],\n      watch: {\n        open: [\"toggleVisibility\"],\n        value: [\"syncSelectedItems\", \"syncSelectElement\"],\n        highlightedValue: [\"syncHighlightedItem\"],\n        collection: [\"syncCollection\"]\n      },\n      on: {\n        \"HIGHLIGHTED_VALUE.SET\": {\n          actions: [\"setHighlightedItem\"]\n        },\n        \"ITEM.SELECT\": {\n          actions: [\"selectItem\"]\n        },\n        \"ITEM.CLEAR\": {\n          actions: [\"clearItem\"]\n        },\n        \"VALUE.SET\": {\n          actions: [\"setSelectedItems\"]\n        },\n        \"VALUE.CLEAR\": {\n          actions: [\"clearSelectedItems\"]\n        },\n        \"CLEAR.CLICK\": {\n          actions: [\"clearSelectedItems\", \"focusTriggerEl\"]\n        },\n        \"COLLECTION.SET\": {\n          actions: [\"setCollection\"]\n        }\n      },\n      activities: [\"trackFormControlState\"],\n      states: {\n        idle: {\n          tags: [\"closed\"],\n          on: {\n            \"CONTROLLED.OPEN\": [\n              {\n                guard: \"isTriggerClickEvent\",\n                target: \"open\",\n                actions: [\"setInitialFocus\", \"highlightFirstSelectedItem\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"setInitialFocus\"]\n              }\n            ],\n            \"TRIGGER.CLICK\": [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\", \"setInitialFocus\", \"highlightFirstSelectedItem\"]\n              }\n            ],\n            \"TRIGGER.FOCUS\": {\n              target: \"focused\"\n            },\n            OPEN: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"setInitialFocus\", \"invokeOnOpen\"]\n              }\n            ]\n          }\n        },\n        focused: {\n          tags: [\"closed\"],\n          on: {\n            \"CONTROLLED.OPEN\": [\n              {\n                guard: \"isTriggerClickEvent\",\n                target: \"open\",\n                actions: [\"setInitialFocus\", \"highlightFirstSelectedItem\"]\n              },\n              {\n                guard: \"isTriggerArrowUpEvent\",\n                target: \"open\",\n                actions: [\"setInitialFocus\", \"highlightComputedLastItem\"]\n              },\n              {\n                guard: or(\"isTriggerArrowDownEvent\", \"isTriggerEnterEvent\"),\n                target: \"open\",\n                actions: [\"setInitialFocus\", \"highlightComputedFirstItem\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"setInitialFocus\"]\n              }\n            ],\n            OPEN: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"setInitialFocus\", \"invokeOnOpen\"]\n              }\n            ],\n            \"TRIGGER.BLUR\": {\n              target: \"idle\"\n            },\n            \"TRIGGER.CLICK\": [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"setInitialFocus\", \"invokeOnOpen\", \"highlightFirstSelectedItem\"]\n              }\n            ],\n            \"TRIGGER.ENTER\": [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"setInitialFocus\", \"invokeOnOpen\", \"highlightComputedFirstItem\"]\n              }\n            ],\n            \"TRIGGER.ARROW_UP\": [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"setInitialFocus\", \"invokeOnOpen\", \"highlightComputedLastItem\"]\n              }\n            ],\n            \"TRIGGER.ARROW_DOWN\": [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"setInitialFocus\", \"invokeOnOpen\", \"highlightComputedFirstItem\"]\n              }\n            ],\n            \"TRIGGER.ARROW_LEFT\": [\n              {\n                guard: and(not(\"multiple\"), \"hasSelectedItems\"),\n                actions: [\"selectPreviousItem\"]\n              },\n              {\n                guard: not(\"multiple\"),\n                actions: [\"selectLastItem\"]\n              }\n            ],\n            \"TRIGGER.ARROW_RIGHT\": [\n              {\n                guard: and(not(\"multiple\"), \"hasSelectedItems\"),\n                actions: [\"selectNextItem\"]\n              },\n              {\n                guard: not(\"multiple\"),\n                actions: [\"selectFirstItem\"]\n              }\n            ],\n            \"TRIGGER.HOME\": {\n              guard: not(\"multiple\"),\n              actions: [\"selectFirstItem\"]\n            },\n            \"TRIGGER.END\": {\n              guard: not(\"multiple\"),\n              actions: [\"selectLastItem\"]\n            },\n            \"TRIGGER.TYPEAHEAD\": {\n              guard: not(\"multiple\"),\n              actions: [\"selectMatchingItem\"]\n            }\n          }\n        },\n        open: {\n          tags: [\"open\"],\n          exit: [\"scrollContentToTop\"],\n          activities: [\"trackDismissableElement\", \"computePlacement\", \"scrollToHighlightedItem\"],\n          on: {\n            \"CONTROLLED.CLOSE\": {\n              target: \"focused\",\n              actions: [\"focusTriggerEl\", \"clearHighlightedItem\"]\n            },\n            CLOSE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                target: \"focused\",\n                actions: [\"invokeOnClose\", \"focusTriggerEl\", \"clearHighlightedItem\"]\n              }\n            ],\n            \"TRIGGER.CLICK\": [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                target: \"focused\",\n                actions: [\"invokeOnClose\", \"clearHighlightedItem\"]\n              }\n            ],\n            \"ITEM.CLICK\": [\n              {\n                guard: and(\"closeOnSelect\", \"isOpenControlled\"),\n                actions: [\"selectHighlightedItem\", \"invokeOnClose\"]\n              },\n              {\n                guard: \"closeOnSelect\",\n                target: \"focused\",\n                actions: [\"selectHighlightedItem\", \"invokeOnClose\", \"focusTriggerEl\", \"clearHighlightedItem\"]\n              },\n              {\n                actions: [\"selectHighlightedItem\"]\n              }\n            ],\n            \"CONTENT.HOME\": {\n              actions: [\"highlightFirstItem\"]\n            },\n            \"CONTENT.END\": {\n              actions: [\"highlightLastItem\"]\n            },\n            \"CONTENT.ARROW_DOWN\": [\n              {\n                guard: and(\"hasHighlightedItem\", \"loop\", \"isLastItemHighlighted\"),\n                actions: [\"highlightFirstItem\"]\n              },\n              {\n                guard: \"hasHighlightedItem\",\n                actions: [\"highlightNextItem\"]\n              },\n              {\n                actions: [\"highlightFirstItem\"]\n              }\n            ],\n            \"CONTENT.ARROW_UP\": [\n              {\n                guard: and(\"hasHighlightedItem\", \"loop\", \"isFirstItemHighlighted\"),\n                actions: [\"highlightLastItem\"]\n              },\n              {\n                guard: \"hasHighlightedItem\",\n                actions: [\"highlightPreviousItem\"]\n              },\n              {\n                actions: [\"highlightLastItem\"]\n              }\n            ],\n            \"CONTENT.TYPEAHEAD\": {\n              actions: [\"highlightMatchingItem\"]\n            },\n            \"ITEM.POINTER_MOVE\": {\n              actions: [\"highlightItem\"]\n            },\n            \"ITEM.POINTER_LEAVE\": {\n              actions: [\"clearHighlightedItem\"]\n            },\n            \"POSITIONING.SET\": {\n              actions: [\"reposition\"]\n            }\n          }\n        }\n      }\n    },\n    {\n      guards: {\n        loop: (ctx2) => !!ctx2.loopFocus,\n        multiple: (ctx2) => !!ctx2.multiple,\n        hasSelectedItems: (ctx2) => !!ctx2.hasSelectedItems,\n        hasHighlightedItem: (ctx2) => ctx2.highlightedValue != null,\n        isFirstItemHighlighted: (ctx2) => ctx2.highlightedValue === ctx2.collection.firstValue,\n        isLastItemHighlighted: (ctx2) => ctx2.highlightedValue === ctx2.collection.lastValue,\n        closeOnSelect: (ctx2, evt) => !!(evt.closeOnSelect ?? ctx2.closeOnSelect),\n        // guard assertions (for controlled mode)\n        isOpenControlled: (ctx2) => !!ctx2[\"open.controlled\"],\n        isTriggerClickEvent: (_ctx, evt) => evt.previousEvent?.type === \"TRIGGER.CLICK\",\n        isTriggerEnterEvent: (_ctx, evt) => evt.previousEvent?.type === \"TRIGGER.ENTER\",\n        isTriggerArrowUpEvent: (_ctx, evt) => evt.previousEvent?.type === \"TRIGGER.ARROW_UP\",\n        isTriggerArrowDownEvent: (_ctx, evt) => evt.previousEvent?.type === \"TRIGGER.ARROW_DOWN\"\n      },\n      activities: {\n        trackFormControlState(ctx2, _evt, { initialContext }) {\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.trackFormControl)(dom.getHiddenSelectEl(ctx2), {\n            onFieldsetDisabledChange(disabled) {\n              ctx2.fieldsetDisabled = disabled;\n            },\n            onFormReset() {\n              set.selectedItems(ctx2, initialContext.value);\n            }\n          });\n        },\n        trackDismissableElement(ctx2, _evt, { send }) {\n          const contentEl = () => dom.getContentEl(ctx2);\n          let restoreFocus = true;\n          return (0,_zag_js_dismissable__WEBPACK_IMPORTED_MODULE_7__.trackDismissableElement)(contentEl, {\n            defer: true,\n            exclude: [dom.getTriggerEl(ctx2), dom.getClearTriggerEl(ctx2)],\n            onFocusOutside: ctx2.onFocusOutside,\n            onPointerDownOutside: ctx2.onPointerDownOutside,\n            onInteractOutside(event) {\n              ctx2.onInteractOutside?.(event);\n              restoreFocus = !(event.detail.focusable || event.detail.contextmenu);\n            },\n            onDismiss() {\n              send({ type: \"CLOSE\", src: \"interact-outside\", restoreFocus });\n            }\n          });\n        },\n        computePlacement(ctx2) {\n          ctx2.currentPlacement = ctx2.positioning.placement;\n          const triggerEl = () => dom.getTriggerEl(ctx2);\n          const positionerEl = () => dom.getPositionerEl(ctx2);\n          return (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_4__.getPlacement)(triggerEl, positionerEl, {\n            defer: true,\n            ...ctx2.positioning,\n            onComplete(data) {\n              ctx2.currentPlacement = data.placement;\n            }\n          });\n        },\n        scrollToHighlightedItem(ctx2, _evt, { getState }) {\n          const exec = (immediate) => {\n            if (ctx2.highlightedValue == null) return;\n            const state = getState();\n            if (state.event.type.includes(\"POINTER\")) return;\n            const optionEl = dom.getHighlightedOptionEl(ctx2);\n            const contentEl2 = dom.getContentEl(ctx2);\n            if (ctx2.scrollToIndexFn) {\n              const highlightedIndex = ctx2.collection.indexOf(ctx2.highlightedValue);\n              ctx2.scrollToIndexFn({ index: highlightedIndex, immediate });\n              return;\n            }\n            (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.scrollIntoView)(optionEl, { rootEl: contentEl2, block: \"nearest\" });\n          };\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.raf)(() => exec(true));\n          const contentEl = () => dom.getContentEl(ctx2);\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.observeAttributes)(contentEl, {\n            defer: true,\n            attributes: [\"data-activedescendant\"],\n            callback() {\n              exec(false);\n            }\n          });\n        }\n      },\n      actions: {\n        reposition(ctx2, evt) {\n          const positionerEl = () => dom.getPositionerEl(ctx2);\n          (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_4__.getPlacement)(dom.getTriggerEl(ctx2), positionerEl, {\n            ...ctx2.positioning,\n            ...evt.options,\n            defer: true,\n            listeners: false,\n            onComplete(data) {\n              ctx2.currentPlacement = data.placement;\n            }\n          });\n        },\n        toggleVisibility(ctx2, evt, { send }) {\n          send({ type: ctx2.open ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\", previousEvent: evt });\n        },\n        highlightPreviousItem(ctx2) {\n          if (ctx2.highlightedValue == null) return;\n          const value = ctx2.collection.getPreviousValue(ctx2.highlightedValue);\n          set.highlightedItem(ctx2, value);\n        },\n        highlightNextItem(ctx2) {\n          if (ctx2.highlightedValue == null) return;\n          const value = ctx2.collection.getNextValue(ctx2.highlightedValue);\n          set.highlightedItem(ctx2, value);\n        },\n        highlightFirstItem(ctx2) {\n          const value = ctx2.collection.firstValue;\n          set.highlightedItem(ctx2, value);\n        },\n        highlightLastItem(ctx2) {\n          const value = ctx2.collection.lastValue;\n          set.highlightedItem(ctx2, value);\n        },\n        setInitialFocus(ctx2) {\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.raf)(() => {\n            const element = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.getInitialFocus)({\n              root: dom.getContentEl(ctx2)\n            });\n            element?.focus({ preventScroll: true });\n          });\n        },\n        focusTriggerEl(ctx2, evt) {\n          const restoreFocus = evt.restoreFocus ?? evt.previousEvent?.restoreFocus;\n          if (restoreFocus != null && !restoreFocus) return;\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.raf)(() => {\n            const element = dom.getTriggerEl(ctx2);\n            element?.focus({ preventScroll: true });\n          });\n        },\n        selectHighlightedItem(ctx2, evt) {\n          let value = evt.value ?? ctx2.highlightedValue;\n          if (value == null) return;\n          const nullable = ctx2.deselectable && !ctx2.multiple && ctx2.value.includes(value);\n          value = nullable ? null : value;\n          set.selectedItem(ctx2, value, nullable);\n        },\n        highlightComputedFirstItem(ctx2) {\n          const value = ctx2.hasSelectedItems ? ctx2.collection.sort(ctx2.value)[0] : ctx2.collection.firstValue;\n          set.highlightedItem(ctx2, value);\n        },\n        highlightComputedLastItem(ctx2) {\n          const value = ctx2.hasSelectedItems ? ctx2.collection.sort(ctx2.value)[0] : ctx2.collection.lastValue;\n          set.highlightedItem(ctx2, value);\n        },\n        highlightFirstSelectedItem(ctx2) {\n          if (!ctx2.hasSelectedItems) return;\n          const [value] = ctx2.collection.sort(ctx2.value);\n          set.highlightedItem(ctx2, value);\n        },\n        highlightItem(ctx2, evt) {\n          set.highlightedItem(ctx2, evt.value);\n        },\n        highlightMatchingItem(ctx2, evt) {\n          const value = ctx2.collection.search(evt.key, {\n            state: ctx2.typeahead,\n            currentValue: ctx2.highlightedValue\n          });\n          if (value == null) return;\n          set.highlightedItem(ctx2, value);\n        },\n        setHighlightedItem(ctx2, evt) {\n          set.highlightedItem(ctx2, evt.value);\n        },\n        clearHighlightedItem(ctx2) {\n          set.highlightedItem(ctx2, null, true);\n        },\n        selectItem(ctx2, evt) {\n          const nullable = ctx2.deselectable && !ctx2.multiple && ctx2.value.includes(evt.value);\n          const value = nullable ? null : evt.value;\n          set.selectedItem(ctx2, value, nullable);\n        },\n        clearItem(ctx2, evt) {\n          const value = ctx2.value.filter((v) => v !== evt.value);\n          set.selectedItems(ctx2, value);\n        },\n        setSelectedItems(ctx2, evt) {\n          set.selectedItems(ctx2, evt.value);\n        },\n        clearSelectedItems(ctx2) {\n          set.selectedItems(ctx2, []);\n        },\n        selectPreviousItem(ctx2) {\n          const value = ctx2.collection.getPreviousValue(ctx2.value[0]);\n          set.selectedItem(ctx2, value);\n        },\n        selectNextItem(ctx2) {\n          const value = ctx2.collection.getNextValue(ctx2.value[0]);\n          set.selectedItem(ctx2, value);\n        },\n        selectFirstItem(ctx2) {\n          const value = ctx2.collection.firstValue;\n          set.selectedItem(ctx2, value);\n        },\n        selectLastItem(ctx2) {\n          const value = ctx2.collection.lastValue;\n          set.selectedItem(ctx2, value);\n        },\n        selectMatchingItem(ctx2, evt) {\n          const value = ctx2.collection.search(evt.key, {\n            state: ctx2.typeahead,\n            currentValue: ctx2.value[0]\n          });\n          if (value == null) return;\n          set.selectedItem(ctx2, value);\n        },\n        scrollContentToTop(ctx2) {\n          if (ctx2.scrollToIndexFn) {\n            ctx2.scrollToIndexFn({ index: 0, immediate: true });\n          } else {\n            dom.getContentEl(ctx2)?.scrollTo(0, 0);\n          }\n        },\n        invokeOnOpen(ctx2) {\n          ctx2.onOpenChange?.({ open: true });\n        },\n        invokeOnClose(ctx2) {\n          ctx2.onOpenChange?.({ open: false });\n        },\n        syncSelectElement(ctx2) {\n          const selectEl = dom.getHiddenSelectEl(ctx2);\n          if (!selectEl) return;\n          if (ctx2.value.length === 0 && !ctx2.multiple) {\n            selectEl.selectedIndex = -1;\n            return;\n          }\n          for (const option of selectEl.options) {\n            option.selected = ctx2.value.includes(option.value);\n          }\n        },\n        setCollection(ctx2, evt) {\n          ctx2.collection = evt.value;\n        },\n        syncCollection(ctx2) {\n          const selectedItems = ctx2.collection.findMany(ctx2.value);\n          const valueAsString = ctx2.collection.stringifyItems(selectedItems);\n          ctx2.highlightedItem = ctx2.collection.find(ctx2.highlightedValue);\n          ctx2.selectedItems = selectedItems;\n          ctx2.valueAsString = valueAsString;\n        },\n        syncSelectedItems(ctx2) {\n          sync.valueChange(ctx2);\n        },\n        syncHighlightedItem(ctx2) {\n          sync.highlightChange(ctx2);\n        }\n      }\n    }\n  );\n}\nfunction dispatchChangeEvent(ctx) {\n  (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_3__.raf)(() => {\n    const node = dom.getHiddenSelectEl(ctx);\n    if (!node) return;\n    const win = dom.getWin(ctx);\n    const changeEvent = new win.Event(\"change\", { bubbles: true, composed: true });\n    node.dispatchEvent(changeEvent);\n  });\n}\nvar sync = {\n  valueChange: (ctx) => {\n    const prevSelectedItems = ctx.selectedItems;\n    ctx.selectedItems = ctx.value.map((value) => {\n      const foundItem = prevSelectedItems.find((item) => ctx.collection.getItemValue(item) === value);\n      if (foundItem) return foundItem;\n      return ctx.collection.find(value);\n    });\n    ctx.valueAsString = ctx.collection.stringifyItems(ctx.selectedItems);\n  },\n  highlightChange: (ctx) => {\n    ctx.highlightedItem = ctx.collection.find(ctx.highlightedValue);\n  }\n};\nvar invoke = {\n  valueChange: (ctx) => {\n    sync.valueChange(ctx);\n    ctx.onValueChange?.({\n      value: Array.from(ctx.value),\n      items: Array.from(ctx.selectedItems)\n    });\n    dispatchChangeEvent(ctx);\n  },\n  highlightChange: (ctx) => {\n    sync.highlightChange(ctx);\n    ctx.onHighlightChange?.({\n      highlightedValue: ctx.highlightedValue,\n      highlightedItem: ctx.highlightedItem,\n      highlightedIndex: ctx.collection.indexOf(ctx.highlightedValue)\n    });\n  }\n};\nvar set = {\n  selectedItem: (ctx, value, force = false) => {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.isEqual)(ctx.value, value)) return;\n    if (value == null && !force) return;\n    if (value == null && force) {\n      ctx.value = [];\n      invoke.valueChange(ctx);\n      return;\n    }\n    ctx.value = ctx.multiple ? (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.addOrRemove)(ctx.value, value) : [value];\n    invoke.valueChange(ctx);\n  },\n  selectedItems: (ctx, value) => {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.isEqual)(ctx.value, value)) return;\n    ctx.value = value;\n    invoke.valueChange(ctx);\n  },\n  highlightedItem: (ctx, value, force = false) => {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.isEqual)(ctx.highlightedValue, value)) return;\n    if (value == null && !force) return;\n    ctx.highlightedValue = value ?? null;\n    invoke.highlightChange(ctx);\n  }\n};\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_8__.createProps)()([\n  \"closeOnSelect\",\n  \"collection\",\n  \"dir\",\n  \"disabled\",\n  \"deselectable\",\n  \"form\",\n  \"getRootNode\",\n  \"highlightedValue\",\n  \"id\",\n  \"ids\",\n  \"invalid\",\n  \"loopFocus\",\n  \"multiple\",\n  \"name\",\n  \"onFocusOutside\",\n  \"onHighlightChange\",\n  \"onInteractOutside\",\n  \"onOpenChange\",\n  \"onPointerDownOutside\",\n  \"onValueChange\",\n  \"open.controlled\",\n  \"open\",\n  \"composite\",\n  \"positioning\",\n  \"required\",\n  \"readOnly\",\n  \"scrollToIndexFn\",\n  \"value\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.createSplitProps)(props);\nvar itemProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_8__.createProps)()([\"item\", \"persistFocus\"]);\nvar splitItemProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.createSplitProps)(itemProps);\nvar itemGroupProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_8__.createProps)()([\"id\"]);\nvar splitItemGroupProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.createSplitProps)(itemGroupProps);\nvar itemGroupLabelProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_8__.createProps)()([\"htmlFor\"]);\nvar splitItemGroupLabelProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.createSplitProps)(itemGroupLabelProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/select/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/slider/dist/index.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@zag-js/slider/dist/index.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps),\n/* harmony export */   splitThumbProps: () => (/* binding */ splitThumbProps),\n/* harmony export */   thumbProps: () => (/* binding */ thumbProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_element_size__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/element-size */ \"(ssr)/./node_modules/@zag-js/element-size/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n// src/slider.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"slider\").parts(\n  \"root\",\n  \"label\",\n  \"thumb\",\n  \"valueText\",\n  \"track\",\n  \"range\",\n  \"control\",\n  \"markerGroup\",\n  \"marker\",\n  \"draggingIndicator\"\n);\nvar parts = anatomy.build();\nfunction getBounds(value) {\n  const firstValue = value[0];\n  const lastThumb = value[value.length - 1];\n  return [firstValue, lastThumb];\n}\nfunction getRangeOffsets(ctx) {\n  const [firstPercent, lastPercent] = getBounds(ctx.valuePercent);\n  if (ctx.valuePercent.length === 1) {\n    if (ctx.origin === \"center\") {\n      const isNegative = ctx.valuePercent[0] < 50;\n      const start = isNegative ? `${ctx.valuePercent[0]}%` : \"50%\";\n      const end = isNegative ? \"50%\" : `${100 - ctx.valuePercent[0]}%`;\n      return { start, end };\n    }\n    return { start: \"0%\", end: `${100 - lastPercent}%` };\n  }\n  return { start: `${firstPercent}%`, end: `${100 - lastPercent}%` };\n}\nfunction getRangeStyle(ctx) {\n  if (ctx.isVertical) {\n    return {\n      position: \"absolute\",\n      bottom: \"var(--slider-range-start)\",\n      top: \"var(--slider-range-end)\"\n    };\n  }\n  return {\n    position: \"absolute\",\n    [ctx.isRtl ? \"right\" : \"left\"]: \"var(--slider-range-start)\",\n    [ctx.isRtl ? \"left\" : \"right\"]: \"var(--slider-range-end)\"\n  };\n}\nfunction getVerticalThumbOffset(ctx) {\n  const { height = 0 } = ctx.thumbSize ?? {};\n  const getValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.getValueTransformer)([ctx.min, ctx.max], [-height / 2, height / 2]);\n  return parseFloat(getValue(ctx.value).toFixed(2));\n}\nfunction getHorizontalThumbOffset(ctx) {\n  const { width = 0 } = ctx.thumbSize ?? {};\n  if (ctx.isRtl) {\n    const getValue2 = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.getValueTransformer)([ctx.max, ctx.min], [-width / 2, width / 2]);\n    return -1 * parseFloat(getValue2(ctx.value).toFixed(2));\n  }\n  const getValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.getValueTransformer)([ctx.min, ctx.max], [-width / 2, width / 2]);\n  return parseFloat(getValue(ctx.value).toFixed(2));\n}\nfunction getOffset(ctx, percent) {\n  if (ctx.thumbAlignment === \"center\") return `${percent}%`;\n  const offset = ctx.isVertical ? getVerticalThumbOffset(ctx) : getHorizontalThumbOffset(ctx);\n  return `calc(${percent}% - ${offset}px)`;\n}\nfunction getThumbOffset(ctx) {\n  let percent = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.getValuePercent)(ctx.value, ctx.min, ctx.max) * 100;\n  return getOffset(ctx, percent);\n}\nfunction getVisibility(ctx) {\n  let visibility = \"visible\";\n  if (ctx.thumbAlignment === \"contain\" && !ctx.hasMeasuredThumbSize) {\n    visibility = \"hidden\";\n  }\n  return visibility;\n}\nfunction getThumbStyle(ctx, index) {\n  const placementProp = ctx.isVertical ? \"bottom\" : \"insetInlineStart\";\n  return {\n    visibility: getVisibility(ctx),\n    position: \"absolute\",\n    transform: \"var(--slider-thumb-transform)\",\n    [placementProp]: `var(--slider-thumb-offset-${index})`\n  };\n}\nfunction getControlStyle() {\n  return {\n    touchAction: \"none\",\n    userSelect: \"none\",\n    WebkitUserSelect: \"none\",\n    position: \"relative\"\n  };\n}\nfunction getRootStyle(ctx) {\n  const range = getRangeOffsets(ctx);\n  const offsetStyles = ctx.value.reduce((styles, value, index) => {\n    const offset = getThumbOffset({ ...ctx, value });\n    return { ...styles, [`--slider-thumb-offset-${index}`]: offset };\n  }, {});\n  return {\n    ...offsetStyles,\n    \"--slider-thumb-transform\": ctx.isVertical ? \"translateY(50%)\" : ctx.isRtl ? \"translateX(50%)\" : \"translateX(-50%)\",\n    \"--slider-range-start\": range.start,\n    \"--slider-range-end\": range.end\n  };\n}\nfunction getMarkerStyle(ctx, value) {\n  return {\n    // @ts-expect-error\n    visibility: getVisibility(ctx),\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    // @ts-expect-error\n    [ctx.isHorizontal ? \"insetInlineStart\" : \"bottom\"]: getThumbOffset({ ...ctx, value }),\n    translate: \"var(--tx) var(--ty)\",\n    \"--tx\": ctx.isHorizontal ? ctx.isRtl ? \"50%\" : \"-50%\" : \"0%\",\n    \"--ty\": !ctx.isHorizontal ? \"50%\" : \"0%\"\n  };\n}\nfunction getMarkerGroupStyle() {\n  return {\n    userSelect: \"none\",\n    WebkitUserSelect: \"none\",\n    pointerEvents: \"none\",\n    position: \"relative\"\n  };\n}\nvar styleGetterFns = {\n  getRootStyle,\n  getControlStyle,\n  getThumbStyle,\n  getRangeStyle,\n  getMarkerStyle,\n  getMarkerGroupStyle\n};\n\n// src/slider.dom.ts\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.createScope)({\n  ...styleGetterFns,\n  getRootId: (ctx) => ctx.ids?.root ?? `slider:${ctx.id}`,\n  getThumbId: (ctx, index) => ctx.ids?.thumb?.(index) ?? `slider:${ctx.id}:thumb:${index}`,\n  getHiddenInputId: (ctx, index) => ctx.ids?.hiddenInput?.(index) ?? `slider:${ctx.id}:input:${index}`,\n  getControlId: (ctx) => ctx.ids?.control ?? `slider:${ctx.id}:control`,\n  getTrackId: (ctx) => ctx.ids?.track ?? `slider:${ctx.id}:track`,\n  getRangeId: (ctx) => ctx.ids?.range ?? `slider:${ctx.id}:range`,\n  getLabelId: (ctx) => ctx.ids?.label ?? `slider:${ctx.id}:label`,\n  getValueTextId: (ctx) => ctx.ids?.valueText ?? `slider:${ctx.id}:value-text`,\n  getMarkerId: (ctx, value) => ctx.ids?.marker?.(value) ?? `slider:${ctx.id}:marker:${value}`,\n  getRootEl: (ctx) => dom.getById(ctx, dom.getRootId(ctx)),\n  getThumbEl: (ctx, index) => dom.getById(ctx, dom.getThumbId(ctx, index)),\n  getHiddenInputEl: (ctx, index) => dom.getById(ctx, dom.getHiddenInputId(ctx, index)),\n  getControlEl: (ctx) => dom.getById(ctx, dom.getControlId(ctx)),\n  getElements: (ctx) => (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.queryAll)(dom.getControlEl(ctx), \"[role=slider]\"),\n  getFirstEl: (ctx) => dom.getElements(ctx)[0],\n  getRangeEl: (ctx) => dom.getById(ctx, dom.getRangeId(ctx)),\n  getValueFromPoint(ctx, point) {\n    const controlEl = dom.getControlEl(ctx);\n    if (!controlEl) return;\n    const relativePoint = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.getRelativePoint)(point, controlEl);\n    const percent = relativePoint.getPercentValue({\n      orientation: ctx.orientation,\n      dir: ctx.dir,\n      inverted: { y: true }\n    });\n    return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.getPercentValue)(percent, ctx.min, ctx.max, ctx.step);\n  },\n  dispatchChangeEvent(ctx) {\n    const valueArray = Array.from(ctx.value);\n    valueArray.forEach((value, index) => {\n      const inputEl = dom.getHiddenInputEl(ctx, index);\n      if (!inputEl) return;\n      (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dispatchInputValueEvent)(inputEl, { value });\n    });\n  }\n});\nfunction normalizeValues(ctx, nextValues) {\n  return nextValues.map((value, index, values) => {\n    return constrainValue({ ...ctx, value: values }, value, index);\n  });\n}\nfunction getRangeAtIndex(ctx, index) {\n  return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.getValueRanges)(ctx.value, ctx.min, ctx.max, ctx.minStepsBetweenThumbs)[index];\n}\nfunction constrainValue(ctx, value, index) {\n  const range = getRangeAtIndex(ctx, index);\n  const snapValue = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.snapValueToStep)(value, ctx.min, ctx.max, ctx.step);\n  return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.clampValue)(snapValue, range.min, range.max);\n}\nfunction decrement(ctx, index, step) {\n  const idx = index ?? ctx.focusedIndex;\n  const range = getRangeAtIndex(ctx, idx);\n  const nextValues = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.getPreviousStepValue)(idx, {\n    ...range,\n    step: step ?? ctx.step,\n    values: ctx.value\n  });\n  nextValues[idx] = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.clampValue)(nextValues[idx], range.min, range.max);\n  return nextValues;\n}\nfunction increment(ctx, index, step) {\n  const idx = index ?? ctx.focusedIndex;\n  const range = getRangeAtIndex(ctx, idx);\n  const nextValues = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.getNextStepValue)(idx, {\n    ...range,\n    step: step ?? ctx.step,\n    values: ctx.value\n  });\n  nextValues[idx] = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.clampValue)(nextValues[idx], range.min, range.max);\n  return nextValues;\n}\nfunction getClosestIndex(ctx, pointValue) {\n  return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.getClosestValueIndex)(ctx.value, pointValue);\n}\nfunction assignArray(current, next) {\n  for (let i = 0; i < next.length; i++) {\n    const value = next[i];\n    current[i] = value;\n  }\n}\n\n// src/slider.connect.ts\nfunction connect(state, send, normalize) {\n  const ariaLabel = state.context[\"aria-label\"];\n  const ariaLabelledBy = state.context[\"aria-labelledby\"];\n  const sliderValue = state.context.value;\n  const focused = state.matches(\"focus\");\n  const dragging = state.matches(\"dragging\");\n  const disabled = state.context.isDisabled;\n  const invalid = state.context.invalid;\n  const interactive = state.context.isInteractive;\n  const isHorizontal = state.context.orientation === \"horizontal\";\n  const isVertical = state.context.orientation === \"vertical\";\n  function getValuePercentFn(value) {\n    return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.getValuePercent)(value, state.context.min, state.context.max);\n  }\n  function getPercentValueFn(percent) {\n    return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.getPercentValue)(percent, state.context.min, state.context.max, state.context.step);\n  }\n  return {\n    value: state.context.value,\n    dragging,\n    focused,\n    setValue(value) {\n      send({ type: \"SET_VALUE\", value });\n    },\n    getThumbValue(index) {\n      return sliderValue[index];\n    },\n    setThumbValue(index, value) {\n      send({ type: \"SET_VALUE\", index, value });\n    },\n    getValuePercent: getValuePercentFn,\n    getPercentValue: getPercentValueFn,\n    getThumbPercent(index) {\n      return getValuePercentFn(sliderValue[index]);\n    },\n    setThumbPercent(index, percent) {\n      const value = getPercentValueFn(percent);\n      send({ type: \"SET_VALUE\", index, value });\n    },\n    getThumbMin(index) {\n      return getRangeAtIndex(state.context, index).min;\n    },\n    getThumbMax(index) {\n      return getRangeAtIndex(state.context, index).max;\n    },\n    increment(index) {\n      send({ type: \"INCREMENT\", index });\n    },\n    decrement(index) {\n      send({ type: \"DECREMENT\", index });\n    },\n    focus() {\n      if (!interactive) return;\n      send({ type: \"FOCUS\", index: 0 });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(disabled),\n        \"data-orientation\": state.context.orientation,\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(invalid),\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(dragging),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(focused),\n        id: dom.getLabelId(state.context),\n        htmlFor: dom.getHiddenInputId(state.context, 0),\n        onClick(event) {\n          if (!interactive) return;\n          event.preventDefault();\n          dom.getFirstEl(state.context)?.focus();\n        },\n        style: {\n          userSelect: \"none\",\n          WebkitUserSelect: \"none\"\n        }\n      });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(disabled),\n        \"data-orientation\": state.context.orientation,\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(dragging),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(invalid),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(focused),\n        id: dom.getRootId(state.context),\n        dir: state.context.dir,\n        style: dom.getRootStyle(state.context)\n      });\n    },\n    getValueTextProps() {\n      return normalize.element({\n        ...parts.valueText.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(disabled),\n        \"data-orientation\": state.context.orientation,\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(invalid),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(focused),\n        id: dom.getValueTextId(state.context)\n      });\n    },\n    getTrackProps() {\n      return normalize.element({\n        ...parts.track.attrs,\n        dir: state.context.dir,\n        id: dom.getTrackId(state.context),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(disabled),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(invalid),\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(dragging),\n        \"data-orientation\": state.context.orientation,\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(focused),\n        style: { position: \"relative\" }\n      });\n    },\n    getThumbProps(props2) {\n      const { index = 0, name } = props2;\n      const value = sliderValue[index];\n      const range = getRangeAtIndex(state.context, index);\n      const valueText = state.context.getAriaValueText?.({ value, index });\n      const _ariaLabel = Array.isArray(ariaLabel) ? ariaLabel[index] : ariaLabel;\n      const _ariaLabelledBy = Array.isArray(ariaLabelledBy) ? ariaLabelledBy[index] : ariaLabelledBy;\n      return normalize.element({\n        ...parts.thumb.attrs,\n        dir: state.context.dir,\n        \"data-index\": index,\n        \"data-name\": name,\n        id: dom.getThumbId(state.context, index),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(disabled),\n        \"data-orientation\": state.context.orientation,\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(focused && state.context.focusedIndex === index),\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(dragging && state.context.focusedIndex === index),\n        draggable: false,\n        \"aria-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.ariaAttr)(disabled),\n        \"aria-label\": _ariaLabel,\n        \"aria-labelledby\": _ariaLabelledBy ?? dom.getLabelId(state.context),\n        \"aria-orientation\": state.context.orientation,\n        \"aria-valuemax\": range.max,\n        \"aria-valuemin\": range.min,\n        \"aria-valuenow\": sliderValue[index],\n        \"aria-valuetext\": valueText,\n        role: \"slider\",\n        tabIndex: disabled ? void 0 : 0,\n        style: dom.getThumbStyle(state.context, index),\n        onPointerDown(event) {\n          if (!interactive) return;\n          send({ type: \"THUMB_POINTER_DOWN\", index });\n          event.stopPropagation();\n        },\n        onBlur() {\n          if (!interactive) return;\n          send(\"BLUR\");\n        },\n        onFocus() {\n          if (!interactive) return;\n          send({ type: \"FOCUS\", index });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          const step = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.getEventStep)(event) * state.context.step;\n          const keyMap = {\n            ArrowUp() {\n              if (isHorizontal) return;\n              send({ type: \"ARROW_INC\", step, src: \"ArrowUp\" });\n            },\n            ArrowDown() {\n              if (isHorizontal) return;\n              send({ type: \"ARROW_DEC\", step, src: \"ArrowDown\" });\n            },\n            ArrowLeft() {\n              if (isVertical) return;\n              send({ type: \"ARROW_DEC\", step, src: \"ArrowLeft\" });\n            },\n            ArrowRight() {\n              if (isVertical) return;\n              send({ type: \"ARROW_INC\", step, src: \"ArrowRight\" });\n            },\n            PageUp() {\n              send({ type: \"ARROW_INC\", step, src: \"PageUp\" });\n            },\n            PageDown() {\n              send({ type: \"ARROW_DEC\", step, src: \"PageDown\" });\n            },\n            Home() {\n              send(\"HOME\");\n            },\n            End() {\n              send(\"END\");\n            }\n          };\n          const key = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.getEventKey)(event, state.context);\n          const exec = keyMap[key];\n          if (exec) {\n            exec(event);\n            event.preventDefault();\n            event.stopPropagation();\n          }\n        }\n      });\n    },\n    getHiddenInputProps(props2) {\n      const { index = 0, name } = props2;\n      return normalize.input({\n        name: name ?? (state.context.name ? state.context.name + (state.context.value.length > 1 ? \"[]\" : \"\") : void 0),\n        form: state.context.form,\n        type: \"text\",\n        hidden: true,\n        defaultValue: state.context.value[index],\n        id: dom.getHiddenInputId(state.context, index)\n      });\n    },\n    getRangeProps() {\n      return normalize.element({\n        id: dom.getRangeId(state.context),\n        ...parts.range.attrs,\n        dir: state.context.dir,\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(dragging),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(focused),\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(invalid),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(disabled),\n        \"data-orientation\": state.context.orientation,\n        style: dom.getRangeStyle(state.context)\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        dir: state.context.dir,\n        id: dom.getControlId(state.context),\n        \"data-dragging\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(dragging),\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(disabled),\n        \"data-orientation\": state.context.orientation,\n        \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(invalid),\n        \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(focused),\n        style: dom.getControlStyle(),\n        onPointerDown(event) {\n          if (!interactive) return;\n          if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.isLeftClick)(event)) return;\n          if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.isModifierKey)(event)) return;\n          const point = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.getEventPoint)(event);\n          send({ type: \"POINTER_DOWN\", point });\n          event.preventDefault();\n          event.stopPropagation();\n        }\n      });\n    },\n    getMarkerGroupProps() {\n      return normalize.element({\n        ...parts.markerGroup.attrs,\n        role: \"presentation\",\n        dir: state.context.dir,\n        \"aria-hidden\": true,\n        \"data-orientation\": state.context.orientation,\n        style: dom.getMarkerGroupStyle()\n      });\n    },\n    getMarkerProps(props2) {\n      const style = dom.getMarkerStyle(state.context, props2.value);\n      let markerState;\n      const first = state.context.value[0];\n      const last = state.context.value[state.context.value.length - 1];\n      if (props2.value < first) {\n        markerState = \"under-value\";\n      } else if (props2.value > last) {\n        markerState = \"over-value\";\n      } else {\n        markerState = \"at-value\";\n      }\n      return normalize.element({\n        ...parts.marker.attrs,\n        id: dom.getMarkerId(state.context, props2.value),\n        role: \"presentation\",\n        dir: state.context.dir,\n        \"data-orientation\": state.context.orientation,\n        \"data-value\": props2.value,\n        \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.dataAttr)(disabled),\n        \"data-state\": markerState,\n        style\n      });\n    },\n    getDraggingIndicatorProps(props2) {\n      const { index = 0 } = props2;\n      const isDragging = index === state.context.focusedIndex && dragging;\n      return normalize.element({\n        ...parts.draggingIndicator.attrs,\n        role: \"presentation\",\n        dir: state.context.dir,\n        hidden: !isDragging,\n        \"data-orientation\": state.context.orientation,\n        \"data-state\": isDragging ? \"open\" : \"closed\",\n        style: dom.getThumbStyle(state.context, index)\n      });\n    }\n  };\n}\nvar isEqualSize = (a, b) => {\n  return a?.width === b?.width && a?.height === b?.height;\n};\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)(\n    {\n      id: \"slider\",\n      initial: \"idle\",\n      context: {\n        thumbSize: null,\n        thumbAlignment: \"contain\",\n        min: 0,\n        max: 100,\n        step: 1,\n        value: [0],\n        origin: \"start\",\n        orientation: \"horizontal\",\n        dir: \"ltr\",\n        minStepsBetweenThumbs: 0,\n        disabled: false,\n        readOnly: false,\n        ...ctx,\n        focusedIndex: -1,\n        fieldsetDisabled: false\n      },\n      computed: {\n        isHorizontal: (ctx2) => ctx2.orientation === \"horizontal\",\n        isVertical: (ctx2) => ctx2.orientation === \"vertical\",\n        isRtl: (ctx2) => ctx2.orientation === \"horizontal\" && ctx2.dir === \"rtl\",\n        isDisabled: (ctx2) => !!ctx2.disabled || ctx2.fieldsetDisabled,\n        isInteractive: (ctx2) => !(ctx2.readOnly || ctx2.isDisabled),\n        hasMeasuredThumbSize: (ctx2) => ctx2.thumbSize != null,\n        valuePercent(ctx2) {\n          return ctx2.value.map((value) => 100 * (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.getValuePercent)(value, ctx2.min, ctx2.max));\n        }\n      },\n      watch: {\n        value: [\"syncInputElements\"]\n      },\n      entry: [\"coarseValue\"],\n      activities: [\"trackFormControlState\", \"trackThumbsSize\"],\n      on: {\n        SET_VALUE: [\n          {\n            guard: \"hasIndex\",\n            actions: \"setValueAtIndex\"\n          },\n          { actions: \"setValue\" }\n        ],\n        INCREMENT: {\n          actions: \"incrementThumbAtIndex\"\n        },\n        DECREMENT: {\n          actions: \"decrementThumbAtIndex\"\n        }\n      },\n      states: {\n        idle: {\n          on: {\n            POINTER_DOWN: {\n              target: \"dragging\",\n              actions: [\"setClosestThumbIndex\", \"setPointerValue\", \"focusActiveThumb\"]\n            },\n            FOCUS: {\n              target: \"focus\",\n              actions: \"setFocusedIndex\"\n            },\n            THUMB_POINTER_DOWN: {\n              target: \"dragging\",\n              actions: [\"setFocusedIndex\", \"focusActiveThumb\"]\n            }\n          }\n        },\n        focus: {\n          entry: \"focusActiveThumb\",\n          on: {\n            POINTER_DOWN: {\n              target: \"dragging\",\n              actions: [\"setClosestThumbIndex\", \"setPointerValue\", \"focusActiveThumb\"]\n            },\n            THUMB_POINTER_DOWN: {\n              target: \"dragging\",\n              actions: [\"setFocusedIndex\", \"focusActiveThumb\"]\n            },\n            ARROW_DEC: {\n              actions: [\"decrementThumbAtIndex\", \"invokeOnChangeEnd\"]\n            },\n            ARROW_INC: {\n              actions: [\"incrementThumbAtIndex\", \"invokeOnChangeEnd\"]\n            },\n            HOME: {\n              actions: [\"setFocusedThumbToMin\", \"invokeOnChangeEnd\"]\n            },\n            END: {\n              actions: [\"setFocusedThumbToMax\", \"invokeOnChangeEnd\"]\n            },\n            BLUR: {\n              target: \"idle\",\n              actions: \"clearFocusedIndex\"\n            }\n          }\n        },\n        dragging: {\n          entry: \"focusActiveThumb\",\n          activities: \"trackPointerMove\",\n          on: {\n            POINTER_UP: {\n              target: \"focus\",\n              actions: \"invokeOnChangeEnd\"\n            },\n            POINTER_MOVE: {\n              actions: \"setPointerValue\"\n            }\n          }\n        }\n      }\n    },\n    {\n      guards: {\n        hasIndex: (_ctx, evt) => evt.index != null\n      },\n      activities: {\n        trackFormControlState(ctx2, _evt, { initialContext }) {\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.trackFormControl)(dom.getRootEl(ctx2), {\n            onFieldsetDisabledChange(disabled) {\n              ctx2.fieldsetDisabled = disabled;\n            },\n            onFormReset() {\n              set.value(ctx2, initialContext.value);\n            }\n          });\n        },\n        trackPointerMove(ctx2, _evt, { send }) {\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.trackPointerMove)(dom.getDoc(ctx2), {\n            onPointerMove(info) {\n              send({ type: \"POINTER_MOVE\", point: info.point });\n            },\n            onPointerUp() {\n              send(\"POINTER_UP\");\n            }\n          });\n        },\n        trackThumbsSize(ctx2) {\n          if (ctx2.thumbAlignment !== \"contain\" || ctx2.thumbSize) return;\n          return (0,_zag_js_element_size__WEBPACK_IMPORTED_MODULE_4__.trackElementsSize)({\n            getNodes: () => dom.getElements(ctx2),\n            observeMutation: true,\n            callback(size) {\n              if (!size || isEqualSize(ctx2.thumbSize, size)) return;\n              ctx2.thumbSize = size;\n            }\n          });\n        }\n      },\n      actions: {\n        syncInputElements(ctx2) {\n          ctx2.value.forEach((value, index) => {\n            const inputEl = dom.getHiddenInputEl(ctx2, index);\n            dom.setValue(inputEl, value);\n          });\n        },\n        invokeOnChangeEnd(ctx2) {\n          invoke.valueChangeEnd(ctx2);\n        },\n        setClosestThumbIndex(ctx2, evt) {\n          const pointValue = dom.getValueFromPoint(ctx2, evt.point);\n          if (pointValue == null) return;\n          const focusedIndex = getClosestIndex(ctx2, pointValue);\n          set.focusedIndex(ctx2, focusedIndex);\n        },\n        setFocusedIndex(ctx2, evt) {\n          set.focusedIndex(ctx2, evt.index);\n        },\n        clearFocusedIndex(ctx2) {\n          set.focusedIndex(ctx2, -1);\n        },\n        setPointerValue(ctx2, evt) {\n          const pointerValue = dom.getValueFromPoint(ctx2, evt.point);\n          if (pointerValue == null) return;\n          const value = constrainValue(ctx2, pointerValue, ctx2.focusedIndex);\n          set.valueAtIndex(ctx2, ctx2.focusedIndex, value);\n        },\n        focusActiveThumb(ctx2) {\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_2__.raf)(() => {\n            const thumbEl = dom.getThumbEl(ctx2, ctx2.focusedIndex);\n            thumbEl?.focus({ preventScroll: true });\n          });\n        },\n        decrementThumbAtIndex(ctx2, evt) {\n          const value = decrement(ctx2, evt.index, evt.step);\n          set.value(ctx2, value);\n        },\n        incrementThumbAtIndex(ctx2, evt) {\n          const value = increment(ctx2, evt.index, evt.step);\n          set.value(ctx2, value);\n        },\n        setFocusedThumbToMin(ctx2) {\n          const { min } = getRangeAtIndex(ctx2, ctx2.focusedIndex);\n          set.valueAtIndex(ctx2, ctx2.focusedIndex, min);\n        },\n        setFocusedThumbToMax(ctx2) {\n          const { max } = getRangeAtIndex(ctx2, ctx2.focusedIndex);\n          set.valueAtIndex(ctx2, ctx2.focusedIndex, max);\n        },\n        coarseValue(ctx2) {\n          const value = normalizeValues(ctx2, ctx2.value);\n          set.value(ctx2, value);\n        },\n        setValueAtIndex(ctx2, evt) {\n          const value = constrainValue(ctx2, evt.value, evt.index);\n          set.valueAtIndex(ctx2, evt.index, value);\n        },\n        setValue(ctx2, evt) {\n          const value = normalizeValues(ctx2, evt.value);\n          set.value(ctx2, value);\n        }\n      }\n    }\n  );\n}\nvar invoke = {\n  valueChange(ctx) {\n    ctx.onValueChange?.({\n      value: Array.from(ctx.value)\n    });\n    dom.dispatchChangeEvent(ctx);\n  },\n  valueChangeEnd(ctx) {\n    ctx.onValueChangeEnd?.({\n      value: Array.from(ctx.value)\n    });\n  },\n  focusChange(ctx) {\n    ctx.onFocusChange?.({\n      value: Array.from(ctx.value),\n      focusedIndex: ctx.focusedIndex\n    });\n  }\n};\nvar set = {\n  valueAtIndex: (ctx, index, value) => {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isEqual)(ctx.value[index], value)) return;\n    ctx.value[index] = value;\n    invoke.valueChange(ctx);\n  },\n  value: (ctx, value) => {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isEqual)(ctx.value, value)) return;\n    assignArray(ctx.value, value);\n    invoke.valueChange(ctx);\n  },\n  focusedIndex: (ctx, index) => {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.isEqual)(ctx.focusedIndex, index)) return;\n    ctx.focusedIndex = index;\n    invoke.focusChange(ctx);\n  }\n};\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_5__.createProps)()([\n  \"aria-label\",\n  \"aria-labelledby\",\n  \"dir\",\n  \"disabled\",\n  \"form\",\n  \"getAriaValueText\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"invalid\",\n  \"max\",\n  \"min\",\n  \"minStepsBetweenThumbs\",\n  \"name\",\n  \"onFocusChange\",\n  \"onValueChange\",\n  \"onValueChangeEnd\",\n  \"orientation\",\n  \"origin\",\n  \"readOnly\",\n  \"step\",\n  \"thumbAlignment\",\n  \"thumbAlignment\",\n  \"thumbSize\",\n  \"value\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.createSplitProps)(props);\nvar thumbProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_5__.createProps)()([\"index\", \"name\"]);\nvar splitThumbProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_1__.createSplitProps)(thumbProps);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/slider/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/store/dist/index.mjs":
/*!***************************************************!*\
  !*** ./node_modules/@zag-js/store/dist/index.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clone: () => (/* binding */ clone),\n/* harmony export */   globalRef: () => (/* binding */ globalRef),\n/* harmony export */   proxy: () => (/* binding */ proxy),\n/* harmony export */   proxyWithComputed: () => (/* binding */ proxyWithComputed),\n/* harmony export */   ref: () => (/* binding */ ref),\n/* harmony export */   snapshot: () => (/* binding */ snapshot),\n/* harmony export */   subscribe: () => (/* binding */ subscribe)\n/* harmony export */ });\n/* harmony import */ var proxy_compare__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! proxy-compare */ \"(ssr)/./node_modules/proxy-compare/dist/index.js\");\n\n\n// src/global.ts\nfunction glob() {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n}\nfunction globalRef(key, value) {\n  const g = glob();\n  if (!g) return value();\n  g[key] || (g[key] = value());\n  return g[key];\n}\nvar refSet = globalRef(\"__zag__refSet\", () => /* @__PURE__ */ new WeakSet());\n\n// src/utils.ts\nvar isReactElement = (x) => typeof x === \"object\" && x !== null && \"$$typeof\" in x && \"props\" in x;\nvar isVueElement = (x) => typeof x === \"object\" && x !== null && \"__v_isVNode\" in x;\nvar isDOMElement = (x) => typeof x === \"object\" && x !== null && \"nodeType\" in x && typeof x.nodeName === \"string\";\nvar isElement = (x) => isReactElement(x) || isVueElement(x) || isDOMElement(x);\nvar isObject = (x) => x !== null && typeof x === \"object\";\nvar canProxy = (x) => isObject(x) && !refSet.has(x) && (Array.isArray(x) || !(Symbol.iterator in x)) && !isElement(x) && !(x instanceof WeakMap) && !(x instanceof WeakSet) && !(x instanceof Error) && !(x instanceof Number) && !(x instanceof Date) && !(x instanceof String) && !(x instanceof RegExp) && !(x instanceof ArrayBuffer) && !(x instanceof Promise);\nvar isDev = () => \"development\" !== \"production\";\n\n// src/clone.ts\nfunction set(obj, key, val) {\n  if (typeof val.value === \"object\" && !canProxy(val.value)) val.value = clone(val.value);\n  if (!val.enumerable || val.get || val.set || !val.configurable || !val.writable || key === \"__proto__\") {\n    Object.defineProperty(obj, key, val);\n  } else obj[key] = val.value;\n}\nfunction clone(x) {\n  if (typeof x !== \"object\") return x;\n  var i = 0, k, list, tmp, str = Object.prototype.toString.call(x);\n  if (str === \"[object Object]\") {\n    tmp = Object.create(Object.getPrototypeOf(x) || null);\n  } else if (str === \"[object Array]\") {\n    tmp = Array(x.length);\n  } else if (str === \"[object Set]\") {\n    tmp = /* @__PURE__ */ new Set();\n    x.forEach(function(val) {\n      tmp.add(clone(val));\n    });\n  } else if (str === \"[object Map]\") {\n    tmp = /* @__PURE__ */ new Map();\n    x.forEach(function(val, key) {\n      tmp.set(clone(key), clone(val));\n    });\n  } else if (str === \"[object Date]\") {\n    tmp = /* @__PURE__ */ new Date(+x);\n  } else if (str === \"[object RegExp]\") {\n    tmp = new RegExp(x.source, x.flags);\n  } else if (str === \"[object DataView]\") {\n    tmp = new x.constructor(clone(x.buffer));\n  } else if (str === \"[object ArrayBuffer]\") {\n    tmp = x.slice(0);\n  } else if (str === \"[object Blob]\") {\n    tmp = x.slice();\n  } else if (str.slice(-6) === \"Array]\") {\n    tmp = new x.constructor(x);\n  }\n  if (tmp) {\n    for (list = Object.getOwnPropertySymbols(x); i < list.length; i++) {\n      set(tmp, list[i], Object.getOwnPropertyDescriptor(x, list[i]));\n    }\n    for (i = 0, list = Object.getOwnPropertyNames(x); i < list.length; i++) {\n      if (Object.hasOwnProperty.call(tmp, k = list[i]) && tmp[k] === x[k]) continue;\n      set(tmp, k, Object.getOwnPropertyDescriptor(x, k));\n    }\n  }\n  return tmp || x;\n}\nvar proxyStateMap = globalRef(\"__zag__proxyStateMap\", () => /* @__PURE__ */ new WeakMap());\nvar buildProxyFunction = (objectIs = Object.is, newProxy = (target, handler) => new Proxy(target, handler), snapCache = /* @__PURE__ */ new WeakMap(), createSnapshot = (target, version) => {\n  const cache = snapCache.get(target);\n  if (cache?.[0] === version) {\n    return cache[1];\n  }\n  const snap = Array.isArray(target) ? [] : Object.create(Object.getPrototypeOf(target));\n  (0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.markToTrack)(snap, true);\n  snapCache.set(target, [version, snap]);\n  Reflect.ownKeys(target).forEach((key) => {\n    const value = Reflect.get(target, key);\n    if (refSet.has(value)) {\n      (0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.markToTrack)(value, false);\n      snap[key] = value;\n    } else if (proxyStateMap.has(value)) {\n      snap[key] = snapshot(value);\n    } else {\n      snap[key] = value;\n    }\n  });\n  return Object.freeze(snap);\n}, proxyCache = /* @__PURE__ */ new WeakMap(), versionHolder = [1, 1], proxyFunction2 = (initialObject) => {\n  if (!isObject(initialObject)) {\n    throw new Error(\"object required\");\n  }\n  const found = proxyCache.get(initialObject);\n  if (found) {\n    return found;\n  }\n  let version = versionHolder[0];\n  const listeners = /* @__PURE__ */ new Set();\n  const notifyUpdate = (op, nextVersion = ++versionHolder[0]) => {\n    if (version !== nextVersion) {\n      version = nextVersion;\n      listeners.forEach((listener) => listener(op, nextVersion));\n    }\n  };\n  let checkVersion = versionHolder[1];\n  const ensureVersion = (nextCheckVersion = ++versionHolder[1]) => {\n    if (checkVersion !== nextCheckVersion && !listeners.size) {\n      checkVersion = nextCheckVersion;\n      propProxyStates.forEach(([propProxyState]) => {\n        const propVersion = propProxyState[1](nextCheckVersion);\n        if (propVersion > version) {\n          version = propVersion;\n        }\n      });\n    }\n    return version;\n  };\n  const createPropListener = (prop) => (op, nextVersion) => {\n    const newOp = [...op];\n    newOp[1] = [prop, ...newOp[1]];\n    notifyUpdate(newOp, nextVersion);\n  };\n  const propProxyStates = /* @__PURE__ */ new Map();\n  const addPropListener = (prop, propProxyState) => {\n    if (isDev() && propProxyStates.has(prop)) {\n      throw new Error(\"prop listener already exists\");\n    }\n    if (listeners.size) {\n      const remove = propProxyState[3](createPropListener(prop));\n      propProxyStates.set(prop, [propProxyState, remove]);\n    } else {\n      propProxyStates.set(prop, [propProxyState]);\n    }\n  };\n  const removePropListener = (prop) => {\n    const entry = propProxyStates.get(prop);\n    if (entry) {\n      propProxyStates.delete(prop);\n      entry[1]?.();\n    }\n  };\n  const addListener = (listener) => {\n    listeners.add(listener);\n    if (listeners.size === 1) {\n      propProxyStates.forEach(([propProxyState, prevRemove], prop) => {\n        if (isDev() && prevRemove) {\n          throw new Error(\"remove already exists\");\n        }\n        const remove = propProxyState[3](createPropListener(prop));\n        propProxyStates.set(prop, [propProxyState, remove]);\n      });\n    }\n    const removeListener = () => {\n      listeners.delete(listener);\n      if (listeners.size === 0) {\n        propProxyStates.forEach(([propProxyState, remove], prop) => {\n          if (remove) {\n            remove();\n            propProxyStates.set(prop, [propProxyState]);\n          }\n        });\n      }\n    };\n    return removeListener;\n  };\n  const baseObject = Array.isArray(initialObject) ? [] : Object.create(Object.getPrototypeOf(initialObject));\n  const handler = {\n    deleteProperty(target, prop) {\n      const prevValue = Reflect.get(target, prop);\n      removePropListener(prop);\n      const deleted = Reflect.deleteProperty(target, prop);\n      if (deleted) {\n        notifyUpdate([\"delete\", [prop], prevValue]);\n      }\n      return deleted;\n    },\n    set(target, prop, value, receiver) {\n      const hasPrevValue = Reflect.has(target, prop);\n      const prevValue = Reflect.get(target, prop, receiver);\n      if (hasPrevValue && (objectIs(prevValue, value) || proxyCache.has(value) && objectIs(prevValue, proxyCache.get(value)))) {\n        return true;\n      }\n      removePropListener(prop);\n      if (isObject(value)) {\n        value = (0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.getUntracked)(value) || value;\n      }\n      let nextValue = value;\n      if (Object.getOwnPropertyDescriptor(target, prop)?.set) ; else {\n        if (!proxyStateMap.has(value) && canProxy(value)) {\n          nextValue = proxy(value);\n        }\n        const childProxyState = !refSet.has(nextValue) && proxyStateMap.get(nextValue);\n        if (childProxyState) {\n          addPropListener(prop, childProxyState);\n        }\n      }\n      Reflect.set(target, prop, nextValue, receiver);\n      notifyUpdate([\"set\", [prop], value, prevValue]);\n      return true;\n    }\n  };\n  const proxyObject = newProxy(baseObject, handler);\n  proxyCache.set(initialObject, proxyObject);\n  const proxyState = [baseObject, ensureVersion, createSnapshot, addListener];\n  proxyStateMap.set(proxyObject, proxyState);\n  Reflect.ownKeys(initialObject).forEach((key) => {\n    const desc = Object.getOwnPropertyDescriptor(initialObject, key);\n    if (desc.get || desc.set) {\n      Object.defineProperty(baseObject, key, desc);\n    } else {\n      proxyObject[key] = initialObject[key];\n    }\n  });\n  return proxyObject;\n}) => [\n  // public functions\n  proxyFunction2,\n  // shared state\n  proxyStateMap,\n  refSet,\n  // internal things\n  objectIs,\n  newProxy,\n  canProxy,\n  snapCache,\n  createSnapshot,\n  proxyCache,\n  versionHolder\n];\nvar [proxyFunction] = buildProxyFunction();\nfunction proxy(initialObject = {}) {\n  return proxyFunction(initialObject);\n}\nfunction subscribe(proxyObject, callback, notifyInSync) {\n  const proxyState = proxyStateMap.get(proxyObject);\n  if (isDev() && !proxyState) {\n    console.warn(\"Please use proxy object\");\n  }\n  let promise;\n  const ops = [];\n  const addListener = proxyState[3];\n  let isListenerActive = false;\n  const listener = (op) => {\n    ops.push(op);\n    if (notifyInSync) {\n      callback(ops.splice(0));\n      return;\n    }\n    if (!promise) {\n      promise = Promise.resolve().then(() => {\n        promise = void 0;\n        if (isListenerActive) {\n          callback(ops.splice(0));\n        }\n      });\n    }\n  };\n  const removeListener = addListener(listener);\n  isListenerActive = true;\n  return () => {\n    isListenerActive = false;\n    removeListener();\n  };\n}\nfunction snapshot(proxyObject) {\n  const proxyState = proxyStateMap.get(proxyObject);\n  if (isDev() && !proxyState) {\n    console.warn(\"Please use proxy object\");\n  }\n  const [target, ensureVersion, createSnapshot] = proxyState;\n  return createSnapshot(target, ensureVersion());\n}\nfunction ref(obj) {\n  refSet.add(obj);\n  return obj;\n}\n\n// src/proxy-computed.ts\nfunction proxyWithComputed(initialObject, computedFns) {\n  const keys = Object.keys(computedFns);\n  keys.forEach((key) => {\n    if (Object.getOwnPropertyDescriptor(initialObject, key)) {\n      throw new Error(\"object property already defined\");\n    }\n    const computedFn = computedFns[key];\n    const { get, set: set2 } = typeof computedFn === \"function\" ? { get: computedFn } : computedFn;\n    const desc = {};\n    desc.get = () => get(snapshot(proxyObject));\n    if (set2) {\n      desc.set = (newValue) => set2(proxyObject, newValue);\n    }\n    Object.defineProperty(initialObject, key, desc);\n  });\n  const proxyObject = proxy(initialObject);\n  return proxyObject;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/store/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/switch/dist/index.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@zag-js/switch/dist/index.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/focus-visible */ \"(ssr)/./node_modules/@zag-js/focus-visible/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n// src/switch.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"switch\").parts(\"root\", \"label\", \"control\", \"thumb\");\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getRootId: (ctx) => ctx.ids?.root ?? `switch:${ctx.id}`,\n  getLabelId: (ctx) => ctx.ids?.label ?? `switch:${ctx.id}:label`,\n  getThumbId: (ctx) => ctx.ids?.thumb ?? `switch:${ctx.id}:thumb`,\n  getControlId: (ctx) => ctx.ids?.control ?? `switch:${ctx.id}:control`,\n  getHiddenInputId: (ctx) => ctx.ids?.hiddenInput ?? `switch:${ctx.id}:input`,\n  getRootEl: (ctx) => dom.getById(ctx, dom.getRootId(ctx)),\n  getHiddenInputEl: (ctx) => dom.getById(ctx, dom.getHiddenInputId(ctx))\n});\n\n// src/switch.connect.ts\nfunction connect(state, send, normalize) {\n  const disabled = state.context.isDisabled;\n  const readOnly = state.context.readOnly;\n  const checked = state.context.checked;\n  const focused = !disabled && state.context.focused;\n  const focusVisible = !disabled && state.context.focusVisible;\n  const dataAttrs = {\n    \"data-active\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.active),\n    \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n    \"data-focus-visible\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focusVisible),\n    \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(readOnly),\n    \"data-hover\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.hovered),\n    \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n    \"data-state\": state.context.checked ? \"checked\" : \"unchecked\",\n    \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(state.context.invalid)\n  };\n  return {\n    checked,\n    disabled,\n    focused,\n    setChecked(checked2) {\n      send({ type: \"CHECKED.SET\", checked: checked2, isTrusted: false });\n    },\n    toggleChecked() {\n      send({ type: \"CHECKED.TOGGLE\", checked, isTrusted: false });\n    },\n    getRootProps() {\n      return normalize.label({\n        ...parts.root.attrs,\n        ...dataAttrs,\n        dir: state.context.dir,\n        id: dom.getRootId(state.context),\n        htmlFor: dom.getHiddenInputId(state.context),\n        onPointerMove() {\n          if (disabled) return;\n          send({ type: \"CONTEXT.SET\", context: { hovered: true } });\n        },\n        onPointerLeave() {\n          if (disabled) return;\n          send({ type: \"CONTEXT.SET\", context: { hovered: false } });\n        },\n        onClick(event) {\n          if (disabled) return;\n          const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event);\n          if (target === dom.getHiddenInputEl(state.context)) {\n            event.stopPropagation();\n          }\n        }\n      });\n    },\n    getLabelProps() {\n      return normalize.element({\n        ...parts.label.attrs,\n        ...dataAttrs,\n        dir: state.context.dir,\n        id: dom.getLabelId(state.context)\n      });\n    },\n    getThumbProps() {\n      return normalize.element({\n        ...parts.thumb.attrs,\n        ...dataAttrs,\n        dir: state.context.dir,\n        id: dom.getThumbId(state.context),\n        \"aria-hidden\": true\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        ...dataAttrs,\n        dir: state.context.dir,\n        id: dom.getControlId(state.context),\n        \"aria-hidden\": true\n      });\n    },\n    getHiddenInputProps() {\n      return normalize.input({\n        id: dom.getHiddenInputId(state.context),\n        type: \"checkbox\",\n        required: state.context.required,\n        defaultChecked: checked,\n        disabled,\n        \"aria-labelledby\": dom.getLabelId(state.context),\n        \"aria-invalid\": state.context.invalid,\n        name: state.context.name,\n        form: state.context.form,\n        value: state.context.value,\n        style: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.visuallyHiddenStyle,\n        onFocus() {\n          const focusVisible2 = (0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__.isFocusVisible)();\n          send({ type: \"CONTEXT.SET\", context: { focused: true, focusVisible: focusVisible2 } });\n        },\n        onBlur() {\n          send({ type: \"CONTEXT.SET\", context: { focused: false, focusVisible: false } });\n        },\n        onClick(event) {\n          if (readOnly) {\n            event.preventDefault();\n            return;\n          }\n          const checked2 = event.currentTarget.checked;\n          send({ type: \"CHECKED.SET\", checked: checked2, isTrusted: true });\n        }\n      });\n    }\n  };\n}\nvar { not } = _zag_js_core__WEBPACK_IMPORTED_MODULE_3__.guards;\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)(\n    {\n      id: \"switch\",\n      initial: \"ready\",\n      context: {\n        checked: false,\n        label: \"switch\",\n        value: \"on\",\n        disabled: false,\n        ...ctx,\n        fieldsetDisabled: false,\n        focusVisible: false\n      },\n      computed: {\n        isDisabled: (ctx2) => ctx2.disabled || ctx2.fieldsetDisabled\n      },\n      watch: {\n        disabled: \"removeFocusIfNeeded\",\n        checked: \"syncInputElement\"\n      },\n      activities: [\"trackFormControlState\", \"trackPressEvent\", \"trackFocusVisible\"],\n      on: {\n        \"CHECKED.TOGGLE\": [\n          {\n            guard: not(\"isTrusted\"),\n            actions: [\"toggleChecked\", \"dispatchChangeEvent\"]\n          },\n          {\n            actions: [\"toggleChecked\"]\n          }\n        ],\n        \"CHECKED.SET\": [\n          {\n            guard: not(\"isTrusted\"),\n            actions: [\"setChecked\", \"dispatchChangeEvent\"]\n          },\n          {\n            actions: [\"setChecked\"]\n          }\n        ],\n        \"CONTEXT.SET\": {\n          actions: [\"setContext\"]\n        }\n      },\n      states: {\n        ready: {}\n      }\n    },\n    {\n      guards: {\n        isTrusted: (_ctx, evt) => !!evt.isTrusted\n      },\n      activities: {\n        trackPressEvent(ctx2) {\n          if (ctx2.isDisabled) return;\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackPress)({\n            pointerNode: dom.getRootEl(ctx2),\n            keyboardNode: dom.getHiddenInputEl(ctx2),\n            isValidKey: (event) => event.key === \" \",\n            onPress: () => ctx2.active = false,\n            onPressStart: () => ctx2.active = true,\n            onPressEnd: () => ctx2.active = false\n          });\n        },\n        trackFocusVisible(ctx2) {\n          if (ctx2.isDisabled) return;\n          return (0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__.trackFocusVisible)({ root: dom.getRootNode(ctx2) });\n        },\n        trackFormControlState(ctx2, _evt, { send, initialContext }) {\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackFormControl)(dom.getHiddenInputEl(ctx2), {\n            onFieldsetDisabledChange(disabled) {\n              ctx2.fieldsetDisabled = disabled;\n            },\n            onFormReset() {\n              send({ type: \"CHECKED.SET\", checked: !!initialContext.checked, src: \"form-reset\" });\n            }\n          });\n        }\n      },\n      actions: {\n        setContext(ctx2, evt) {\n          Object.assign(ctx2, evt.context);\n        },\n        syncInputElement(ctx2) {\n          const inputEl = dom.getHiddenInputEl(ctx2);\n          if (!inputEl) return;\n          inputEl.checked = !!ctx2.checked;\n        },\n        removeFocusIfNeeded(ctx2) {\n          if (ctx2.disabled && ctx2.focused) {\n            ctx2.focused = false;\n          }\n        },\n        setChecked(ctx2, evt) {\n          set.checked(ctx2, evt.checked);\n        },\n        toggleChecked(ctx2, _evt) {\n          set.checked(ctx2, !ctx2.checked);\n        },\n        dispatchChangeEvent(ctx2) {\n          const inputEl = dom.getHiddenInputEl(ctx2);\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dispatchInputCheckedEvent)(inputEl, { checked: ctx2.checked });\n        }\n      }\n    }\n  );\n}\nvar invoke = {\n  change: (ctx) => {\n    ctx.onCheckedChange?.({ checked: ctx.checked });\n  }\n};\nvar set = {\n  checked: (ctx, checked) => {\n    if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.isEqual)(ctx.checked, checked)) return;\n    ctx.checked = checked;\n    invoke.change(ctx);\n  }\n};\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_5__.createProps)()([\n  \"checked\",\n  \"dir\",\n  \"disabled\",\n  \"form\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"invalid\",\n  \"label\",\n  \"name\",\n  \"onCheckedChange\",\n  \"readOnly\",\n  \"required\",\n  \"value\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/switch/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/tooltip/dist/index.mjs":
/*!*****************************************************!*\
  !*** ./node_modules/@zag-js/tooltip/dist/index.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/focus-visible */ \"(ssr)/./node_modules/@zag-js/focus-visible/dist/index.mjs\");\n/* harmony import */ var _zag_js_popper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/popper */ \"(ssr)/./node_modules/@zag-js/popper/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/store/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/@zag-js/types/dist/index.mjs\");\n\n\n\n\n\n\n\n\n// src/tooltip.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"tooltip\").parts(\"trigger\", \"arrow\", \"arrowTip\", \"positioner\", \"content\");\nvar parts = anatomy.build();\nvar dom = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.createScope)({\n  getTriggerId: (ctx) => ctx.ids?.trigger ?? `tooltip:${ctx.id}:trigger`,\n  getContentId: (ctx) => ctx.ids?.content ?? `tooltip:${ctx.id}:content`,\n  getArrowId: (ctx) => ctx.ids?.arrow ?? `tooltip:${ctx.id}:arrow`,\n  getPositionerId: (ctx) => ctx.ids?.positioner ?? `tooltip:${ctx.id}:popper`,\n  getTriggerEl: (ctx) => dom.getById(ctx, dom.getTriggerId(ctx)),\n  getContentEl: (ctx) => dom.getById(ctx, dom.getContentId(ctx)),\n  getPositionerEl: (ctx) => dom.getById(ctx, dom.getPositionerId(ctx)),\n  getArrowEl: (ctx) => dom.getById(ctx, dom.getArrowId(ctx))\n});\nvar store = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_2__.proxy)({\n  id: null,\n  prevId: null,\n  setId(val) {\n    this.prevId = this.id;\n    this.id = val;\n  }\n});\n\n// src/tooltip.connect.ts\nfunction connect(state, send, normalize) {\n  const id = state.context.id;\n  const hasAriaLabel = state.context.hasAriaLabel;\n  const open = state.hasTag(\"open\");\n  const triggerId = dom.getTriggerId(state.context);\n  const contentId = dom.getContentId(state.context);\n  const disabled = state.context.disabled;\n  const popperStyles = (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacementStyles)({\n    ...state.context.positioning,\n    placement: state.context.currentPlacement\n  });\n  return {\n    open,\n    setOpen(nextOpen) {\n      if (nextOpen === open) return;\n      send(nextOpen ? \"OPEN\" : \"CLOSE\");\n    },\n    reposition(options = {}) {\n      send({ type: \"POSITIONING.SET\", options });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        id: triggerId,\n        dir: state.context.dir,\n        \"data-expanded\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(open),\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-describedby\": open ? contentId : void 0,\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          if (!state.context.closeOnClick) return;\n          send({ type: \"CLOSE\", src: \"trigger.click\" });\n        },\n        onFocus(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          if (state.event.src === \"trigger.pointerdown\") return;\n          if (!(0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_4__.isFocusVisible)()) return;\n          send({ type: \"OPEN\", src: \"trigger.focus\" });\n        },\n        onBlur(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          if (id === store.id) {\n            send({ type: \"CLOSE\", src: \"trigger.blur\" });\n          }\n        },\n        onPointerDown(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          if (!state.context.closeOnPointerDown) return;\n          if (id === store.id) {\n            send({ type: \"CLOSE\", src: \"trigger.pointerdown\" });\n          }\n        },\n        onPointerMove(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          if (event.pointerType === \"touch\") return;\n          send(\"POINTER_MOVE\");\n        },\n        onPointerLeave() {\n          if (disabled) return;\n          send(\"POINTER_LEAVE\");\n        },\n        onPointerCancel() {\n          if (disabled) return;\n          send(\"POINTER_LEAVE\");\n        }\n      });\n    },\n    getArrowProps() {\n      return normalize.element({\n        id: dom.getArrowId(state.context),\n        ...parts.arrow.attrs,\n        dir: state.context.dir,\n        style: popperStyles.arrow\n      });\n    },\n    getArrowTipProps() {\n      return normalize.element({\n        ...parts.arrowTip.attrs,\n        dir: state.context.dir,\n        style: popperStyles.arrowTip\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        id: dom.getPositionerId(state.context),\n        ...parts.positioner.attrs,\n        dir: state.context.dir,\n        style: popperStyles.floating\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: state.context.dir,\n        hidden: !open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        role: hasAriaLabel ? void 0 : \"tooltip\",\n        id: hasAriaLabel ? void 0 : contentId,\n        \"data-placement\": state.context.currentPlacement,\n        onPointerEnter() {\n          send(\"CONTENT.POINTER_MOVE\");\n        },\n        onPointerLeave() {\n          send(\"CONTENT.POINTER_LEAVE\");\n        },\n        style: {\n          pointerEvents: state.context.interactive ? \"auto\" : \"none\"\n        }\n      });\n    }\n  };\n}\nvar { and, not } = _zag_js_core__WEBPACK_IMPORTED_MODULE_5__.guards;\nfunction machine(userContext) {\n  const ctx = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.compact)(userContext);\n  return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_5__.createMachine)(\n    {\n      id: \"tooltip\",\n      initial: ctx.open ? \"open\" : \"closed\",\n      activities: [\"trackFocusVisible\"],\n      context: {\n        openDelay: 1e3,\n        closeDelay: 500,\n        closeOnPointerDown: true,\n        closeOnEscape: true,\n        interactive: false,\n        closeOnScroll: true,\n        closeOnClick: true,\n        disabled: false,\n        ...ctx,\n        currentPlacement: void 0,\n        hasPointerMoveOpened: false,\n        positioning: {\n          placement: \"bottom\",\n          ...ctx.positioning\n        }\n      },\n      computed: {\n        hasAriaLabel: (ctx2) => !!ctx2[\"aria-label\"]\n      },\n      watch: {\n        disabled: [\"closeIfDisabled\"],\n        open: [\"toggleVisibility\"]\n      },\n      states: {\n        closed: {\n          tags: [\"closed\"],\n          entry: [\"clearGlobalId\"],\n          on: {\n            \"CONTROLLED.OPEN\": \"open\",\n            OPEN: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\"]\n              }\n            ],\n            POINTER_LEAVE: {\n              actions: [\"clearPointerMoveOpened\"]\n            },\n            POINTER_MOVE: [\n              {\n                guard: and(\"noVisibleTooltip\", not(\"hasPointerMoveOpened\")),\n                target: \"opening\"\n              },\n              {\n                guard: not(\"hasPointerMoveOpened\"),\n                target: \"open\",\n                actions: [\"setPointerMoveOpened\", \"invokeOnOpen\"]\n              }\n            ]\n          }\n        },\n        opening: {\n          tags: [\"closed\"],\n          activities: [\"trackScroll\", \"trackPointerlockChange\"],\n          after: {\n            OPEN_DELAY: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"setPointerMoveOpened\", \"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"setPointerMoveOpened\", \"invokeOnOpen\"]\n              }\n            ]\n          },\n          on: {\n            \"CONTROLLED.OPEN\": \"open\",\n            \"CONTROLLED.CLOSE\": \"closed\",\n            OPEN: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\"]\n              }\n            ],\n            POINTER_LEAVE: [\n              {\n                guard: \"isOpenControlled\",\n                // We trigger toggleVisibility manually since the `ctx.open` has not changed yet (at this point)\n                actions: [\"clearPointerMoveOpened\", \"invokeOnClose\", \"toggleVisibility\"]\n              },\n              {\n                target: \"closed\",\n                actions: [\"clearPointerMoveOpened\", \"invokeOnClose\"]\n              }\n            ],\n            CLOSE: [\n              {\n                guard: \"isOpenControlled\",\n                // We trigger toggleVisibility manually since the `ctx.open` has not changed yet (at this point)\n                actions: [\"invokeOnClose\", \"toggleVisibility\"]\n              },\n              {\n                target: \"closed\",\n                actions: [\"invokeOnClose\"]\n              }\n            ]\n          }\n        },\n        open: {\n          tags: [\"open\"],\n          activities: [\"trackEscapeKey\", \"trackScroll\", \"trackPointerlockChange\", \"trackPositioning\"],\n          entry: [\"setGlobalId\"],\n          on: {\n            \"CONTROLLED.CLOSE\": \"closed\",\n            CLOSE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                target: \"closed\",\n                actions: [\"invokeOnClose\"]\n              }\n            ],\n            POINTER_LEAVE: [\n              {\n                guard: \"isVisible\",\n                target: \"closing\",\n                actions: [\"clearPointerMoveOpened\"]\n              },\n              // == group ==\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"clearPointerMoveOpened\", \"invokeOnClose\"]\n              },\n              {\n                target: \"closed\",\n                actions: [\"clearPointerMoveOpened\", \"invokeOnClose\"]\n              }\n            ],\n            \"CONTENT.POINTER_LEAVE\": {\n              guard: \"isInteractive\",\n              target: \"closing\"\n            },\n            \"POSITIONING.SET\": {\n              actions: \"reposition\"\n            }\n          }\n        },\n        closing: {\n          tags: [\"open\"],\n          activities: [\"trackStore\", \"trackPositioning\"],\n          after: {\n            CLOSE_DELAY: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                target: \"closed\",\n                actions: [\"invokeOnClose\"]\n              }\n            ]\n          },\n          on: {\n            \"CONTROLLED.CLOSE\": \"closed\",\n            \"CONTROLLED.OPEN\": \"open\",\n            CLOSE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"]\n              },\n              {\n                target: \"closed\",\n                actions: [\"invokeOnClose\"]\n              }\n            ],\n            POINTER_MOVE: [\n              {\n                guard: \"isOpenControlled\",\n                // We trigger toggleVisibility manually since the `ctx.open` has not changed yet (at this point)\n                actions: [\"setPointerMoveOpened\", \"invokeOnOpen\", \"toggleVisibility\"]\n              },\n              {\n                target: \"open\",\n                actions: [\"setPointerMoveOpened\", \"invokeOnOpen\"]\n              }\n            ],\n            \"CONTENT.POINTER_MOVE\": {\n              guard: \"isInteractive\",\n              target: \"open\"\n            },\n            \"POSITIONING.SET\": {\n              actions: \"reposition\"\n            }\n          }\n        }\n      }\n    },\n    {\n      activities: {\n        trackFocusVisible(ctx2) {\n          return (0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_4__.trackFocusVisible)({ root: dom.getRootNode(ctx2) });\n        },\n        trackPositioning(ctx2) {\n          ctx2.currentPlacement || (ctx2.currentPlacement = ctx2.positioning.placement);\n          const getPositionerEl = () => dom.getPositionerEl(ctx2);\n          return (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacement)(dom.getTriggerEl(ctx2), getPositionerEl, {\n            ...ctx2.positioning,\n            defer: true,\n            onComplete(data) {\n              ctx2.currentPlacement = data.placement;\n            }\n          });\n        },\n        trackPointerlockChange(ctx2, _evt, { send }) {\n          const onChange = () => send({ type: \"CLOSE\", src: \"pointerlock:change\" });\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(dom.getDoc(ctx2), \"pointerlockchange\", onChange, false);\n        },\n        trackScroll(ctx2, _evt, { send }) {\n          if (!ctx2.closeOnScroll) return;\n          const triggerEl = dom.getTriggerEl(ctx2);\n          if (!triggerEl) return;\n          const overflowParents = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getOverflowAncestors)(triggerEl);\n          const cleanups = overflowParents.map((overflowParent) => {\n            const onScroll = () => {\n              send({ type: \"CLOSE\", src: \"scroll\" });\n            };\n            return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(overflowParent, \"scroll\", onScroll, { passive: true, capture: true });\n          });\n          return () => {\n            cleanups.forEach((fn) => fn?.());\n          };\n        },\n        trackStore(ctx2, _evt, { send }) {\n          return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_2__.subscribe)(store, () => {\n            if (store.id !== ctx2.id) {\n              send({ type: \"CLOSE\", src: \"id.change\" });\n            }\n          });\n        },\n        trackEscapeKey(ctx2, _evt, { send }) {\n          if (!ctx2.closeOnEscape) return;\n          const onKeyDown = (event) => {\n            if ((0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.isComposingEvent)(event)) return;\n            if (event.key !== \"Escape\") return;\n            event.stopPropagation();\n            send({ type: \"CLOSE\", src: \"keydown.escape\" });\n          };\n          return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.addDomEvent)(dom.getDoc(ctx2), \"keydown\", onKeyDown, true);\n        }\n      },\n      actions: {\n        setGlobalId(ctx2) {\n          store.setId(ctx2.id);\n        },\n        clearGlobalId(ctx2) {\n          if (ctx2.id === store.id) {\n            store.setId(null);\n          }\n        },\n        invokeOnOpen(ctx2) {\n          ctx2.onOpenChange?.({ open: true });\n        },\n        invokeOnClose(ctx2) {\n          ctx2.onOpenChange?.({ open: false });\n        },\n        closeIfDisabled(ctx2, _evt, { send }) {\n          if (!ctx2.disabled) return;\n          send({ type: \"CLOSE\", src: \"disabled.change\" });\n        },\n        reposition(ctx2, evt) {\n          const getPositionerEl = () => dom.getPositionerEl(ctx2);\n          (0,_zag_js_popper__WEBPACK_IMPORTED_MODULE_3__.getPlacement)(dom.getTriggerEl(ctx2), getPositionerEl, {\n            ...ctx2.positioning,\n            ...evt.options,\n            defer: true,\n            listeners: false,\n            onComplete(data) {\n              ctx2.currentPlacement = data.placement;\n            }\n          });\n        },\n        toggleVisibility(ctx2, evt, { send }) {\n          queueMicrotask(() => {\n            send({ type: ctx2.open ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\", previousEvent: evt });\n          });\n        },\n        setPointerMoveOpened(ctx2) {\n          ctx2.hasPointerMoveOpened = true;\n        },\n        clearPointerMoveOpened(ctx2) {\n          ctx2.hasPointerMoveOpened = false;\n        }\n      },\n      guards: {\n        noVisibleTooltip: () => store.id === null,\n        isVisible: (ctx2) => ctx2.id === store.id,\n        isInteractive: (ctx2) => ctx2.interactive,\n        hasPointerMoveOpened: (ctx2) => !!ctx2.hasPointerMoveOpened,\n        isOpenControlled: (ctx2) => !!ctx2[\"open.controlled\"]\n      },\n      delays: {\n        OPEN_DELAY: (ctx2) => ctx2.openDelay,\n        CLOSE_DELAY: (ctx2) => ctx2.closeDelay\n      }\n    }\n  );\n}\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_7__.createProps)()([\n  \"aria-label\",\n  \"closeDelay\",\n  \"closeOnEscape\",\n  \"closeOnPointerDown\",\n  \"closeOnScroll\",\n  \"closeOnClick\",\n  \"dir\",\n  \"disabled\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"interactive\",\n  \"onOpenChange\",\n  \"open.controlled\",\n  \"open\",\n  \"openDelay\",\n  \"positioning\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_6__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/tooltip/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/types/dist/index.mjs":
/*!***************************************************!*\
  !*** ./node_modules/@zag-js/types/dist/index.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNormalizer: () => (/* binding */ createNormalizer),\n/* harmony export */   createProps: () => (/* binding */ createProps)\n/* harmony export */ });\n// src/prop-types.ts\nfunction createNormalizer(fn) {\n  return new Proxy({}, {\n    get() {\n      return fn;\n    }\n  });\n}\n\n// src/create-props.ts\nvar createProps = () => (props) => Array.from(new Set(props));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHphZy1qcy90eXBlcy9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7O0FBRXlDIiwic291cmNlcyI6WyIvVXNlcnMvcGhpbGlhaGFtbW9uZC9EZXNrdG9wL2xlYXJuZXItYXBwLXN5c3RlbS9ub2RlX21vZHVsZXMvQHphZy1qcy90eXBlcy9kaXN0L2luZGV4Lm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvcHJvcC10eXBlcy50c1xuZnVuY3Rpb24gY3JlYXRlTm9ybWFsaXplcihmbikge1xuICByZXR1cm4gbmV3IFByb3h5KHt9LCB7XG4gICAgZ2V0KCkge1xuICAgICAgcmV0dXJuIGZuO1xuICAgIH1cbiAgfSk7XG59XG5cbi8vIHNyYy9jcmVhdGUtcHJvcHMudHNcbnZhciBjcmVhdGVQcm9wcyA9ICgpID0+IChwcm9wcykgPT4gQXJyYXkuZnJvbShuZXcgU2V0KHByb3BzKSk7XG5cbmV4cG9ydCB7IGNyZWF0ZU5vcm1hbGl6ZXIsIGNyZWF0ZVByb3BzIH07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/types/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/utils/dist/index.mjs":
/*!***************************************************!*\
  !*** ./node_modules/@zag-js/utils/dist/index.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   add: () => (/* binding */ add),\n/* harmony export */   addOrRemove: () => (/* binding */ addOrRemove),\n/* harmony export */   callAll: () => (/* binding */ callAll),\n/* harmony export */   cast: () => (/* binding */ cast),\n/* harmony export */   chunk: () => (/* binding */ chunk),\n/* harmony export */   clampPercent: () => (/* binding */ clampPercent),\n/* harmony export */   clampValue: () => (/* binding */ clampValue),\n/* harmony export */   clear: () => (/* binding */ clear),\n/* harmony export */   compact: () => (/* binding */ compact),\n/* harmony export */   createSplitProps: () => (/* binding */ createSplitProps),\n/* harmony export */   decrementValue: () => (/* binding */ decrementValue),\n/* harmony export */   first: () => (/* binding */ first),\n/* harmony export */   fromLength: () => (/* binding */ fromLength),\n/* harmony export */   getClosestValue: () => (/* binding */ getClosestValue),\n/* harmony export */   getClosestValueIndex: () => (/* binding */ getClosestValueIndex),\n/* harmony export */   getMaxValueAtIndex: () => (/* binding */ getMaxValueAtIndex),\n/* harmony export */   getMinValueAtIndex: () => (/* binding */ getMinValueAtIndex),\n/* harmony export */   getNextStepValue: () => (/* binding */ getNextStepValue),\n/* harmony export */   getPercentValue: () => (/* binding */ getPercentValue),\n/* harmony export */   getPreviousStepValue: () => (/* binding */ getPreviousStepValue),\n/* harmony export */   getValuePercent: () => (/* binding */ getValuePercent),\n/* harmony export */   getValueRanges: () => (/* binding */ getValueRanges),\n/* harmony export */   getValueSetterAtIndex: () => (/* binding */ getValueSetterAtIndex),\n/* harmony export */   getValueTransformer: () => (/* binding */ getValueTransformer),\n/* harmony export */   has: () => (/* binding */ has),\n/* harmony export */   hasProp: () => (/* binding */ hasProp),\n/* harmony export */   incrementValue: () => (/* binding */ incrementValue),\n/* harmony export */   insertAt: () => (/* binding */ insertAt),\n/* harmony export */   invariant: () => (/* binding */ invariant),\n/* harmony export */   isArray: () => (/* binding */ isArray),\n/* harmony export */   isBoolean: () => (/* binding */ isBoolean),\n/* harmony export */   isDev: () => (/* binding */ isDev),\n/* harmony export */   isEmpty: () => (/* binding */ isEmpty),\n/* harmony export */   isEqual: () => (/* binding */ isEqual),\n/* harmony export */   isFunction: () => (/* binding */ isFunction),\n/* harmony export */   isNaN: () => (/* binding */ isNaN),\n/* harmony export */   isNull: () => (/* binding */ isNull),\n/* harmony export */   isNumber: () => (/* binding */ isNumber),\n/* harmony export */   isObject: () => (/* binding */ isObject),\n/* harmony export */   isObjectLike: () => (/* binding */ isObjectLike),\n/* harmony export */   isPlainObject: () => (/* binding */ isPlainObject),\n/* harmony export */   isString: () => (/* binding */ isString),\n/* harmony export */   isValueAtMax: () => (/* binding */ isValueAtMax),\n/* harmony export */   isValueAtMin: () => (/* binding */ isValueAtMin),\n/* harmony export */   isValueWithinRange: () => (/* binding */ isValueWithinRange),\n/* harmony export */   json: () => (/* binding */ json),\n/* harmony export */   last: () => (/* binding */ last),\n/* harmony export */   match: () => (/* binding */ match),\n/* harmony export */   mod: () => (/* binding */ mod),\n/* harmony export */   nan: () => (/* binding */ nan),\n/* harmony export */   next: () => (/* binding */ next),\n/* harmony export */   nextIndex: () => (/* binding */ nextIndex),\n/* harmony export */   noop: () => (/* binding */ noop),\n/* harmony export */   omit: () => (/* binding */ omit),\n/* harmony export */   pick: () => (/* binding */ pick),\n/* harmony export */   prev: () => (/* binding */ prev),\n/* harmony export */   prevIndex: () => (/* binding */ prevIndex),\n/* harmony export */   remove: () => (/* binding */ remove),\n/* harmony export */   removeAt: () => (/* binding */ removeAt),\n/* harmony export */   roundToDpr: () => (/* binding */ roundToDpr),\n/* harmony export */   roundToStepPrecision: () => (/* binding */ roundToStepPrecision),\n/* harmony export */   roundValue: () => (/* binding */ roundValue),\n/* harmony export */   runIfFn: () => (/* binding */ runIfFn),\n/* harmony export */   setValueAtIndex: () => (/* binding */ setValueAtIndex),\n/* harmony export */   snapValueToStep: () => (/* binding */ snapValueToStep),\n/* harmony export */   splitProps: () => (/* binding */ splitProps),\n/* harmony export */   toArray: () => (/* binding */ toArray),\n/* harmony export */   toFixedNumber: () => (/* binding */ toFixedNumber),\n/* harmony export */   tryCatch: () => (/* binding */ tryCatch),\n/* harmony export */   uniq: () => (/* binding */ uniq),\n/* harmony export */   uuid: () => (/* binding */ uuid),\n/* harmony export */   warn: () => (/* binding */ warn),\n/* harmony export */   wrap: () => (/* binding */ wrap)\n/* harmony export */ });\n// src/array.ts\nfunction toArray(v) {\n  if (!v) return [];\n  return Array.isArray(v) ? v : [v];\n}\nvar fromLength = (length) => Array.from(Array(length).keys());\nvar first = (v) => v[0];\nvar last = (v) => v[v.length - 1];\nvar isEmpty = (v) => v.length === 0;\nvar has = (v, t) => v.indexOf(t) !== -1;\nvar add = (v, ...items) => v.concat(items);\nvar remove = (v, ...items) => v.filter((t) => !items.includes(t));\nvar removeAt = (v, i) => v.filter((_, idx) => idx !== i);\nvar insertAt = (v, i, ...items) => [...v.slice(0, i), ...items, ...v.slice(i)];\nvar uniq = (v) => Array.from(new Set(v));\nvar addOrRemove = (v, item) => {\n  if (has(v, item)) return remove(v, item);\n  return add(v, item);\n};\nfunction clear(v) {\n  while (v.length > 0) v.pop();\n  return v;\n}\nfunction nextIndex(v, idx, opts = {}) {\n  const { step = 1, loop = true } = opts;\n  const next2 = idx + step;\n  const len = v.length;\n  const last2 = len - 1;\n  if (idx === -1) return step > 0 ? 0 : last2;\n  if (next2 < 0) return loop ? last2 : 0;\n  if (next2 >= len) return loop ? 0 : idx > len ? len : idx;\n  return next2;\n}\nfunction next(v, idx, opts = {}) {\n  return v[nextIndex(v, idx, opts)];\n}\nfunction prevIndex(v, idx, opts = {}) {\n  const { step = 1, loop = true } = opts;\n  return nextIndex(v, idx, { step: -step, loop });\n}\nfunction prev(v, index, opts = {}) {\n  return v[prevIndex(v, index, opts)];\n}\nvar chunk = (v, size) => {\n  const res = [];\n  return v.reduce((rows, value, index) => {\n    if (index % size === 0) rows.push([value]);\n    else last(rows)?.push(value);\n    return rows;\n  }, res);\n};\n\n// src/equal.ts\nvar isArrayLike = (value) => value?.constructor.name === \"Array\";\nvar isArrayEqual = (a, b) => {\n  if (a.length !== b.length) return false;\n  for (let i = 0; i < a.length; i++) {\n    if (!isEqual(a[i], b[i])) return false;\n  }\n  return true;\n};\nvar isEqual = (a, b) => {\n  if (Object.is(a, b)) return true;\n  if (a == null && b != null || a != null && b == null) return false;\n  if (typeof a?.isEqual === \"function\" && typeof b?.isEqual === \"function\") {\n    return a.isEqual(b);\n  }\n  if (typeof a === \"function\" && typeof b === \"function\") {\n    return a.toString() === b.toString();\n  }\n  if (isArrayLike(a) && isArrayLike(b)) {\n    return isArrayEqual(Array.from(a), Array.from(b));\n  }\n  if (!(typeof a === \"object\") || !(typeof b === \"object\")) return false;\n  const keys = Object.keys(b ?? /* @__PURE__ */ Object.create(null));\n  const length = keys.length;\n  for (let i = 0; i < length; i++) {\n    const hasKey = Reflect.has(a, keys[i]);\n    if (!hasKey) return false;\n  }\n  for (let i = 0; i < length; i++) {\n    const key = keys[i];\n    if (!isEqual(a[key], b[key])) return false;\n  }\n  return true;\n};\n\n// src/functions.ts\nvar runIfFn = (v, ...a) => {\n  const res = typeof v === \"function\" ? v(...a) : v;\n  return res ?? void 0;\n};\nvar cast = (v) => v;\nvar noop = () => {\n};\nvar callAll = (...fns) => (...a) => {\n  fns.forEach(function(fn) {\n    fn?.(...a);\n  });\n};\nvar uuid = /* @__PURE__ */ (() => {\n  let id = 0;\n  return () => {\n    id++;\n    return id.toString(36);\n  };\n})();\nfunction match(key, record, ...args) {\n  if (key in record) {\n    const fn = record[key];\n    return typeof fn === \"function\" ? fn(...args) : fn;\n  }\n  const error = new Error(`No matching key: ${JSON.stringify(key)} in ${JSON.stringify(Object.keys(record))}`);\n  Error.captureStackTrace?.(error, match);\n  throw error;\n}\nvar tryCatch = (fn, fallback) => {\n  try {\n    return fn();\n  } catch (error) {\n    if (error instanceof Error) {\n      Error.captureStackTrace?.(error, tryCatch);\n    }\n    return fallback?.();\n  }\n};\n\n// src/guard.ts\nvar isDev = () => \"development\" !== \"production\";\nvar isArray = (v) => Array.isArray(v);\nvar isBoolean = (v) => v === true || v === false;\nvar isObjectLike = (v) => v != null && typeof v === \"object\";\nvar isObject = (v) => isObjectLike(v) && !isArray(v);\nvar isNumber = (v) => typeof v === \"number\" && !Number.isNaN(v);\nvar isString = (v) => typeof v === \"string\";\nvar isFunction = (v) => typeof v === \"function\";\nvar isNull = (v) => v == null;\nvar hasProp = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nvar baseGetTag = (v) => Object.prototype.toString.call(v);\nvar fnToString = Function.prototype.toString;\nvar objectCtorString = fnToString.call(Object);\nvar isPlainObject = (v) => {\n  if (!isObjectLike(v) || baseGetTag(v) != \"[object Object]\") return false;\n  const proto = Object.getPrototypeOf(v);\n  if (proto === null) return true;\n  const Ctor = hasProp(proto, \"constructor\") && proto.constructor;\n  return typeof Ctor == \"function\" && Ctor instanceof Ctor && fnToString.call(Ctor) == objectCtorString;\n};\n\n// src/number.ts\nvar { floor, abs, round, min, max, pow, sign } = Math;\nvar isNaN = (v) => Number.isNaN(v);\nvar nan = (v) => isNaN(v) ? 0 : v;\nvar mod = (v, m) => (v % m + m) % m;\nvar wrap = (v, vmax) => (v % vmax + vmax) % vmax;\nvar getMinValueAtIndex = (i, v, vmin) => i === 0 ? vmin : v[i - 1];\nvar getMaxValueAtIndex = (i, v, vmax) => i === v.length - 1 ? vmax : v[i + 1];\nvar isValueAtMax = (v, vmax) => nan(v) >= vmax;\nvar isValueAtMin = (v, vmin) => nan(v) <= vmin;\nvar isValueWithinRange = (v, vmin, vmax) => nan(v) >= vmin && nan(v) <= vmax;\nvar roundValue = (v, vmin, step) => round((nan(v) - vmin) / step) * step + vmin;\nvar clampValue = (v, vmin, vmax) => min(max(nan(v), vmin), vmax);\nvar clampPercent = (v) => clampValue(v, 0, 1);\nvar getValuePercent = (v, vmin, vmax) => (nan(v) - vmin) / (vmax - vmin);\nvar getPercentValue = (p, vmin, vmax, step) => clampValue(roundValue(p * (vmax - vmin) + vmin, vmin, step), vmin, vmax);\nvar roundToStepPrecision = (v, step) => {\n  let rv = v;\n  let ss = step.toString();\n  let pi = ss.indexOf(\".\");\n  let p = pi >= 0 ? ss.length - pi : 0;\n  if (p > 0) {\n    let pw = pow(10, p);\n    rv = round(rv * pw) / pw;\n  }\n  return rv;\n};\nvar roundToDpr = (v, dpr) => typeof dpr === \"number\" ? floor(v * dpr + 0.5) / dpr : round(v);\nvar snapValueToStep = (v, vmin, vmax, step) => {\n  vmin = Number(vmin);\n  vmax = Number(vmax);\n  let remainder = (v - (isNaN(vmin) ? 0 : vmin)) % step;\n  let sv = roundToStepPrecision(\n    abs(remainder) * 2 >= step ? v + sign(remainder) * (step - abs(remainder)) : v - remainder,\n    step\n  );\n  if (!isNaN(vmin)) {\n    if (sv < vmin) {\n      sv = vmin;\n    } else if (!isNaN(vmax) && sv > vmax) {\n      sv = vmin + floor(roundToStepPrecision((vmax - vmin) / step, step)) * step;\n    }\n  } else if (!isNaN(vmax) && sv > vmax) {\n    sv = vmin + floor(roundToStepPrecision((vmax - vmin) / step, step)) * step;\n  }\n  return roundToStepPrecision(sv, step);\n};\nvar setValueAtIndex = (vs, i, v) => {\n  if (vs[i] === v) return vs;\n  return [...vs.slice(0, i), v, ...vs.slice(i + 1)];\n};\nfunction getValueSetterAtIndex(index, ctx) {\n  const minValueAtIndex = getMinValueAtIndex(index, ctx.values, ctx.min);\n  const maxValueAtIndex = getMaxValueAtIndex(index, ctx.values, ctx.max);\n  let nextValues = ctx.values.slice();\n  return function setValue(value) {\n    let nextValue = snapValueToStep(value, minValueAtIndex, maxValueAtIndex, ctx.step);\n    nextValues = setValueAtIndex(nextValues, index, value);\n    nextValues[index] = nextValue;\n    return nextValues;\n  };\n}\nfunction getNextStepValue(index, ctx) {\n  const nextValue = ctx.values[index] + ctx.step;\n  return getValueSetterAtIndex(index, ctx)(nextValue);\n}\nfunction getPreviousStepValue(index, ctx) {\n  const nextValue = ctx.values[index] - ctx.step;\n  return getValueSetterAtIndex(index, ctx)(nextValue);\n}\nvar getClosestValueIndex = (vs, t) => {\n  let i = vs.findIndex((v) => t - v < 0);\n  if (i === 0) return i;\n  if (i === -1) return vs.length - 1;\n  let vLeft = vs[i - 1];\n  let vRight = vs[i];\n  if (abs(vLeft - t) < abs(vRight - t)) return i - 1;\n  return i;\n};\nvar getClosestValue = (vs, t) => vs[getClosestValueIndex(vs, t)];\nvar getValueRanges = (vs, vmin, vmax, gap) => vs.map((v, i) => ({\n  min: i === 0 ? vmin : vs[i - 1] + gap,\n  max: i === vs.length - 1 ? vmax : vs[i + 1] - gap,\n  value: v\n}));\nvar getValueTransformer = (va, vb) => {\n  const [a, b] = va;\n  const [c, d] = vb;\n  return (v) => a === b || c === d ? c : c + (d - c) / (b - a) * (v - a);\n};\nvar toFixedNumber = (v, d = 0, b = 10) => {\n  const pow2 = Math.pow(b, d);\n  return round(v * pow2) / pow2;\n};\nvar countDecimals = (value) => {\n  if (!Number.isFinite(value)) return 0;\n  let e = 1, p = 0;\n  while (Math.round(value * e) / e !== value) {\n    e *= 10;\n    p += 1;\n  }\n  return p;\n};\nvar decimalOp = (a, op, b) => {\n  let result = op === \"+\" ? a + b : a - b;\n  if (a % 1 !== 0 || b % 1 !== 0) {\n    const multiplier = 10 ** Math.max(countDecimals(a), countDecimals(b));\n    a = Math.round(a * multiplier);\n    b = Math.round(b * multiplier);\n    result = op === \"+\" ? a + b : a - b;\n    result /= multiplier;\n  }\n  return result;\n};\nvar incrementValue = (v, s) => decimalOp(nan(v), \"+\", s);\nvar decrementValue = (v, s) => decimalOp(nan(v), \"-\", s);\n\n// src/object.ts\nfunction compact(obj) {\n  if (!isPlainObject2(obj) || obj === void 0) return obj;\n  const keys = Reflect.ownKeys(obj).filter((key) => typeof key === \"string\");\n  const filtered = {};\n  for (const key of keys) {\n    const value = obj[key];\n    if (value !== void 0) {\n      filtered[key] = compact(value);\n    }\n  }\n  return filtered;\n}\nvar json = (v) => JSON.parse(JSON.stringify(v));\nvar isPlainObject2 = (v) => {\n  return v && typeof v === \"object\" && v.constructor === Object;\n};\nfunction pick(obj, keys) {\n  const filtered = {};\n  for (const key of keys) {\n    const value = obj[key];\n    if (value !== void 0) {\n      filtered[key] = value;\n    }\n  }\n  return filtered;\n}\nfunction splitProps(props, keys) {\n  const rest = {};\n  const result = {};\n  const keySet = new Set(keys);\n  for (const key in props) {\n    if (keySet.has(key)) {\n      result[key] = props[key];\n    } else {\n      rest[key] = props[key];\n    }\n  }\n  return [result, rest];\n}\nvar createSplitProps = (keys) => {\n  return function split(props) {\n    return splitProps(props, keys);\n  };\n};\nfunction omit(obj, keys) {\n  return createSplitProps(keys)(obj)[1];\n}\n\n// src/warning.ts\nfunction warn(...a) {\n  const m = a.length === 1 ? a[0] : a[1];\n  const c = a.length === 2 ? a[0] : true;\n  if (c && \"development\" !== \"production\") {\n    console.warn(m);\n  }\n}\nfunction invariant(...a) {\n  const m = a.length === 1 ? a[0] : a[1];\n  const c = a.length === 2 ? a[0] : true;\n  if (c && \"development\" !== \"production\") {\n    throw new Error(m);\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/utils/dist/index.mjs\n");

/***/ })

};
;
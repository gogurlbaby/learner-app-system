"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/proxy-memoize";
exports.ids = ["vendor-chunks/proxy-memoize"];
exports.modules = {

/***/ "(ssr)/./node_modules/proxy-memoize/dist/memoize.js":
/*!****************************************************!*\
  !*** ./node_modules/proxy-memoize/dist/memoize.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   memoize: () => (/* binding */ memoize)\n/* harmony export */ });\n/* harmony import */ var proxy_compare__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! proxy-compare */ \"(ssr)/./node_modules/proxy-compare/dist/index.js\");\n\n// This is required only for performance.\n// https://github.com/dai-shi/proxy-memoize/issues/68\nconst targetCache = new WeakMap();\n// constants from proxy-compare\nconst HAS_KEY_PROPERTY = 'h';\nconst ALL_OWN_KEYS_PROPERTY = 'w';\nconst HAS_OWN_KEY_PROPERTY = 'o';\nconst KEYS_PROPERTY = 'k';\nconst trackMemoUntrackedObjSet = new WeakSet();\nconst isObject = (x) => typeof x === 'object' && x !== null;\nconst untrack = (x, seen) => {\n    if (!isObject(x))\n        return x;\n    const untrackedObj = (0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.getUntracked)(x);\n    if (untrackedObj) {\n        (0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.trackMemo)(x);\n        trackMemoUntrackedObjSet.add(untrackedObj);\n        return untrackedObj;\n    }\n    if (!seen.has(x)) {\n        seen.add(x);\n        Object.entries(x).forEach(([k, v]) => {\n            const vv = untrack(v, seen);\n            if (!Object.is(vv, v))\n                x[k] = vv;\n        });\n    }\n    return x;\n};\nconst touchAffected = (dst, src, affected) => {\n    var _a, _b, _c;\n    if (!isObject(dst) || !isObject(src))\n        return;\n    const untrackedObj = (0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.getUntracked)(src);\n    const used = affected.get(untrackedObj || src);\n    if (!used) {\n        if (trackMemoUntrackedObjSet.has(untrackedObj)) {\n            (0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.trackMemo)(dst);\n        }\n        return;\n    }\n    (_a = used[HAS_KEY_PROPERTY]) === null || _a === void 0 ? void 0 : _a.forEach((key) => {\n        Reflect.has(dst, key);\n    });\n    if (used[ALL_OWN_KEYS_PROPERTY] === true) {\n        Reflect.ownKeys(dst);\n    }\n    (_b = used[HAS_OWN_KEY_PROPERTY]) === null || _b === void 0 ? void 0 : _b.forEach((key) => {\n        Reflect.getOwnPropertyDescriptor(dst, key);\n    });\n    (_c = used[KEYS_PROPERTY]) === null || _c === void 0 ? void 0 : _c.forEach((key) => {\n        touchAffected(dst[key], src[key], affected);\n    });\n};\nconst isOriginalEqual = (x, y) => {\n    for (let xx = x; xx; x = xx, xx = (0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.getUntracked)(xx))\n        ;\n    for (let yy = y; yy; y = yy, yy = (0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.getUntracked)(yy))\n        ;\n    return Object.is(x, y);\n};\n// properties\nconst OBJ_PROPERTY = 'o';\nconst RESULT_PROPERTY = 'r';\nconst AFFECTED_PROPERTY = 'a';\n/**\n * Create a memoized function\n *\n * @example\n * import { memoize } from 'proxy-memoize';\n *\n * const fn = memoize(obj => ({ sum: obj.a + obj.b, diff: obj.a - obj.b }));\n *\n * @param options\n * @param options.size - (default: 1)\n * @param options.noWeakMap - disable tier-1 cache (default: false)\n */\nfunction memoize(fn, options) {\n    var _a;\n    let memoListHead = 0;\n    const size = (_a = options === null || options === void 0 ? void 0 : options.size) !== null && _a !== void 0 ? _a : 1;\n    const memoList = [];\n    const resultCache = (options === null || options === void 0 ? void 0 : options.noWeakMap) ? null : new WeakMap();\n    const memoizedFn = (obj) => {\n        const cache = resultCache === null || resultCache === void 0 ? void 0 : resultCache.get(obj);\n        if (cache) {\n            return cache;\n        }\n        for (let i = 0; i < size; i += 1) {\n            const memo = memoList[(memoListHead + i) % size];\n            if (!memo)\n                break;\n            const { [OBJ_PROPERTY]: memoObj, [AFFECTED_PROPERTY]: memoAffected, [RESULT_PROPERTY]: memoResult, } = memo;\n            if (!(0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.isChanged)(memoObj, obj, memoAffected, new WeakMap(), isOriginalEqual)) {\n                touchAffected(obj, memoObj, memoAffected);\n                resultCache === null || resultCache === void 0 ? void 0 : resultCache.set(obj, memoResult);\n                return memoResult;\n            }\n        }\n        const affected = new WeakMap();\n        const proxy = (0,proxy_compare__WEBPACK_IMPORTED_MODULE_0__.createProxy)(obj, affected, undefined, targetCache);\n        const result = untrack(fn(proxy), new WeakSet());\n        touchAffected(obj, obj, affected);\n        const entry = {\n            [OBJ_PROPERTY]: obj,\n            [RESULT_PROPERTY]: result,\n            [AFFECTED_PROPERTY]: affected,\n        };\n        memoListHead = (memoListHead - 1 + size) % size;\n        memoList[memoListHead] = entry;\n        resultCache === null || resultCache === void 0 ? void 0 : resultCache.set(obj, result);\n        return result;\n    };\n    return memoizedFn;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcHJveHktbWVtb2l6ZS9kaXN0L21lbW9pemUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBZ0Y7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsMkRBQVk7QUFDckM7QUFDQSxRQUFRLHdEQUFTO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QiwyREFBWTtBQUNyQztBQUNBO0FBQ0E7QUFDQSxZQUFZLHdEQUFTO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxxQkFBcUIsSUFBSSxhQUFhLDJEQUFZO0FBQ2xEO0FBQ0EscUJBQXFCLElBQUksYUFBYSwyREFBWTtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxVQUFVO0FBQ3RCO0FBQ0EsZ0NBQWdDLHlDQUF5QztBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixVQUFVO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw2RkFBNkY7QUFDakgsaUJBQWlCLHdEQUFTO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwwREFBVztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvcGhpbGlhaGFtbW9uZC9EZXNrdG9wL2xlYXJuZXItYXBwLXN5c3RlbS9ub2RlX21vZHVsZXMvcHJveHktbWVtb2l6ZS9kaXN0L21lbW9pemUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlUHJveHksIGlzQ2hhbmdlZCwgZ2V0VW50cmFja2VkLCB0cmFja01lbW8gfSBmcm9tICdwcm94eS1jb21wYXJlJztcbi8vIFRoaXMgaXMgcmVxdWlyZWQgb25seSBmb3IgcGVyZm9ybWFuY2UuXG4vLyBodHRwczovL2dpdGh1Yi5jb20vZGFpLXNoaS9wcm94eS1tZW1vaXplL2lzc3Vlcy82OFxuY29uc3QgdGFyZ2V0Q2FjaGUgPSBuZXcgV2Vha01hcCgpO1xuLy8gY29uc3RhbnRzIGZyb20gcHJveHktY29tcGFyZVxuY29uc3QgSEFTX0tFWV9QUk9QRVJUWSA9ICdoJztcbmNvbnN0IEFMTF9PV05fS0VZU19QUk9QRVJUWSA9ICd3JztcbmNvbnN0IEhBU19PV05fS0VZX1BST1BFUlRZID0gJ28nO1xuY29uc3QgS0VZU19QUk9QRVJUWSA9ICdrJztcbmNvbnN0IHRyYWNrTWVtb1VudHJhY2tlZE9ialNldCA9IG5ldyBXZWFrU2V0KCk7XG5jb25zdCBpc09iamVjdCA9ICh4KSA9PiB0eXBlb2YgeCA9PT0gJ29iamVjdCcgJiYgeCAhPT0gbnVsbDtcbmNvbnN0IHVudHJhY2sgPSAoeCwgc2VlbikgPT4ge1xuICAgIGlmICghaXNPYmplY3QoeCkpXG4gICAgICAgIHJldHVybiB4O1xuICAgIGNvbnN0IHVudHJhY2tlZE9iaiA9IGdldFVudHJhY2tlZCh4KTtcbiAgICBpZiAodW50cmFja2VkT2JqKSB7XG4gICAgICAgIHRyYWNrTWVtbyh4KTtcbiAgICAgICAgdHJhY2tNZW1vVW50cmFja2VkT2JqU2V0LmFkZCh1bnRyYWNrZWRPYmopO1xuICAgICAgICByZXR1cm4gdW50cmFja2VkT2JqO1xuICAgIH1cbiAgICBpZiAoIXNlZW4uaGFzKHgpKSB7XG4gICAgICAgIHNlZW4uYWRkKHgpO1xuICAgICAgICBPYmplY3QuZW50cmllcyh4KS5mb3JFYWNoKChbaywgdl0pID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHZ2ID0gdW50cmFjayh2LCBzZWVuKTtcbiAgICAgICAgICAgIGlmICghT2JqZWN0LmlzKHZ2LCB2KSlcbiAgICAgICAgICAgICAgICB4W2tdID0gdnY7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4geDtcbn07XG5jb25zdCB0b3VjaEFmZmVjdGVkID0gKGRzdCwgc3JjLCBhZmZlY3RlZCkgPT4ge1xuICAgIHZhciBfYSwgX2IsIF9jO1xuICAgIGlmICghaXNPYmplY3QoZHN0KSB8fCAhaXNPYmplY3Qoc3JjKSlcbiAgICAgICAgcmV0dXJuO1xuICAgIGNvbnN0IHVudHJhY2tlZE9iaiA9IGdldFVudHJhY2tlZChzcmMpO1xuICAgIGNvbnN0IHVzZWQgPSBhZmZlY3RlZC5nZXQodW50cmFja2VkT2JqIHx8IHNyYyk7XG4gICAgaWYgKCF1c2VkKSB7XG4gICAgICAgIGlmICh0cmFja01lbW9VbnRyYWNrZWRPYmpTZXQuaGFzKHVudHJhY2tlZE9iaikpIHtcbiAgICAgICAgICAgIHRyYWNrTWVtbyhkc3QpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgKF9hID0gdXNlZFtIQVNfS0VZX1BST1BFUlRZXSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmZvckVhY2goKGtleSkgPT4ge1xuICAgICAgICBSZWZsZWN0Lmhhcyhkc3QsIGtleSk7XG4gICAgfSk7XG4gICAgaWYgKHVzZWRbQUxMX09XTl9LRVlTX1BST1BFUlRZXSA9PT0gdHJ1ZSkge1xuICAgICAgICBSZWZsZWN0Lm93bktleXMoZHN0KTtcbiAgICB9XG4gICAgKF9iID0gdXNlZFtIQVNfT1dOX0tFWV9QUk9QRVJUWV0pID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5mb3JFYWNoKChrZXkpID0+IHtcbiAgICAgICAgUmVmbGVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZHN0LCBrZXkpO1xuICAgIH0pO1xuICAgIChfYyA9IHVzZWRbS0VZU19QUk9QRVJUWV0pID09PSBudWxsIHx8IF9jID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYy5mb3JFYWNoKChrZXkpID0+IHtcbiAgICAgICAgdG91Y2hBZmZlY3RlZChkc3Rba2V5XSwgc3JjW2tleV0sIGFmZmVjdGVkKTtcbiAgICB9KTtcbn07XG5jb25zdCBpc09yaWdpbmFsRXF1YWwgPSAoeCwgeSkgPT4ge1xuICAgIGZvciAobGV0IHh4ID0geDsgeHg7IHggPSB4eCwgeHggPSBnZXRVbnRyYWNrZWQoeHgpKVxuICAgICAgICA7XG4gICAgZm9yIChsZXQgeXkgPSB5OyB5eTsgeSA9IHl5LCB5eSA9IGdldFVudHJhY2tlZCh5eSkpXG4gICAgICAgIDtcbiAgICByZXR1cm4gT2JqZWN0LmlzKHgsIHkpO1xufTtcbi8vIHByb3BlcnRpZXNcbmNvbnN0IE9CSl9QUk9QRVJUWSA9ICdvJztcbmNvbnN0IFJFU1VMVF9QUk9QRVJUWSA9ICdyJztcbmNvbnN0IEFGRkVDVEVEX1BST1BFUlRZID0gJ2EnO1xuLyoqXG4gKiBDcmVhdGUgYSBtZW1vaXplZCBmdW5jdGlvblxuICpcbiAqIEBleGFtcGxlXG4gKiBpbXBvcnQgeyBtZW1vaXplIH0gZnJvbSAncHJveHktbWVtb2l6ZSc7XG4gKlxuICogY29uc3QgZm4gPSBtZW1vaXplKG9iaiA9PiAoeyBzdW06IG9iai5hICsgb2JqLmIsIGRpZmY6IG9iai5hIC0gb2JqLmIgfSkpO1xuICpcbiAqIEBwYXJhbSBvcHRpb25zXG4gKiBAcGFyYW0gb3B0aW9ucy5zaXplIC0gKGRlZmF1bHQ6IDEpXG4gKiBAcGFyYW0gb3B0aW9ucy5ub1dlYWtNYXAgLSBkaXNhYmxlIHRpZXItMSBjYWNoZSAoZGVmYXVsdDogZmFsc2UpXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtZW1vaXplKGZuLCBvcHRpb25zKSB7XG4gICAgdmFyIF9hO1xuICAgIGxldCBtZW1vTGlzdEhlYWQgPSAwO1xuICAgIGNvbnN0IHNpemUgPSAoX2EgPSBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuc2l6ZSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogMTtcbiAgICBjb25zdCBtZW1vTGlzdCA9IFtdO1xuICAgIGNvbnN0IHJlc3VsdENhY2hlID0gKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5ub1dlYWtNYXApID8gbnVsbCA6IG5ldyBXZWFrTWFwKCk7XG4gICAgY29uc3QgbWVtb2l6ZWRGbiA9IChvYmopID0+IHtcbiAgICAgICAgY29uc3QgY2FjaGUgPSByZXN1bHRDYWNoZSA9PT0gbnVsbCB8fCByZXN1bHRDYWNoZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogcmVzdWx0Q2FjaGUuZ2V0KG9iaik7XG4gICAgICAgIGlmIChjYWNoZSkge1xuICAgICAgICAgICAgcmV0dXJuIGNhY2hlO1xuICAgICAgICB9XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2l6ZTsgaSArPSAxKSB7XG4gICAgICAgICAgICBjb25zdCBtZW1vID0gbWVtb0xpc3RbKG1lbW9MaXN0SGVhZCArIGkpICUgc2l6ZV07XG4gICAgICAgICAgICBpZiAoIW1lbW8pXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjb25zdCB7IFtPQkpfUFJPUEVSVFldOiBtZW1vT2JqLCBbQUZGRUNURURfUFJPUEVSVFldOiBtZW1vQWZmZWN0ZWQsIFtSRVNVTFRfUFJPUEVSVFldOiBtZW1vUmVzdWx0LCB9ID0gbWVtbztcbiAgICAgICAgICAgIGlmICghaXNDaGFuZ2VkKG1lbW9PYmosIG9iaiwgbWVtb0FmZmVjdGVkLCBuZXcgV2Vha01hcCgpLCBpc09yaWdpbmFsRXF1YWwpKSB7XG4gICAgICAgICAgICAgICAgdG91Y2hBZmZlY3RlZChvYmosIG1lbW9PYmosIG1lbW9BZmZlY3RlZCk7XG4gICAgICAgICAgICAgICAgcmVzdWx0Q2FjaGUgPT09IG51bGwgfHwgcmVzdWx0Q2FjaGUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHJlc3VsdENhY2hlLnNldChvYmosIG1lbW9SZXN1bHQpO1xuICAgICAgICAgICAgICAgIHJldHVybiBtZW1vUmVzdWx0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGFmZmVjdGVkID0gbmV3IFdlYWtNYXAoKTtcbiAgICAgICAgY29uc3QgcHJveHkgPSBjcmVhdGVQcm94eShvYmosIGFmZmVjdGVkLCB1bmRlZmluZWQsIHRhcmdldENhY2hlKTtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gdW50cmFjayhmbihwcm94eSksIG5ldyBXZWFrU2V0KCkpO1xuICAgICAgICB0b3VjaEFmZmVjdGVkKG9iaiwgb2JqLCBhZmZlY3RlZCk7XG4gICAgICAgIGNvbnN0IGVudHJ5ID0ge1xuICAgICAgICAgICAgW09CSl9QUk9QRVJUWV06IG9iaixcbiAgICAgICAgICAgIFtSRVNVTFRfUFJPUEVSVFldOiByZXN1bHQsXG4gICAgICAgICAgICBbQUZGRUNURURfUFJPUEVSVFldOiBhZmZlY3RlZCxcbiAgICAgICAgfTtcbiAgICAgICAgbWVtb0xpc3RIZWFkID0gKG1lbW9MaXN0SGVhZCAtIDEgKyBzaXplKSAlIHNpemU7XG4gICAgICAgIG1lbW9MaXN0W21lbW9MaXN0SGVhZF0gPSBlbnRyeTtcbiAgICAgICAgcmVzdWx0Q2FjaGUgPT09IG51bGwgfHwgcmVzdWx0Q2FjaGUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHJlc3VsdENhY2hlLnNldChvYmosIHJlc3VsdCk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfTtcbiAgICByZXR1cm4gbWVtb2l6ZWRGbjtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/proxy-memoize/dist/memoize.js\n");

/***/ })

};
;